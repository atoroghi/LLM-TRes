[
    {
        "number": 0,
        "query": "7 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Every real number is a number. Each complex number is imaginary. Real numbers are not imaginary. Each integer is a real number. Every natural number is an integer. Natural numbers are positive. Every prime number is a natural number. Each prime number is not composite. Mersenne primes are prime numbers. Mersenne primes are not composite. 7 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => ~composite(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 1,
        "query": "131071 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Real numbers are numbers. Every real number is not imaginary. Each integer is a real number. Natural numbers are integers. Each natural number is not negative. Every prime number is a natural number. Each prime number is prime. Mersenne primes are prime numbers. Every Mersenne prime is not composite. Complex numbers are imaginary. 131071 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => ~composite(x), FOR_ALL x, complex_number(x) => imaginary_number(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 2,
        "query": "Rex is not bony.",
        "query_fol": "~bony(x)",
        "context": "Every animal is multicellular. Each invertebrate is an animal. Protostomes are invertebrates. Every arthropod is a protostome. Each arthropod is not bony. Insects are arthropods. Insects are six-legged. Each lepidopteran is an insect. Every whale is bony. Butterflies are lepidopterans. Each painted lady is a butterfly. Rex is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 3,
        "query": "Sally is not furry.",
        "query_fol": "~furry(x)",
        "context": "Each animal is multicellular. Each bilaterian is an animal. Every snake is not furry. Each chordate is a bilaterian. Vertebrates are chordates. Each mammal is a vertebrate. Every mammal is furry. Every carnivore is a mammal. Carnivores are carnivorous. Felines are carnivores. Cats are felines. Each tabby is a cat. Sally is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, snake(x) => ~furry(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => furry(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 4,
        "query": "Max is not small.",
        "query_fol": "~small(x)",
        "context": "Each animal is not unicellular. Each invertebrate is an animal. Protostomes are invertebrates. Arthropods are protostomes. Arthropods are small. Every insect is an arthropod. Every insect is six-legged. Lepidopterans are insects. Butterflies are lepidopterans. Every whale is not small. Every painted lady is a butterfly. Max is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => small(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, whale(x) => ~small(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 5,
        "query": "Max is cold-blooded.",
        "query_fol": "cold_blooded(x)",
        "context": "Every animal is not unicellular. Each bilaterian is an animal. Every chordate is a bilaterian. Vertebrates are chordates. Each mammal is a vertebrate. Every mammal is not cold-blooded. Snakes are cold-blooded. Carnivores are mammals. Carnivores are carnivorous. Felines are carnivores. Every cat is a feline. Each tabby is a cat. Max is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => ~cold_blooded(x), FOR_ALL x, snake(x) => cold_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 6,
        "query": "Polly is not furry.",
        "query_fol": "~furry(x)",
        "context": "Each animal is not unicellular. Each snake is not furry. Bilaterians are animals. Each chordate is a bilaterian. Vertebrates are chordates. Every mammal is a vertebrate. Mammals are furry. Carnivores are mammals. Carnivores are carnivorous. Felines are carnivores. Cats are felines. Every tabby is a cat. Polly is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, snake(x) => ~furry(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => furry(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 7,
        "query": "Fae is furry.",
        "query_fol": "furry(x)",
        "context": "Animals are multicellular. Every bilaterian is an animal. Each chordate is a bilaterian. Vertebrates are chordates. Each mammal is a vertebrate. Every mammal is furry. Carnivores are mammals. Snakes are not furry. Carnivores are carnivorous. Felines are carnivores. Each cat is a feline. Tabbies are cats. Fae is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => furry(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, snake(x) => ~furry(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "True"
    },
    {
        "number": 8,
        "query": "Polly is small.",
        "query_fol": "small(x)",
        "context": "Animals are not unicellular. Each invertebrate is an animal. Each protostome is an invertebrate. Arthropods are protostomes. Whales are not small. Arthropods are small. Insects are arthropods. Insects are six-legged. Lepidopterans are insects. Each butterfly is a lepidopteran. Every painted lady is a butterfly. Polly is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, whale(x) => ~small(x), FOR_ALL x, arthropod(x) => small(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 9,
        "query": "3 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Real numbers are numbers. Each real number is not imaginary. Complex numbers are imaginary. Integers are real numbers. Natural numbers are integers. Each natural number is not negative. Each prime number is a natural number. Every prime number is prime. Mersenne primes are prime numbers. Mersenne primes are prime. 3 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 10,
        "query": "127 is real.",
        "query_fol": "real_number(x)",
        "context": "Each real number is a number. Each real number is real. Integers are real numbers. Each natural number is an integer. Each natural number is positive. Prime numbers are natural numbers. Prime numbers are prime. Each imaginary number is not real. Mersenne primes are prime numbers. Every Mersenne prime is prime. 127 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 11,
        "query": "Stella is segmented.",
        "query_fol": "segmented(x)",
        "context": "Animals are not unicellular. Invertebrates are animals. Each protostome is an invertebrate. Every arthropod is a protostome. Every arthropod is segmented. Each insect is an arthropod. Every insect is six-legged. Every lepidopteran is an insect. Butterflies are lepidopterans. Painted ladies are butterflies. Nematodes are not segmented. Stella is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => segmented(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), FOR_ALL x, nematode(x) => ~segmented(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 12,
        "query": "Polly is cold-blooded.",
        "query_fol": "cold_blooded(x)",
        "context": "Snakes are cold-blooded. Every animal is multicellular. Every bilaterian is an animal. Every chordate is a bilaterian. Each vertebrate is a chordate. Each mammal is a vertebrate. Mammals are not cold-blooded. Carnivores are mammals. Every carnivore is carnivorous. Each feline is a carnivore. Every cat is a feline. Tabbies are cats. Polly is a tabby.",
        "rules_fol": "[FOR_ALL x, snake(x) => cold_blooded(x), FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => ~cold_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 13,
        "query": "8191 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Every real number is a number. Real numbers are not imaginary. Integers are real numbers. Natural numbers are integers. Each complex number is imaginary. Each natural number is not negative. Every prime number is a natural number. Every prime number is prime. Mersenne primes are prime numbers. Each Mersenne prime is not composite. 8191 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime(x) => prime(x), FOR_ALL x, mersenne_prime(x) => ~composite(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 14,
        "query": "131071 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Real numbers are numbers. Every real number is not imaginary. Complex numbers are imaginary. Each integer is a real number. Every natural number is an integer. Every natural number is positive. Each prime number is a natural number. Prime numbers are not composite. Each Mersenne prime is a prime number. Mersenne primes are prime. 131071 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 15,
        "query": "Sam is not segmented.",
        "query_fol": "~segmented(x)",
        "context": "Each animal is multicellular. Every invertebrate is an animal. Protostomes are invertebrates. Every arthropod is a protostome. Arthropods are segmented. Each insect is an arthropod. Insects are not eight-legged. Nematodes are not segmented. Lepidopterans are insects. Butterflies are lepidopterans. Painted ladies are butterflies. Sam is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => segmented(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, nematode(x) => ~segmented(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 16,
        "query": "127 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Real numbers are numbers. Each real number is not imaginary. Every integer is a real number. Complex numbers are imaginary. Natural numbers are integers. Natural numbers are not negative. Prime numbers are natural numbers. Prime numbers are prime. Every Mersenne prime is a prime number. Mersenne primes are prime. 127 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 17,
        "query": "8191 is real.",
        "query_fol": "real_number(x)",
        "context": "Every real number is a number. Every real number is real. Each integer is a real number. Natural numbers are integers. Natural numbers are not negative. Prime numbers are natural numbers. Prime numbers are prime. Every Mersenne prime is a prime number. Imaginary numbers are not real. Every Mersenne prime is not composite. 8191 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, mersenne_prime(x) => ~composite_number(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 18,
        "query": "Sally is not segmented.",
        "query_fol": "~segmented(x)",
        "context": "Each nematode is not segmented. Each animal is not unicellular. Invertebrates are animals. Each protostome is an invertebrate. Arthropods are protostomes. Every arthropod is segmented. Every insect is an arthropod. Insects are six-legged. Every lepidopteran is an insect. Every butterfly is a lepidopteran. Painted ladies are butterflies. Sally is a painted lady.",
        "rules_fol": "[FOR_ALL x, nematode(x) => ~segmented(x), FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => segmented(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 19,
        "query": "Sam is not warm-blooded.",
        "query_fol": "~warm_blooded(x)",
        "context": "Animals are multicellular. Bilaterians are animals. Every chordate is a bilaterian. Each vertebrate is a chordate. Mammals are vertebrates. Each snake is not warm-blooded. Every mammal is warm-blooded. Carnivores are mammals. Every carnivore is carnivorous. Each feline is a carnivore. Cats are felines. Tabbies are cats. Sam is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, snake(x) => ~warm_blooded(x), FOR_ALL x, mammal(x) => warm_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabbies(x) => cats(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 20,
        "query": "127 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Complex numbers are imaginary. Real numbers are numbers. Real numbers are not imaginary. Every integer is a real number. Every natural number is an integer. Natural numbers are positive. Each prime number is a natural number. Each prime number is prime. Each Mersenne prime is a prime number. Mersenne primes are prime. 127 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 21,
        "query": "127 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Each real number is a number. Every real number is not imaginary. Every integer is a real number. Every natural number is an integer. Every natural number is positive. Prime numbers are natural numbers. Complex numbers are imaginary. Prime numbers are prime. Each Mersenne prime is a prime number. Every Mersenne prime is not composite. 127 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => positive(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime_number(x) => ~composite_number(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 22,
        "query": "Fae is not bony.",
        "query_fol": "~bony(x)",
        "context": "Each animal is not unicellular. Every invertebrate is an animal. Whales are bony. Each protostome is an invertebrate. Arthropods are protostomes. Arthropods are not bony. Each insect is an arthropod. Every insect is six-legged. Every lepidopteran is an insect. Butterflies are lepidopterans. Painted ladies are butterflies. Fae is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 23,
        "query": "8191 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Complex numbers are imaginary. Every real number is a number. Every real number is not imaginary. Integers are real numbers. Natural numbers are integers. Each natural number is not negative. Prime numbers are natural numbers. Every prime number is prime. Every Mersenne prime is a prime number. Each Mersenne prime is prime. 8191 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => ~negative(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 24,
        "query": "Stella is not cold-blooded.",
        "query_fol": "~cold_blooded(x)",
        "context": "Each snake is cold-blooded. Animals are multicellular. Bilaterians are animals. Chordates are bilaterians. Vertebrates are chordates. Every mammal is a vertebrate. Mammals are not cold-blooded. Carnivores are mammals. Carnivores are not herbivorous. Felines are carnivores. Every cat is a feline. Every tabby is a cat. Stella is a tabby.",
        "rules_fol": "[FOR_ALL x, snake(x) => cold_blooded(x), FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => ~cold_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => ~herbivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "True"
    },
    {
        "number": 25,
        "query": "Rex is bony.",
        "query_fol": "bony(x)",
        "context": "Each animal is not unicellular. Each invertebrate is an animal. Protostomes are invertebrates. Whales are bony. Every arthropod is a protostome. Every arthropod is not bony. Every insect is an arthropod. Every insect is not eight-legged. Each lepidopteran is an insect. Butterflies are lepidopterans. Painted ladies are butterflies. Rex is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 26,
        "query": "127 is real.",
        "query_fol": "FOR_ALL x, real(x)",
        "context": "Real numbers are numbers. Real numbers are real. Every integer is a real number. Each natural number is an integer. Every natural number is not negative. Every prime number is a natural number. Every prime number is not composite. Imaginary numbers are not real. Every Mersenne prime is a prime number. Every Mersenne prime is not composite. 127 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => ~composite(x), mersenne_prime(x)]",
        "answer": "True"
    },
    {
        "number": 27,
        "query": "Alex is segmented.",
        "query_fol": "segmented(x)",
        "context": "Animals are multicellular. Every invertebrate is an animal. Protostomes are invertebrates. Each arthropod is a protostome. Nematodes are not segmented. Arthropods are segmented. Insects are arthropods. Every insect is six-legged. Every lepidopteran is an insect. Butterflies are lepidopterans. Painted ladies are butterflies. Alex is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, nematode(x) => ~segmented(x), FOR_ALL x, arthropod(x) => segmented(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 28,
        "query": "Rex is segmented.",
        "query_fol": "segmented(x)",
        "context": "Each animal is not unicellular. Every invertebrate is an animal. Every protostome is an invertebrate. Arthropods are protostomes. Every nematode is not segmented. Arthropods are segmented. Insects are arthropods. Each insect is six-legged. Lepidopterans are insects. Each butterfly is a lepidopteran. Every painted lady is a butterfly. Rex is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, nematode(x) => ~segmented(x), FOR_ALL x, arthropod(x) => segmented(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 29,
        "query": "Sam is not segmented.",
        "query_fol": "~segmented(x)",
        "context": "Every nematode is not segmented. Animals are multicellular. Invertebrates are animals. Each protostome is an invertebrate. Arthropods are protostomes. Arthropods are segmented. Every insect is an arthropod. Each insect is not eight-legged. Lepidopterans are insects. Every butterfly is a lepidopteran. Each painted lady is a butterfly. Sam is a painted lady.",
        "rules_fol": "[FOR_ALL x, nematode(x) => ~segmented(x), FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => segmented(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 30,
        "query": "Polly is not furry.",
        "query_fol": "~furry(x)",
        "context": "Each animal is multicellular. Each bilaterian is an animal. Chordates are bilaterians. Every snake is not furry. Each vertebrate is a chordate. Every mammal is a vertebrate. Each mammal is furry. Carnivores are mammals. Carnivores are carnivorous. Felines are carnivores. Cats are felines. Tabbies are cats. Polly is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, snake(x) => ~furry(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => furry(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 31,
        "query": "Sam is small.",
        "query_fol": "small(x)",
        "context": "Whales are not small. Every animal is not unicellular. Each invertebrate is an animal. Every protostome is an invertebrate. Arthropods are protostomes. Each arthropod is small. Every insect is an arthropod. Insects are six-legged. Each lepidopteran is an insect. Every butterfly is a lepidopteran. Every painted lady is a butterfly. Sam is a painted lady.",
        "rules_fol": "[FOR_ALL x, whale(x) => ~small(x), FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => small(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 32,
        "query": "Alex is not bony.",
        "query_fol": "~bony(x)",
        "context": "Animals are not unicellular. Every invertebrate is an animal. Each protostome is an invertebrate. Whales are bony. Every arthropod is a protostome. Arthropods are not bony. Insects are arthropods. Each insect is six-legged. Lepidopterans are insects. Every butterfly is a lepidopteran. Each painted lady is a butterfly. Alex is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 33,
        "query": "3 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Real numbers are numbers. Each real number is not imaginary. Integers are real numbers. Natural numbers are integers. Natural numbers are positive. Prime numbers are natural numbers. Each prime number is prime. Every Mersenne prime is a prime number. Complex numbers are imaginary. Mersenne primes are prime. 3 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 34,
        "query": "Sam is not cold-blooded.",
        "query_fol": "~cold_blooded(x)",
        "context": "Each animal is not unicellular. Every snake is cold-blooded. Bilaterians are animals. Chordates are bilaterians. Each vertebrate is a chordate. Mammals are vertebrates. Each mammal is not cold-blooded. Carnivores are mammals. Carnivores are not herbivorous. Every feline is a carnivore. Cats are felines. Each tabby is a cat. Sam is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, snake(x) => cold_blooded(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => ~cold_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => ~herbivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "True"
    },
    {
        "number": 35,
        "query": "3 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Each complex number is imaginary. Real numbers are numbers. Real numbers are not imaginary. Integers are real numbers. Every natural number is an integer. Each natural number is positive. Prime numbers are natural numbers. Prime numbers are prime. Mersenne primes are prime numbers. Every Mersenne prime is prime. 3 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => positive(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 36,
        "query": "7 is real.",
        "query_fol": "real_number(x)",
        "context": "Each real number is a number. Each real number is real. Each integer is a real number. Each imaginary number is not real. Each natural number is an integer. Each natural number is not negative. Each prime number is a natural number. Each prime number is not composite. Every Mersenne prime is a prime number. Every Mersenne prime is prime. 7 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 37,
        "query": "127 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Each real number is a number. Each real number is not imaginary. Each integer is a real number. Each natural number is an integer. Each natural number is positive. Complex numbers are imaginary. Every prime number is a natural number. Every prime number is prime. Every Mersenne prime is a prime number. Every Mersenne prime is not composite. 127 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => ~composite(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 38,
        "query": "Rex is not bony.",
        "query_fol": "~bony(x)",
        "context": "Every whale is bony. Animals are not unicellular. Each invertebrate is an animal. Protostomes are invertebrates. Every arthropod is a protostome. Each arthropod is not bony. Each insect is an arthropod. Insects are not eight-legged. Lepidopterans are insects. Every butterfly is a lepidopteran. Each painted lady is a butterfly. Rex is a painted lady.",
        "rules_fol": "[FOR_ALL x, whale(x) => bony(x), FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 39,
        "query": "8191 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Complex numbers are imaginary. Real numbers are numbers. Each real number is not imaginary. Each integer is a real number. Natural numbers are integers. Natural numbers are positive. Prime numbers are natural numbers. Every prime number is not composite. Mersenne primes are prime numbers. Every Mersenne prime is not composite. 8191 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), FOR_ALL x, mersenne_prime(x) => ~composite(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 40,
        "query": "Fae is not cold-blooded.",
        "query_fol": "~cold_blooded(x)",
        "context": "Animals are multicellular. Each bilaterian is an animal. Chordates are bilaterians. Each vertebrate is a chordate. Mammals are vertebrates. Every mammal is not cold-blooded. Each carnivore is a mammal. Carnivores are carnivorous. Every feline is a carnivore. Every cat is a feline. Each tabby is a cat. Snakes are cold-blooded. Fae is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => ~cold_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), FOR_ALL x, snake(x) => cold_blooded(x), tabby(x)]",
        "answer": "True"
    },
    {
        "number": 41,
        "query": "Fae is warm-blooded.",
        "query_fol": "warm_blooded(x)",
        "context": "Each animal is multicellular. Bilaterians are animals. Each chordate is a bilaterian. Each vertebrate is a chordate. Every snake is not warm-blooded. Mammals are vertebrates. Mammals are warm-blooded. Carnivores are mammals. Carnivores are not herbivorous. Every feline is a carnivore. Cats are felines. Tabbies are cats. Fae is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, snake(x) => ~warm_blooded(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => warm_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => ~herbivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "True"
    },
    {
        "number": 42,
        "query": "31 is real.",
        "query_fol": "real_number(x)",
        "context": "Every real number is a number. Real numbers are real. Every imaginary number is not real. Each integer is a real number. Natural numbers are integers. Each natural number is not negative. Every prime number is a natural number. Prime numbers are not composite. Mersenne primes are prime numbers. Each Mersenne prime is not composite. 31 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => ~composite(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 43,
        "query": "8191 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Real numbers are numbers. Every real number is not imaginary. Every integer is a real number. Every natural number is an integer. Natural numbers are not negative. Each prime number is a natural number. Every prime number is prime. Every Mersenne prime is a prime number. Complex numbers are imaginary. Each Mersenne prime is not composite. 8191 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, mersenne_prime(x) => ~composite(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 44,
        "query": "Sally is not furry.",
        "query_fol": "~furry(x)",
        "context": "Each animal is multicellular. Bilaterians are animals. Chordates are bilaterians. Every vertebrate is a chordate. Each mammal is a vertebrate. Mammals are furry. Snakes are not furry. Carnivores are mammals. Carnivores are carnivorous. Every feline is a carnivore. Cats are felines. Tabbies are cats. Sally is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => furry(x), FOR_ALL x, snake(x) => ~furry(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 45,
        "query": "31 is not real.",
        "query_fol": "~real_number(x)",
        "context": "Every real number is a number. Every real number is real. Every integer is a real number. Every natural number is an integer. Each imaginary number is not real. Each natural number is positive. Prime numbers are natural numbers. Every prime number is not composite. Each Mersenne prime is a prime number. Every Mersenne prime is not composite. 31 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime_number(x) => ~composite_number(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 46,
        "query": "Alex is bony.",
        "query_fol": "bony(x)",
        "context": "Animals are multicellular. Each whale is bony. Every invertebrate is an animal. Protostomes are invertebrates. Arthropods are protostomes. Arthropods are not bony. Insects are arthropods. Insects are not eight-legged. Every lepidopteran is an insect. Butterflies are lepidopterans. Painted ladies are butterflies. Alex is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 47,
        "query": "8191 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Every real number is a number. Each real number is not imaginary. Integers are real numbers. Natural numbers are integers. Natural numbers are not negative. Prime numbers are natural numbers. Each prime number is not composite. Mersenne primes are prime numbers. Every complex number is imaginary. Mersenne primes are prime. 8191 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 48,
        "query": "31 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Each real number is a number. Every complex number is imaginary. Each real number is not imaginary. Integers are real numbers. Natural numbers are integers. Natural numbers are positive. Every prime number is a natural number. Prime numbers are prime. Every Mersenne prime is a prime number. Mersenne primes are not composite. 31 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime_number(x) => ~composite_number(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 49,
        "query": "Fae is furry.",
        "query_fol": "furry(x)",
        "context": "Animals are not unicellular. Bilaterians are animals. Chordates are bilaterians. Every vertebrate is a chordate. Every mammal is a vertebrate. Every mammal is furry. Carnivores are mammals. Every carnivore is carnivorous. Every feline is a carnivore. Every cat is a feline. Every snake is not furry. Every tabby is a cat. Fae is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => furry(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, snake(x) => ~furry(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "True"
    },
    {
        "number": 50,
        "query": "3 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Each complex number is imaginary. Each real number is a number. Each real number is not imaginary. Every integer is a real number. Every natural number is an integer. Natural numbers are positive. Every prime number is a natural number. Each prime number is not composite. Each Mersenne prime is a prime number. Mersenne primes are prime. 3 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 51,
        "query": "131071 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Every real number is a number. Every real number is not imaginary. Each integer is a real number. Every complex number is imaginary. Each natural number is an integer. Natural numbers are positive. Every prime number is a natural number. Each prime number is prime. Each Mersenne prime is a prime number. Mersenne primes are not composite. 131071 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime_number(x) => ~composite_number(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 52,
        "query": "131071 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Real numbers are numbers. Each real number is not imaginary. Complex numbers are imaginary. Each integer is a real number. Natural numbers are integers. Every natural number is not negative. Prime numbers are natural numbers. Each prime number is prime. Each Mersenne prime is a prime number. Every Mersenne prime is not composite. 131071 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime_number(x) => ~composite_number(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 53,
        "query": "Polly is not segmented.",
        "query_fol": "~segmented(x)",
        "context": "Every nematode is not segmented. Animals are not unicellular. Invertebrates are animals. Each protostome is an invertebrate. Arthropods are protostomes. Each arthropod is segmented. Insects are arthropods. Insects are six-legged. Lepidopterans are insects. Butterflies are lepidopterans. Painted ladies are butterflies. Polly is a painted lady.",
        "rules_fol": "[FOR_ALL x, nematode(x) => ~segmented(x), FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => segmented(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 54,
        "query": "Sam is not small.",
        "query_fol": "~small(x)",
        "context": "Animals are not unicellular. Each invertebrate is an animal. Every protostome is an invertebrate. Arthropods are protostomes. Whales are not small. Arthropods are small. Each insect is an arthropod. Insects are six-legged. Lepidopterans are insects. Butterflies are lepidopterans. Painted ladies are butterflies. Sam is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, whale(x) => ~small(x), FOR_ALL x, arthropod(x) => small(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 55,
        "query": "7 is not real.",
        "query_fol": "~real_number(x)",
        "context": "Imaginary numbers are not real. Every real number is a number. Each real number is real. Integers are real numbers. Natural numbers are integers. Each natural number is positive. Prime numbers are natural numbers. Every prime number is not composite. Mersenne primes are prime numbers. Every Mersenne prime is prime. 7 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 56,
        "query": "127 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Every real number is a number. Real numbers are not imaginary. Each integer is a real number. Every natural number is an integer. Each complex number is imaginary. Natural numbers are positive. Each prime number is a natural number. Every prime number is not composite. Mersenne primes are prime numbers. Mersenne primes are prime. 127 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 57,
        "query": "131071 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Real numbers are numbers. Real numbers are not imaginary. Each integer is a real number. Natural numbers are integers. Natural numbers are not negative. Prime numbers are natural numbers. Each prime number is prime. Mersenne primes are prime numbers. Every complex number is imaginary. Mersenne primes are prime. 131071 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 58,
        "query": "3 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Real numbers are numbers. Every real number is not imaginary. Integers are real numbers. Each natural number is an integer. Every natural number is not negative. Complex numbers are imaginary. Every prime number is a natural number. Prime numbers are not composite. Mersenne primes are prime numbers. Every Mersenne prime is prime. 3 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => ~negative(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 59,
        "query": "8191 is real.",
        "query_fol": "real_number(x)",
        "context": "Every real number is a number. Each real number is real. Integers are real numbers. Natural numbers are integers. Each natural number is not negative. Prime numbers are natural numbers. Prime numbers are prime. Every imaginary number is not real. Every Mersenne prime is a prime number. Each Mersenne prime is prime. 8191 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 60,
        "query": "Rex is furry.",
        "query_fol": "furry(x)",
        "context": "Animals are multicellular. Bilaterians are animals. Each chordate is a bilaterian. Vertebrates are chordates. Mammals are vertebrates. Every mammal is furry. Every carnivore is a mammal. Snakes are not furry. Carnivores are not herbivorous. Each feline is a carnivore. Each cat is a feline. Every tabby is a cat. Rex is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => furry(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, snake(x) => ~furry(x), FOR_ALL x, carnivore(x) => ~herbivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "True"
    },
    {
        "number": 61,
        "query": "Sally is not small.",
        "query_fol": "~small(x)",
        "context": "Animals are multicellular. Each invertebrate is an animal. Every protostome is an invertebrate. Every arthropod is a protostome. Arthropods are small. Every insect is an arthropod. Whales are not small. Every insect is six-legged. Each lepidopteran is an insect. Butterflies are lepidopterans. Painted ladies are butterflies. Sally is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => small(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, whale(x) => ~small(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 62,
        "query": "Polly is furry.",
        "query_fol": "furry(x)",
        "context": "Each animal is not unicellular. Every bilaterian is an animal. Chordates are bilaterians. Every vertebrate is a chordate. Every mammal is a vertebrate. Each mammal is furry. Snakes are not furry. Carnivores are mammals. Carnivores are not herbivorous. Each feline is a carnivore. Cats are felines. Tabbies are cats. Polly is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => furry(x), FOR_ALL x, snake(x) => ~furry(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => ~herbivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabbies(x) => cat(x), tabby(x)]",
        "answer": "True"
    },
    {
        "number": 63,
        "query": "Sam is not warm-blooded.",
        "query_fol": "~warm_blooded(x)",
        "context": "Animals are multicellular. Each bilaterian is an animal. Chordates are bilaterians. Vertebrates are chordates. Each mammal is a vertebrate. Every mammal is warm-blooded. Carnivores are mammals. Each carnivore is carnivorous. Each feline is a carnivore. Cats are felines. Tabbies are cats. Every snake is not warm-blooded. Sam is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => warm_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), FOR_ALL x, snake(x) => ~warm_blooded(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 64,
        "query": "7 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Each real number is a number. Every real number is not imaginary. Every integer is a real number. Each natural number is an integer. Each natural number is positive. Prime numbers are natural numbers. Every prime number is prime. Mersenne primes are prime numbers. Complex numbers are imaginary. Mersenne primes are prime. 7 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 65,
        "query": "Sam is furry.",
        "query_fol": "furry(x)",
        "context": "Animals are multicellular. Bilaterians are animals. Chordates are bilaterians. Vertebrates are chordates. Mammals are vertebrates. Snakes are not furry. Each mammal is furry. Each carnivore is a mammal. Each carnivore is carnivorous. Every feline is a carnivore. Cats are felines. Each tabby is a cat. Sam is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, snake(x) => ~furry(x), FOR_ALL x, mammal(x) => furry(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "True"
    },
    {
        "number": 66,
        "query": "Stella is not small.",
        "query_fol": "~small(x)",
        "context": "Animals are not unicellular. Invertebrates are animals. Each protostome is an invertebrate. Every arthropod is a protostome. Every arthropod is small. Insects are arthropods. Every insect is six-legged. Each lepidopteran is an insect. Every butterfly is a lepidopteran. Every painted lady is a butterfly. Whales are not small. Stella is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => small(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), FOR_ALL x, whale(x) => ~small(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 67,
        "query": "Alex is segmented.",
        "query_fol": "segmented(x)",
        "context": "Each animal is not unicellular. Invertebrates are animals. Protostomes are invertebrates. Every arthropod is a protostome. Each arthropod is segmented. Every insect is an arthropod. Nematodes are not segmented. Insects are not eight-legged. Lepidopterans are insects. Butterflies are lepidopterans. Each painted lady is a butterfly. Alex is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => segmented(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, nematode(x) => ~segmented(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 68,
        "query": "Sally is not cold-blooded.",
        "query_fol": "~cold_blooded(x)",
        "context": "Animals are multicellular. Every bilaterian is an animal. Each chordate is a bilaterian. Vertebrates are chordates. Every mammal is a vertebrate. Mammals are not cold-blooded. Each carnivore is a mammal. Carnivores are carnivorous. Every feline is a carnivore. Each cat is a feline. Snakes are cold-blooded. Each tabby is a cat. Sally is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => ~cold_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, snake(x) => cold_blooded(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "True"
    },
    {
        "number": 69,
        "query": "8191 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Real numbers are numbers. Complex numbers are imaginary. Real numbers are not imaginary. Every integer is a real number. Natural numbers are integers. Natural numbers are not negative. Prime numbers are natural numbers. Every prime number is prime. Every Mersenne prime is a prime number. Mersenne primes are prime. 8191 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 70,
        "query": "7 is not real.",
        "query_fol": "~real_number(x)",
        "context": "Every real number is a number. Each imaginary number is not real. Real numbers are real. Integers are real numbers. Natural numbers are integers. Every natural number is positive. Every prime number is a natural number. Prime numbers are not composite. Mersenne primes are prime numbers. Mersenne primes are prime. 7 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 71,
        "query": "Rex is bony.",
        "query_fol": "bony(x)",
        "context": "Animals are not unicellular. Invertebrates are animals. Protostomes are invertebrates. Arthropods are protostomes. Each arthropod is not bony. Every insect is an arthropod. Every insect is six-legged. Each whale is bony. Lepidopterans are insects. Butterflies are lepidopterans. Each painted lady is a butterfly. Rex is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 72,
        "query": "Alex is bony.",
        "query_fol": "bony(x)",
        "context": "Animals are multicellular. Invertebrates are animals. Protostomes are invertebrates. Each arthropod is a protostome. Each arthropod is not bony. Every insect is an arthropod. Insects are not eight-legged. Whales are bony. Every lepidopteran is an insect. Each butterfly is a lepidopteran. Every painted lady is a butterfly. Alex is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 73,
        "query": "127 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Each real number is a number. Every real number is not imaginary. Every complex number is imaginary. Integers are real numbers. Each natural number is an integer. Each natural number is not negative. Each prime number is a natural number. Every prime number is not composite. Every Mersenne prime is a prime number. Mersenne primes are prime. 127 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 74,
        "query": "Sally is bony.",
        "query_fol": "bony(x)",
        "context": "Each animal is multicellular. Whales are bony. Every invertebrate is an animal. Every protostome is an invertebrate. Every arthropod is a protostome. Arthropods are not bony. Each insect is an arthropod. Every insect is not eight-legged. Lepidopterans are insects. Butterflies are lepidopterans. Each painted lady is a butterfly. Sally is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 75,
        "query": "Sam is bony.",
        "query_fol": "bony(x)",
        "context": "Every animal is multicellular. Invertebrates are animals. Every protostome is an invertebrate. Arthropods are protostomes. Each arthropod is not bony. Whales are bony. Each insect is an arthropod. Each insect is six-legged. Lepidopterans are insects. Each butterfly is a lepidopteran. Painted ladies are butterflies. Sam is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 76,
        "query": "Rex is cold-blooded.",
        "query_fol": "cold_blooded(x)",
        "context": "Animals are multicellular. Each bilaterian is an animal. Chordates are bilaterians. Every vertebrate is a chordate. Mammals are vertebrates. Mammals are not cold-blooded. Carnivores are mammals. Each carnivore is not herbivorous. Each feline is a carnivore. Each cat is a feline. Snakes are cold-blooded. Tabbies are cats. Rex is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => ~cold_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => ~herbivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, snake(x) => cold_blooded(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 77,
        "query": "Sally is warm-blooded.",
        "query_fol": "warm_blooded(x)",
        "context": "Each snake is not warm-blooded. Each animal is multicellular. Bilaterians are animals. Chordates are bilaterians. Every vertebrate is a chordate. Every mammal is a vertebrate. Each mammal is warm-blooded. Carnivores are mammals. Every carnivore is carnivorous. Felines are carnivores. Cats are felines. Every tabby is a cat. Sally is a tabby.",
        "rules_fol": "[FOR_ALL x, snake(x) => ~warm_blooded(x), FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => warm_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "True"
    },
    {
        "number": 78,
        "query": "Max is cold-blooded.",
        "query_fol": "cold_blooded(x)",
        "context": "Animals are not unicellular. Each bilaterian is an animal. Every chordate is a bilaterian. Snakes are cold-blooded. Each vertebrate is a chordate. Each mammal is a vertebrate. Each mammal is not cold-blooded. Every carnivore is a mammal. Each carnivore is carnivorous. Each feline is a carnivore. Cats are felines. Tabbies are cats. Max is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, snake(x) => cold_blooded(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => ~cold_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 79,
        "query": "Wren is segmented.",
        "query_fol": "segmented(x)",
        "context": "Each animal is not unicellular. Invertebrates are animals. Every protostome is an invertebrate. Arthropods are protostomes. Each arthropod is segmented. Every insect is an arthropod. Each insect is not eight-legged. Every lepidopteran is an insect. Every butterfly is a lepidopteran. Each painted lady is a butterfly. Every nematode is not segmented. Wren is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => segmented(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), FOR_ALL x, nematode(x) => ~segmented(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 80,
        "query": "Fae is not cold-blooded.",
        "query_fol": "~cold_blooded(x)",
        "context": "Animals are not unicellular. Bilaterians are animals. Chordates are bilaterians. Every vertebrate is a chordate. Mammals are vertebrates. Mammals are not cold-blooded. Each carnivore is a mammal. Carnivores are carnivorous. Snakes are cold-blooded. Felines are carnivores. Cats are felines. Every tabby is a cat. Fae is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => ~cold_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, snake(x) => cold_blooded(x), FOR_ALL x, felines(x) => carnivores(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "True"
    },
    {
        "number": 81,
        "query": "Wren is not cold-blooded.",
        "query_fol": "~cold_blooded(x)",
        "context": "Animals are multicellular. Bilaterians are animals. Every chordate is a bilaterian. Each vertebrate is a chordate. Each snake is cold-blooded. Mammals are vertebrates. Mammals are not cold-blooded. Every carnivore is a mammal. Every carnivore is not herbivorous. Felines are carnivores. Each cat is a feline. Tabbies are cats. Wren is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, snake(x) => cold_blooded(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => ~cold_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => ~herbivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "True"
    },
    {
        "number": 82,
        "query": "31 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Each real number is a number. Real numbers are not imaginary. Every integer is a real number. Complex numbers are imaginary. Each natural number is an integer. Every natural number is positive. Each prime number is a natural number. Every prime number is not composite. Every Mersenne prime is a prime number. Every Mersenne prime is prime. 31 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 83,
        "query": "Stella is bony.",
        "query_fol": "bony(x)",
        "context": "Animals are multicellular. Every whale is bony. Each invertebrate is an animal. Every protostome is an invertebrate. Every arthropod is a protostome. Every arthropod is not bony. Each insect is an arthropod. Insects are six-legged. Every lepidopteran is an insect. Butterflies are lepidopterans. Each painted lady is a butterfly. Stella is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 84,
        "query": "Polly is bony.",
        "query_fol": "bony(x)",
        "context": "Animals are multicellular. Invertebrates are animals. Each protostome is an invertebrate. Arthropods are protostomes. Arthropods are not bony. Insects are arthropods. Every insect is six-legged. Each lepidopteran is an insect. Each butterfly is a lepidopteran. Whales are bony. Every painted lady is a butterfly. Polly is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 85,
        "query": "Stella is furry.",
        "query_fol": "furry(x)",
        "context": "Each animal is multicellular. Every bilaterian is an animal. Every chordate is a bilaterian. Vertebrates are chordates. Every mammal is a vertebrate. Mammals are furry. Carnivores are mammals. Carnivores are not herbivorous. Each feline is a carnivore. Each cat is a feline. Tabbies are cats. Every snake is not furry. Stella is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => furry(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => ~herbivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), FOR_ALL x, snake(x) => ~furry(x), tabby(x)]",
        "answer": "True"
    },
    {
        "number": 86,
        "query": "7 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Each real number is a number. Real numbers are not imaginary. Every complex number is imaginary. Each integer is a real number. Each natural number is an integer. Every natural number is not negative. Prime numbers are natural numbers. Prime numbers are prime. Mersenne primes are prime numbers. Every Mersenne prime is prime. 7 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 87,
        "query": "Fae is not furry.",
        "query_fol": "~furry(x)",
        "context": "Each animal is not unicellular. Bilaterians are animals. Each snake is not furry. Every chordate is a bilaterian. Vertebrates are chordates. Mammals are vertebrates. Every mammal is furry. Every carnivore is a mammal. Each carnivore is carnivorous. Felines are carnivores. Each cat is a feline. Tabbies are cats. Fae is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, snake(x) => ~furry(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => furry(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 88,
        "query": "Stella is not bony.",
        "query_fol": "~bony(x)",
        "context": "Each animal is not unicellular. Whales are bony. Invertebrates are animals. Each protostome is an invertebrate. Arthropods are protostomes. Every arthropod is not bony. Insects are arthropods. Every insect is six-legged. Each lepidopteran is an insect. Every butterfly is a lepidopteran. Every painted lady is a butterfly. Stella is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 89,
        "query": "Stella is not cold-blooded.",
        "query_fol": "~cold_blooded(x)",
        "context": "Every animal is multicellular. Bilaterians are animals. Each chordate is a bilaterian. Vertebrates are chordates. Each mammal is a vertebrate. Every mammal is not cold-blooded. Carnivores are mammals. Carnivores are carnivorous. Every snake is cold-blooded. Every feline is a carnivore. Each cat is a feline. Tabbies are cats. Stella is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => ~cold_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, snake(x) => cold_blooded(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabbies(x) => cat(x), tabby(x)]",
        "answer": "True"
    },
    {
        "number": 90,
        "query": "3 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Real numbers are numbers. Real numbers are not imaginary. Each integer is a real number. Natural numbers are integers. Natural numbers are positive. Each prime number is a natural number. Each complex number is imaginary. Prime numbers are prime. Mersenne primes are prime numbers. Every Mersenne prime is prime. 3 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 91,
        "query": "Stella is not cold-blooded.",
        "query_fol": "~cold_blooded(x)",
        "context": "Every animal is not unicellular. Each bilaterian is an animal. Snakes are cold-blooded. Chordates are bilaterians. Vertebrates are chordates. Each mammal is a vertebrate. Every mammal is not cold-blooded. Every carnivore is a mammal. Carnivores are not herbivorous. Felines are carnivores. Each cat is a feline. Tabbies are cats. Stella is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, snake(x) => cold_blooded(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => ~cold_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => ~herbivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "True"
    },
    {
        "number": 92,
        "query": "Fae is cold-blooded.",
        "query_fol": "cold_blooded(x)",
        "context": "Every animal is not unicellular. Bilaterians are animals. Chordates are bilaterians. Vertebrates are chordates. Mammals are vertebrates. Each mammal is not cold-blooded. Each carnivore is a mammal. Each carnivore is carnivorous. Each feline is a carnivore. Every snake is cold-blooded. Cats are felines. Each tabby is a cat. Fae is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => ~cold_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, snake(x) => cold_blooded(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 93,
        "query": "Sam is not cold-blooded.",
        "query_fol": "~cold_blooded(x)",
        "context": "Animals are multicellular. Bilaterians are animals. Chordates are bilaterians. Each vertebrate is a chordate. Mammals are vertebrates. Mammals are not cold-blooded. Every snake is cold-blooded. Each carnivore is a mammal. Carnivores are not herbivorous. Felines are carnivores. Every cat is a feline. Tabbies are cats. Sam is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => ~cold_blooded(x), FOR_ALL x, snake(x) => cold_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => ~herbivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "True"
    },
    {
        "number": 94,
        "query": "Max is bony.",
        "query_fol": "bony(x)",
        "context": "Animals are not unicellular. Invertebrates are animals. Protostomes are invertebrates. Each arthropod is a protostome. Each arthropod is not bony. Every insect is an arthropod. Insects are six-legged. Whales are bony. Lepidopterans are insects. Butterflies are lepidopterans. Painted ladies are butterflies. Max is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 95,
        "query": "Wren is not cold-blooded.",
        "query_fol": "~cold_blooded(x)",
        "context": "Each animal is not unicellular. Each bilaterian is an animal. Snakes are cold-blooded. Chordates are bilaterians. Each vertebrate is a chordate. Each mammal is a vertebrate. Mammals are not cold-blooded. Every carnivore is a mammal. Carnivores are carnivorous. Each feline is a carnivore. Every cat is a feline. Tabbies are cats. Wren is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, snake(x) => cold_blooded(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => ~cold_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "True"
    },
    {
        "number": 96,
        "query": "Sally is not cold-blooded.",
        "query_fol": "~cold_blooded(x)",
        "context": "Every animal is not unicellular. Bilaterians are animals. Chordates are bilaterians. Vertebrates are chordates. Mammals are vertebrates. Each mammal is not cold-blooded. Snakes are cold-blooded. Carnivores are mammals. Carnivores are carnivorous. Each feline is a carnivore. Cats are felines. Tabbies are cats. Sally is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => ~cold_blooded(x), FOR_ALL x, snake(x) => cold_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "True"
    },
    {
        "number": 97,
        "query": "Sally is small.",
        "query_fol": "small(x)",
        "context": "Every animal is multicellular. Each invertebrate is an animal. Protostomes are invertebrates. Arthropods are protostomes. Arthropods are small. Insects are arthropods. Whales are not small. Every insect is six-legged. Lepidopterans are insects. Every butterfly is a lepidopteran. Painted ladies are butterflies. Sally is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => small(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, whale(x) => ~small(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 98,
        "query": "Alex is not small.",
        "query_fol": "~small(x)",
        "context": "Every animal is multicellular. Invertebrates are animals. Protostomes are invertebrates. Every whale is not small. Every arthropod is a protostome. Every arthropod is small. Each insect is an arthropod. Each insect is six-legged. Lepidopterans are insects. Butterflies are lepidopterans. Painted ladies are butterflies. Alex is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, whale(x) => ~small(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => small(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 99,
        "query": "Rex is not small.",
        "query_fol": "~small(x)",
        "context": "Animals are not unicellular. Invertebrates are animals. Protostomes are invertebrates. Every arthropod is a protostome. Every arthropod is small. Every insect is an arthropod. Insects are six-legged. Lepidopterans are insects. Butterflies are lepidopterans. Each painted lady is a butterfly. Each whale is not small. Rex is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => small(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), FOR_ALL x, whale(x) => ~small(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 100,
        "query": "Fae is warm-blooded.",
        "query_fol": "warm_blooded(x)",
        "context": "Every animal is multicellular. Bilaterians are animals. Chordates are bilaterians. Each vertebrate is a chordate. Mammals are vertebrates. Mammals are warm-blooded. Every carnivore is a mammal. Each carnivore is carnivorous. Felines are carnivores. Snakes are not warm-blooded. Each cat is a feline. Every tabby is a cat. Fae is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => warm_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, snake(x) => ~warm_blooded(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "True"
    },
    {
        "number": 101,
        "query": "3 is not real.",
        "query_fol": "~real_number(x)",
        "context": "Real numbers are numbers. Real numbers are real. Integers are real numbers. Natural numbers are integers. Imaginary numbers are not real. Each natural number is positive. Every prime number is a natural number. Each prime number is prime. Mersenne primes are prime numbers. Mersenne primes are prime. 3 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, natural_number(x) => positive(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 102,
        "query": "127 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Real numbers are numbers. Every real number is not imaginary. Every integer is a real number. Natural numbers are integers. Natural numbers are positive. Prime numbers are natural numbers. Every prime number is prime. Complex numbers are imaginary. Every Mersenne prime is a prime number. Every Mersenne prime is prime. 127 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 103,
        "query": "131071 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Real numbers are numbers. Every real number is not imaginary. Every integer is a real number. Each natural number is an integer. Each natural number is positive. Prime numbers are natural numbers. Prime numbers are not composite. Every Mersenne prime is a prime number. Each complex number is imaginary. Each Mersenne prime is prime. 131071 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 104,
        "query": "Sam is warm-blooded.",
        "query_fol": "warm_blooded(x)",
        "context": "Snakes are not warm-blooded. Animals are not unicellular. Every bilaterian is an animal. Chordates are bilaterians. Each vertebrate is a chordate. Mammals are vertebrates. Each mammal is warm-blooded. Carnivores are mammals. Every carnivore is carnivorous. Felines are carnivores. Every cat is a feline. Tabbies are cats. Sam is a tabby.",
        "rules_fol": "[FOR_ALL x, snake(x) => ~warm_blooded(x), FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => warm_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "True"
    },
    {
        "number": 105,
        "query": "3 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Each real number is a number. Every real number is not imaginary. Integers are real numbers. Complex numbers are imaginary. Every natural number is an integer. Natural numbers are not negative. Prime numbers are natural numbers. Each prime number is prime. Every Mersenne prime is a prime number. Every Mersenne prime is prime. 3 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 106,
        "query": "Wren is not bony.",
        "query_fol": "~bony(x)",
        "context": "Each animal is not unicellular. Every invertebrate is an animal. Protostomes are invertebrates. Each arthropod is a protostome. Each arthropod is not bony. Insects are arthropods. Each insect is not eight-legged. Each whale is bony. Lepidopterans are insects. Every butterfly is a lepidopteran. Every painted lady is a butterfly. Wren is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 107,
        "query": "8191 is real.",
        "query_fol": "real_number(x)",
        "context": "Real numbers are numbers. Each real number is real. Integers are real numbers. Imaginary numbers are not real. Natural numbers are integers. Natural numbers are not negative. Every prime number is a natural number. Every prime number is prime. Mersenne primes are prime numbers. Each Mersenne prime is not composite. 8191 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => ~composite(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 108,
        "query": "Wren is cold-blooded.",
        "query_fol": "cold_blooded(x)",
        "context": "Each animal is multicellular. Each bilaterian is an animal. Chordates are bilaterians. Vertebrates are chordates. Every mammal is a vertebrate. Mammals are not cold-blooded. Every snake is cold-blooded. Each carnivore is a mammal. Carnivores are carnivorous. Each feline is a carnivore. Every cat is a feline. Every tabby is a cat. Wren is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => ~cold_blooded(x), FOR_ALL x, snake(x) => cold_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 109,
        "query": "Stella is not bony.",
        "query_fol": "~bony(x)",
        "context": "Animals are multicellular. Invertebrates are animals. Protostomes are invertebrates. Every arthropod is a protostome. Whales are bony. Arthropods are not bony. Each insect is an arthropod. Every insect is not eight-legged. Lepidopterans are insects. Butterflies are lepidopterans. Painted ladies are butterflies. Stella is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 110,
        "query": "8191 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Each complex number is imaginary. Real numbers are numbers. Real numbers are not imaginary. Integers are real numbers. Natural numbers are integers. Natural numbers are not negative. Prime numbers are natural numbers. Prime numbers are not composite. Every Mersenne prime is a prime number. Every Mersenne prime is prime. 8191 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 111,
        "query": "131071 is real.",
        "query_fol": "real_number(x)",
        "context": "Each real number is a number. Each real number is real. Every integer is a real number. Natural numbers are integers. Each natural number is not negative. Each prime number is a natural number. Prime numbers are prime. Every Mersenne prime is a prime number. Mersenne primes are not composite. Each imaginary number is not real. 131071 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime_number(x) => ~composite_number(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 112,
        "query": "3 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Real numbers are numbers. Real numbers are not imaginary. Each complex number is imaginary. Each integer is a real number. Every natural number is an integer. Natural numbers are positive. Prime numbers are natural numbers. Every prime number is prime. Mersenne primes are prime numbers. Mersenne primes are prime. 3 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 113,
        "query": "127 is real.",
        "query_fol": "real_number(x)",
        "context": "Every real number is a number. Real numbers are real. Each integer is a real number. Each natural number is an integer. Every natural number is positive. Prime numbers are natural numbers. Prime numbers are not composite. Each imaginary number is not real. Each Mersenne prime is a prime number. Mersenne primes are prime. 127 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 114,
        "query": "7 is imaginary.",
        "query_fol": "imaginary(x)",
        "context": "Each real number is a number. Every real number is not imaginary. Integers are real numbers. Natural numbers are integers. Natural numbers are positive. Prime numbers are natural numbers. Each complex number is imaginary. Prime numbers are prime. Mersenne primes are prime numbers. Every Mersenne prime is prime. 7 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 115,
        "query": "Stella is not segmented.",
        "query_fol": "~segmented(x)",
        "context": "Animals are multicellular. Every invertebrate is an animal. Protostomes are invertebrates. Arthropods are protostomes. Every nematode is not segmented. Every arthropod is segmented. Every insect is an arthropod. Insects are not eight-legged. Lepidopterans are insects. Butterflies are lepidopterans. Painted ladies are butterflies. Stella is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, nematode(x) => ~segmented(x), FOR_ALL x, arthropod(x) => segmented(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 116,
        "query": "31 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Real numbers are numbers. Real numbers are not imaginary. Integers are real numbers. Every natural number is an integer. Natural numbers are positive. Each prime number is a natural number. Each prime number is not composite. Each Mersenne prime is a prime number. Every complex number is imaginary. Mersenne primes are not composite. 31 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, mersenne_prime(x) => ~composite(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 117,
        "query": "3 is not real.",
        "query_fol": "~real_number(x)",
        "context": "Every real number is a number. Each real number is real. Integers are real numbers. Every natural number is an integer. Natural numbers are not negative. Prime numbers are natural numbers. Prime numbers are prime. Each Mersenne prime is a prime number. Mersenne primes are prime. Imaginary numbers are not real. 3 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 118,
        "query": "Fae is warm-blooded.",
        "query_fol": "warm_blooded(x)",
        "context": "Each animal is not unicellular. Bilaterians are animals. Chordates are bilaterians. Snakes are not warm-blooded. Vertebrates are chordates. Mammals are vertebrates. Mammals are warm-blooded. Carnivores are mammals. Carnivores are not herbivorous. Felines are carnivores. Each cat is a feline. Each tabby is a cat. Fae is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, snake(x) => ~warm_blooded(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => warm_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => ~herbivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "True"
    },
    {
        "number": 119,
        "query": "31 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Real numbers are numbers. Each real number is not imaginary. Every complex number is imaginary. Integers are real numbers. Natural numbers are integers. Natural numbers are positive. Prime numbers are natural numbers. Prime numbers are prime. Each Mersenne prime is a prime number. Mersenne primes are prime. 31 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, integer(x) => real(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 120,
        "query": "Sam is warm-blooded.",
        "query_fol": "warm_blooded(x)",
        "context": "Animals are not unicellular. Each bilaterian is an animal. Chordates are bilaterians. Vertebrates are chordates. Each mammal is a vertebrate. Each snake is not warm-blooded. Mammals are warm-blooded. Every carnivore is a mammal. Every carnivore is not herbivorous. Each feline is a carnivore. Cats are felines. Each tabby is a cat. Sam is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, snake(x) => ~warm_blooded(x), FOR_ALL x, mammal(x) => warm_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => ~herbivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "True"
    },
    {
        "number": 121,
        "query": "Rex is small.",
        "query_fol": "small(x)",
        "context": "Each animal is multicellular. Every invertebrate is an animal. Each protostome is an invertebrate. Arthropods are protostomes. Every arthropod is small. Each insect is an arthropod. Each whale is not small. Each insect is six-legged. Every lepidopteran is an insect. Every butterfly is a lepidopteran. Painted ladies are butterflies. Rex is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => small(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, whale(x) => ~small(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 122,
        "query": "127 is not real.",
        "query_fol": "~real(x)",
        "context": "Real numbers are numbers. Each real number is real. Integers are real numbers. Every imaginary number is not real. Natural numbers are integers. Each natural number is positive. Prime numbers are natural numbers. Every prime number is prime. Mersenne primes are prime numbers. Every Mersenne prime is prime. 127 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => positive(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime_number(x) => prime(x), FOR_ALL x, mersenne_prime(x) => mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 123,
        "query": "8191 is real.",
        "query_fol": "real_number(x)",
        "context": "Every real number is a number. Every real number is real. Integers are real numbers. Natural numbers are integers. Natural numbers are not negative. Every prime number is a natural number. Prime numbers are not composite. Imaginary numbers are not real. Each Mersenne prime is a prime number. Each Mersenne prime is prime. 8191 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 124,
        "query": "Alex is bony.",
        "query_fol": "bony(x)",
        "context": "Animals are not unicellular. Each invertebrate is an animal. Each protostome is an invertebrate. Each arthropod is a protostome. Whales are bony. Each arthropod is not bony. Insects are arthropods. Insects are six-legged. Lepidopterans are insects. Every butterfly is a lepidopteran. Each painted lady is a butterfly. Alex is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 125,
        "query": "Sally is not segmented.",
        "query_fol": "~segmented(x)",
        "context": "Animals are not unicellular. Each nematode is not segmented. Each invertebrate is an animal. Protostomes are invertebrates. Every arthropod is a protostome. Arthropods are segmented. Insects are arthropods. Insects are six-legged. Every lepidopteran is an insect. Butterflies are lepidopterans. Painted ladies are butterflies. Sally is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, nematode(x) => ~segmented(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => segmented(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 126,
        "query": "3 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Each real number is a number. Real numbers are not imaginary. Every integer is a real number. Natural numbers are integers. Each natural number is positive. Prime numbers are natural numbers. Each prime number is prime. Mersenne primes are prime numbers. Complex numbers are imaginary. Each Mersenne prime is not composite. 3 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, mersenne_prime(x) => ~composite(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 127,
        "query": "Max is warm-blooded.",
        "query_fol": "warm_blooded(x)",
        "context": "Animals are not unicellular. Every bilaterian is an animal. Chordates are bilaterians. Vertebrates are chordates. Each snake is not warm-blooded. Each mammal is a vertebrate. Mammals are warm-blooded. Carnivores are mammals. Each carnivore is carnivorous. Each feline is a carnivore. Every cat is a feline. Tabbies are cats. Max is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, snake(x) => ~warm_blooded(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => warm_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "True"
    },
    {
        "number": 128,
        "query": "Alex is small.",
        "query_fol": "small(x)",
        "context": "Every whale is not small. Animals are multicellular. Every invertebrate is an animal. Protostomes are invertebrates. Arthropods are protostomes. Every arthropod is small. Each insect is an arthropod. Insects are not eight-legged. Every lepidopteran is an insect. Each butterfly is a lepidopteran. Each painted lady is a butterfly. Alex is a painted lady.",
        "rules_fol": "[FOR_ALL x, whale(x) => ~small(x), FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => small(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 129,
        "query": "31 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Real numbers are numbers. Real numbers are not imaginary. Integers are real numbers. Every natural number is an integer. Natural numbers are positive. Every prime number is a natural number. Every prime number is not composite. Mersenne primes are prime numbers. Mersenne primes are prime. Complex numbers are imaginary. 31 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 130,
        "query": "Alex is cold-blooded.",
        "query_fol": "cold_blooded(x)",
        "context": "Animals are not unicellular. Bilaterians are animals. Chordates are bilaterians. Vertebrates are chordates. Every mammal is a vertebrate. Mammals are not cold-blooded. Each snake is cold-blooded. Carnivores are mammals. Each carnivore is carnivorous. Each feline is a carnivore. Cats are felines. Each tabby is a cat. Alex is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => ~cold_blooded(x), FOR_ALL x, snake(x) => cold_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 131,
        "query": "Rex is small.",
        "query_fol": "small(x)",
        "context": "Animals are multicellular. Invertebrates are animals. Every protostome is an invertebrate. Arthropods are protostomes. Whales are not small. Each arthropod is small. Each insect is an arthropod. Every insect is not eight-legged. Each lepidopteran is an insect. Butterflies are lepidopterans. Painted ladies are butterflies. Rex is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, whale(x) => ~small(x), FOR_ALL x, arthropod(x) => small(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 132,
        "query": "Rex is bony.",
        "query_fol": "bony(x)",
        "context": "Animals are multicellular. Every invertebrate is an animal. Protostomes are invertebrates. Each whale is bony. Arthropods are protostomes. Each arthropod is not bony. Every insect is an arthropod. Every insect is six-legged. Lepidopterans are insects. Butterflies are lepidopterans. Every painted lady is a butterfly. Rex is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 133,
        "query": "Alex is segmented.",
        "query_fol": "segmented(x)",
        "context": "Animals are multicellular. Invertebrates are animals. Protostomes are invertebrates. Each arthropod is a protostome. Arthropods are segmented. Each nematode is not segmented. Insects are arthropods. Insects are six-legged. Lepidopterans are insects. Butterflies are lepidopterans. Every painted lady is a butterfly. Alex is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => segmented(x), FOR_ALL x, nematode(x) => ~segmented(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 134,
        "query": "Wren is furry.",
        "query_fol": "furry(x)",
        "context": "Every animal is not unicellular. Each bilaterian is an animal. Chordates are bilaterians. Vertebrates are chordates. Snakes are not furry. Every mammal is a vertebrate. Every mammal is furry. Every carnivore is a mammal. Carnivores are carnivorous. Felines are carnivores. Every cat is a feline. Every tabby is a cat. Wren is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, snake(x) => ~furry(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => furry(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "True"
    },
    {
        "number": 135,
        "query": "131071 is not real.",
        "query_fol": "~real_number(x)",
        "context": "Real numbers are numbers. Real numbers are real. Every imaginary number is not real. Each integer is a real number. Every natural number is an integer. Every natural number is positive. Prime numbers are natural numbers. Prime numbers are not composite. Every Mersenne prime is a prime number. Mersenne primes are prime. 131071 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 136,
        "query": "Sally is segmented.",
        "query_fol": "segmented(x)",
        "context": "Animals are multicellular. Each invertebrate is an animal. Protostomes are invertebrates. Arthropods are protostomes. Arthropods are segmented. Insects are arthropods. Every insect is six-legged. Nematodes are not segmented. Lepidopterans are insects. Each butterfly is a lepidopteran. Every painted lady is a butterfly. Sally is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => segmented(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, nematode(x) => ~segmented(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 137,
        "query": "Alex is bony.",
        "query_fol": "bony(x)",
        "context": "Animals are multicellular. Each invertebrate is an animal. Each protostome is an invertebrate. Every arthropod is a protostome. Arthropods are not bony. Every insect is an arthropod. Every insect is not eight-legged. Every whale is bony. Lepidopterans are insects. Each butterfly is a lepidopteran. Every painted lady is a butterfly. Alex is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 138,
        "query": "Polly is bony.",
        "query_fol": "bony(x)",
        "context": "Animals are multicellular. Each invertebrate is an animal. Protostomes are invertebrates. Every arthropod is a protostome. Arthropods are not bony. Every insect is an arthropod. Insects are not eight-legged. Every lepidopteran is an insect. Every butterfly is a lepidopteran. Every painted lady is a butterfly. Every whale is bony. Polly is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), FOR_ALL x, whale(x) => bony(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 139,
        "query": "Wren is cold-blooded.",
        "query_fol": "cold_blooded(x)",
        "context": "Every animal is multicellular. Snakes are cold-blooded. Bilaterians are animals. Each chordate is a bilaterian. Vertebrates are chordates. Mammals are vertebrates. Mammals are not cold-blooded. Carnivores are mammals. Each carnivore is not herbivorous. Felines are carnivores. Each cat is a feline. Each tabby is a cat. Wren is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, snake(x) => cold_blooded(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => ~cold_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => ~herbivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 140,
        "query": "Sally is not bony.",
        "query_fol": "~bony(x)",
        "context": "Each whale is bony. Animals are multicellular. Every invertebrate is an animal. Every protostome is an invertebrate. Arthropods are protostomes. Arthropods are not bony. Insects are arthropods. Each insect is not eight-legged. Lepidopterans are insects. Every butterfly is a lepidopteran. Painted ladies are butterflies. Sally is a painted lady.",
        "rules_fol": "[FOR_ALL x, whale(x) => bony(x), FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 141,
        "query": "31 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Each real number is a number. Real numbers are not imaginary. Integers are real numbers. Natural numbers are integers. Each natural number is not negative. Each prime number is a natural number. Prime numbers are prime. Complex numbers are imaginary. Mersenne primes are prime numbers. Mersenne primes are prime. 31 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime_number(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 142,
        "query": "3 is not real.",
        "query_fol": "~real_number(x)",
        "context": "Every real number is a number. Every real number is real. Every imaginary number is not real. Every integer is a real number. Natural numbers are integers. Natural numbers are not negative. Prime numbers are natural numbers. Each prime number is prime. Each Mersenne prime is a prime number. Mersenne primes are prime. 3 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 143,
        "query": "31 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Every complex number is imaginary. Real numbers are numbers. Real numbers are not imaginary. Integers are real numbers. Every natural number is an integer. Every natural number is positive. Each prime number is a natural number. Prime numbers are not composite. Mersenne primes are prime numbers. Mersenne primes are not composite. 31 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime_number(x) => ~composite(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 144,
        "query": "Rex is not bony.",
        "query_fol": "~bony(x)",
        "context": "Every animal is multicellular. Whales are bony. Each invertebrate is an animal. Each protostome is an invertebrate. Arthropods are protostomes. Each arthropod is not bony. Insects are arthropods. Every insect is six-legged. Each lepidopteran is an insect. Every butterfly is a lepidopteran. Painted ladies are butterflies. Rex is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 145,
        "query": "Sally is cold-blooded.",
        "query_fol": "cold_blooded(x)",
        "context": "Animals are multicellular. Every bilaterian is an animal. Each snake is cold-blooded. Chordates are bilaterians. Vertebrates are chordates. Mammals are vertebrates. Every mammal is not cold-blooded. Carnivores are mammals. Carnivores are not herbivorous. Each feline is a carnivore. Each cat is a feline. Tabbies are cats. Sally is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, snake(x) => cold_blooded(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => ~cold_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => ~herbivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 146,
        "query": "Rex is bony.",
        "query_fol": "bony(x)",
        "context": "Animals are multicellular. Invertebrates are animals. Protostomes are invertebrates. Each whale is bony. Every arthropod is a protostome. Arthropods are not bony. Insects are arthropods. Each insect is not eight-legged. Lepidopterans are insects. Each butterfly is a lepidopteran. Painted ladies are butterflies. Rex is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 147,
        "query": "3 is not real.",
        "query_fol": "~real_number(x)",
        "context": "Each real number is a number. Every real number is real. Integers are real numbers. Natural numbers are integers. Every natural number is not negative. Prime numbers are natural numbers. Every prime number is prime. Every imaginary number is not real. Mersenne primes are prime numbers. Mersenne primes are prime. 3 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 148,
        "query": "Wren is not bony.",
        "query_fol": "~bony(x)",
        "context": "Every animal is not unicellular. Each invertebrate is an animal. Each whale is bony. Protostomes are invertebrates. Each arthropod is a protostome. Arthropods are not bony. Every insect is an arthropod. Every insect is six-legged. Lepidopterans are insects. Butterflies are lepidopterans. Each painted lady is a butterfly. Wren is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 149,
        "query": "Alex is cold-blooded.",
        "query_fol": "cold_blooded(x)",
        "context": "Each animal is not unicellular. Bilaterians are animals. Each chordate is a bilaterian. Vertebrates are chordates. Every mammal is a vertebrate. Each mammal is not cold-blooded. Carnivores are mammals. Carnivores are carnivorous. Felines are carnivores. Cats are felines. Tabbies are cats. Each snake is cold-blooded. Alex is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => ~cold_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabbies(x) => cats(x), FOR_ALL x, snake(x) => cold_blooded(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 150,
        "query": "7 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Every real number is a number. Real numbers are not imaginary. Integers are real numbers. Each natural number is an integer. Each natural number is positive. Prime numbers are natural numbers. Every prime number is prime. Mersenne primes are prime numbers. Every Mersenne prime is prime. Complex numbers are imaginary. 7 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 151,
        "query": "Max is not segmented.",
        "query_fol": "~segmented(x)",
        "context": "Animals are not unicellular. Every invertebrate is an animal. Protostomes are invertebrates. Each arthropod is a protostome. Arthropods are segmented. Each nematode is not segmented. Insects are arthropods. Insects are not eight-legged. Each lepidopteran is an insect. Every butterfly is a lepidopteran. Each painted lady is a butterfly. Max is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => segmented(x), FOR_ALL x, nematode(x) => ~segmented(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 152,
        "query": "7 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Complex numbers are imaginary. Real numbers are numbers. Each real number is not imaginary. Integers are real numbers. Natural numbers are integers. Each natural number is positive. Prime numbers are natural numbers. Every prime number is not composite. Every Mersenne prime is a prime number. Every Mersenne prime is prime. 7 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 153,
        "query": "3 is not real.",
        "query_fol": "~real_number(x)",
        "context": "Each real number is a number. Imaginary numbers are not real. Every real number is real. Integers are real numbers. Natural numbers are integers. Every natural number is not negative. Prime numbers are natural numbers. Every prime number is not composite. Each Mersenne prime is a prime number. Mersenne primes are prime. 3 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 154,
        "query": "131071 is not real.",
        "query_fol": "~real_number(x)",
        "context": "Every real number is a number. Real numbers are real. Each integer is a real number. Every natural number is an integer. Every natural number is positive. Each prime number is a natural number. Every prime number is prime. Every imaginary number is not real. Mersenne primes are prime numbers. Each Mersenne prime is not composite. 131071 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime_number(x) => ~composite_number(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 155,
        "query": "7 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Each real number is a number. Each complex number is imaginary. Every real number is not imaginary. Each integer is a real number. Natural numbers are integers. Every natural number is positive. Prime numbers are natural numbers. Prime numbers are prime. Mersenne primes are prime numbers. Mersenne primes are not composite. 7 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => ~composite(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 156,
        "query": "3 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Each real number is a number. Each real number is not imaginary. Integers are real numbers. Every natural number is an integer. Every natural number is not negative. Prime numbers are natural numbers. Prime numbers are prime. Complex numbers are imaginary. Mersenne primes are prime numbers. Mersenne primes are not composite. 3 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => ~composite(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 157,
        "query": "Sally is segmented.",
        "query_fol": "segmented(x)",
        "context": "Each nematode is not segmented. Animals are not unicellular. Each invertebrate is an animal. Protostomes are invertebrates. Each arthropod is a protostome. Each arthropod is segmented. Each insect is an arthropod. Insects are not eight-legged. Lepidopterans are insects. Butterflies are lepidopterans. Each painted lady is a butterfly. Sally is a painted lady.",
        "rules_fol": "[FOR_ALL x, nematode(x) => ~segmented(x), FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => segmented(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 158,
        "query": "Polly is warm-blooded.",
        "query_fol": "warm_blooded(x)",
        "context": "Every animal is not unicellular. Each bilaterian is an animal. Chordates are bilaterians. Each vertebrate is a chordate. Mammals are vertebrates. Each mammal is warm-blooded. Each carnivore is a mammal. Each carnivore is not herbivorous. Every feline is a carnivore. Cats are felines. Each snake is not warm-blooded. Each tabby is a cat. Polly is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => warm_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => ~herbivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, snake(x) => ~warm_blooded(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "True"
    },
    {
        "number": 159,
        "query": "7 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Real numbers are numbers. Real numbers are not imaginary. Each integer is a real number. Each complex number is imaginary. Each natural number is an integer. Natural numbers are not negative. Every prime number is a natural number. Each prime number is prime. Every Mersenne prime is a prime number. Mersenne primes are not composite. 7 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime_number(x) => ~composite_number(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 160,
        "query": "Sam is cold-blooded.",
        "query_fol": "cold_blooded(x)",
        "context": "Animals are not unicellular. Bilaterians are animals. Every chordate is a bilaterian. Vertebrates are chordates. Mammals are vertebrates. Mammals are not cold-blooded. Carnivores are mammals. Each carnivore is carnivorous. Each feline is a carnivore. Every cat is a feline. Snakes are cold-blooded. Tabbies are cats. Sam is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => ~cold_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, snake(x) => cold_blooded(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 161,
        "query": "7 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Every real number is a number. Every real number is not imaginary. Every integer is a real number. Every natural number is an integer. Natural numbers are positive. Complex numbers are imaginary. Prime numbers are natural numbers. Prime numbers are not composite. Mersenne primes are prime numbers. Mersenne primes are not composite. 7 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => positive(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => ~composite(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 162,
        "query": "31 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Each real number is a number. Real numbers are not imaginary. Integers are real numbers. Every natural number is an integer. Every natural number is not negative. Prime numbers are natural numbers. Every prime number is prime. Every complex number is imaginary. Every Mersenne prime is a prime number. Every Mersenne prime is prime. 31 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 163,
        "query": "8191 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Real numbers are numbers. Every real number is not imaginary. Integers are real numbers. Natural numbers are integers. Every natural number is not negative. Prime numbers are natural numbers. Complex numbers are imaginary. Every prime number is not composite. Mersenne primes are prime numbers. Mersenne primes are prime. 8191 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 164,
        "query": "Wren is not warm-blooded.",
        "query_fol": "~warm_blooded(x)",
        "context": "Each animal is multicellular. Bilaterians are animals. Chordates are bilaterians. Vertebrates are chordates. Mammals are vertebrates. Every snake is not warm-blooded. Mammals are warm-blooded. Carnivores are mammals. Carnivores are carnivorous. Each feline is a carnivore. Cats are felines. Tabbies are cats. Wren is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, snake(x) => ~warm_blooded(x), FOR_ALL x, mammal(x) => warm_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 165,
        "query": "Polly is furry.",
        "query_fol": "furry(x)",
        "context": "Animals are multicellular. Snakes are not furry. Each bilaterian is an animal. Chordates are bilaterians. Every vertebrate is a chordate. Each mammal is a vertebrate. Mammals are furry. Carnivores are mammals. Each carnivore is carnivorous. Felines are carnivores. Every cat is a feline. Tabbies are cats. Polly is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, snake(x) => ~furry(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => furry(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "True"
    },
    {
        "number": 166,
        "query": "7 is not real.",
        "query_fol": "~real_number(x)",
        "context": "Every imaginary number is not real. Each real number is a number. Real numbers are real. Each integer is a real number. Natural numbers are integers. Each natural number is not negative. Prime numbers are natural numbers. Prime numbers are not composite. Mersenne primes are prime numbers. Each Mersenne prime is prime. 7 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => ~negative(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 167,
        "query": "7 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Every real number is a number. Every real number is not imaginary. Integers are real numbers. Each natural number is an integer. Natural numbers are positive. Prime numbers are natural numbers. Prime numbers are prime. Each Mersenne prime is a prime number. Complex numbers are imaginary. Mersenne primes are prime. 7 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 168,
        "query": "8191 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Real numbers are numbers. Real numbers are not imaginary. Every integer is a real number. Each natural number is an integer. Each natural number is not negative. Prime numbers are natural numbers. Prime numbers are prime. Each Mersenne prime is a prime number. Complex numbers are imaginary. Each Mersenne prime is not composite. 8191 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, mersenne_prime_number(x) => ~composite_number(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 169,
        "query": "131071 is real.",
        "query_fol": "real_number(x)",
        "context": "Imaginary numbers are not real. Real numbers are numbers. Real numbers are real. Every integer is a real number. Natural numbers are integers. Natural numbers are positive. Every prime number is a natural number. Each prime number is not composite. Every Mersenne prime is a prime number. Mersenne primes are prime. 131071 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 170,
        "query": "31 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Real numbers are numbers. Real numbers are not imaginary. Each integer is a real number. Each natural number is an integer. Natural numbers are not negative. Each prime number is a natural number. Complex numbers are imaginary. Every prime number is not composite. Mersenne primes are prime numbers. Each Mersenne prime is prime. 31 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 171,
        "query": "Wren is not bony.",
        "query_fol": "~bony(x)",
        "context": "Each animal is not unicellular. Invertebrates are animals. Protostomes are invertebrates. Every arthropod is a protostome. Arthropods are not bony. Insects are arthropods. Insects are not eight-legged. Lepidopterans are insects. Every whale is bony. Each butterfly is a lepidopteran. Every painted lady is a butterfly. Wren is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 172,
        "query": "7 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Real numbers are numbers. Real numbers are not imaginary. Integers are real numbers. Every natural number is an integer. Each natural number is not negative. Prime numbers are natural numbers. Complex numbers are imaginary. Each prime number is prime. Mersenne primes are prime numbers. Mersenne primes are prime. 7 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_primes(x) => prime_numbers(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 173,
        "query": "Wren is warm-blooded.",
        "query_fol": "warm_blooded(x)",
        "context": "Snakes are not warm-blooded. Every animal is not unicellular. Each bilaterian is an animal. Each chordate is a bilaterian. Vertebrates are chordates. Every mammal is a vertebrate. Mammals are warm-blooded. Every carnivore is a mammal. Every carnivore is not herbivorous. Every feline is a carnivore. Every cat is a feline. Tabbies are cats. Wren is a tabby.",
        "rules_fol": "[FOR_ALL x, snake(x) => ~warm_blooded(x), FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => warm_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => ~herbivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "True"
    },
    {
        "number": 174,
        "query": "Wren is not bony.",
        "query_fol": "~bony(x)",
        "context": "Each animal is multicellular. Invertebrates are animals. Protostomes are invertebrates. Every whale is bony. Arthropods are protostomes. Each arthropod is not bony. Each insect is an arthropod. Insects are six-legged. Lepidopterans are insects. Each butterfly is a lepidopteran. Every painted lady is a butterfly. Wren is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 175,
        "query": "Alex is not small.",
        "query_fol": "~small(x)",
        "context": "Animals are multicellular. Every invertebrate is an animal. Each protostome is an invertebrate. Whales are not small. Arthropods are protostomes. Arthropods are small. Every insect is an arthropod. Insects are not eight-legged. Every lepidopteran is an insect. Every butterfly is a lepidopteran. Each painted lady is a butterfly. Alex is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, whale(x) => ~small(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => small(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 176,
        "query": "8191 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Real numbers are numbers. Real numbers are not imaginary. Integers are real numbers. Complex numbers are imaginary. Natural numbers are integers. Every natural number is positive. Prime numbers are natural numbers. Each prime number is not composite. Each Mersenne prime is a prime number. Mersenne primes are prime. 8191 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => positive(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 177,
        "query": "131071 is real.",
        "query_fol": "real_number(x)",
        "context": "Imaginary numbers are not real. Real numbers are numbers. Each real number is real. Every integer is a real number. Each natural number is an integer. Each natural number is positive. Every prime number is a natural number. Prime numbers are not composite. Mersenne primes are prime numbers. Mersenne primes are prime. 131071 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 178,
        "query": "131071 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Every real number is a number. Real numbers are not imaginary. Every integer is a real number. Natural numbers are integers. Every natural number is positive. Each prime number is a natural number. Every complex number is imaginary. Each prime number is prime. Mersenne primes are prime numbers. Mersenne primes are prime. 131071 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 179,
        "query": "127 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Real numbers are numbers. Real numbers are not imaginary. Integers are real numbers. Complex numbers are imaginary. Every natural number is an integer. Each natural number is positive. Prime numbers are natural numbers. Each prime number is not composite. Every Mersenne prime is a prime number. Mersenne primes are prime. 127 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 180,
        "query": "8191 is real.",
        "query_fol": "real_number(x)",
        "context": "Every real number is a number. Real numbers are real. Every integer is a real number. Natural numbers are integers. Natural numbers are not negative. Prime numbers are natural numbers. Each prime number is not composite. Each imaginary number is not real. Mersenne primes are prime numbers. Mersenne primes are prime. 8191 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 181,
        "query": "7 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Every real number is a number. Every real number is not imaginary. Every integer is a real number. Every natural number is an integer. Every complex number is imaginary. Natural numbers are positive. Each prime number is a natural number. Each prime number is prime. Each Mersenne prime is a prime number. Mersenne primes are prime. 7 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 182,
        "query": "Stella is warm-blooded.",
        "query_fol": "warm_blooded(x)",
        "context": "Every animal is multicellular. Bilaterians are animals. Chordates are bilaterians. Each vertebrate is a chordate. Snakes are not warm-blooded. Mammals are vertebrates. Each mammal is warm-blooded. Each carnivore is a mammal. Each carnivore is carnivorous. Felines are carnivores. Cats are felines. Every tabby is a cat. Stella is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, snake(x) => ~warm_blooded(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => warm_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "True"
    },
    {
        "number": 183,
        "query": "8191 is not real.",
        "query_fol": "~real_number(x)",
        "context": "Real numbers are numbers. Real numbers are real. Integers are real numbers. Natural numbers are integers. Every imaginary number is not real. Natural numbers are not negative. Every prime number is a natural number. Each prime number is not composite. Each Mersenne prime is a prime number. Each Mersenne prime is prime. 8191 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 184,
        "query": "Wren is segmented.",
        "query_fol": "segmented(x)",
        "context": "Every animal is multicellular. Invertebrates are animals. Nematodes are not segmented. Every protostome is an invertebrate. Arthropods are protostomes. Arthropods are segmented. Every insect is an arthropod. Each insect is six-legged. Every lepidopteran is an insect. Every butterfly is a lepidopteran. Painted ladies are butterflies. Wren is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, nematode(x) => ~segmented(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => segmented(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 185,
        "query": "Max is not small.",
        "query_fol": "~small(x)",
        "context": "Animals are not unicellular. Whales are not small. Each invertebrate is an animal. Every protostome is an invertebrate. Arthropods are protostomes. Arthropods are small. Insects are arthropods. Each insect is six-legged. Each lepidopteran is an insect. Each butterfly is a lepidopteran. Painted ladies are butterflies. Max is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, whale(x) => ~small(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => small(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 186,
        "query": "Max is furry.",
        "query_fol": "furry(x)",
        "context": "Every animal is multicellular. Each bilaterian is an animal. Chordates are bilaterians. Vertebrates are chordates. Snakes are not furry. Mammals are vertebrates. Every mammal is furry. Every carnivore is a mammal. Carnivores are carnivorous. Felines are carnivores. Every cat is a feline. Each tabby is a cat. Max is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, snake(x) => ~furry(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => furry(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "True"
    },
    {
        "number": 187,
        "query": "Max is bony.",
        "query_fol": "bony(x)",
        "context": "Every animal is not unicellular. Every invertebrate is an animal. Protostomes are invertebrates. Arthropods are protostomes. Arthropods are not bony. Insects are arthropods. Every insect is not eight-legged. Each lepidopteran is an insect. Each butterfly is a lepidopteran. Whales are bony. Each painted lady is a butterfly. Max is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 188,
        "query": "Max is segmented.",
        "query_fol": "segmented(x)",
        "context": "Animals are not unicellular. Every invertebrate is an animal. Protostomes are invertebrates. Arthropods are protostomes. Every arthropod is segmented. Each nematode is not segmented. Each insect is an arthropod. Insects are not eight-legged. Each lepidopteran is an insect. Every butterfly is a lepidopteran. Each painted lady is a butterfly. Max is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => segmented(x), FOR_ALL x, nematode(x) => ~segmented(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 189,
        "query": "Stella is not bony.",
        "query_fol": "~bony(x)",
        "context": "Every animal is multicellular. Invertebrates are animals. Protostomes are invertebrates. Every arthropod is a protostome. Every arthropod is not bony. Each insect is an arthropod. Every insect is not eight-legged. Lepidopterans are insects. Whales are bony. Butterflies are lepidopterans. Painted ladies are butterflies. Stella is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 190,
        "query": "7 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Complex numbers are imaginary. Each real number is a number. Every real number is not imaginary. Integers are real numbers. Every natural number is an integer. Natural numbers are not negative. Each prime number is a natural number. Prime numbers are not composite. Every Mersenne prime is a prime number. Every Mersenne prime is prime. 7 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 191,
        "query": "Rex is not cold-blooded.",
        "query_fol": "~cold_blooded(x)",
        "context": "Animals are multicellular. Each bilaterian is an animal. Chordates are bilaterians. Every vertebrate is a chordate. Every mammal is a vertebrate. Mammals are not cold-blooded. Carnivores are mammals. Snakes are cold-blooded. Each carnivore is not herbivorous. Felines are carnivores. Each cat is a feline. Tabbies are cats. Rex is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => ~cold_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, snake(x) => cold_blooded(x), FOR_ALL x, carnivore(x) => ~herbivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "True"
    },
    {
        "number": 192,
        "query": "Max is not bony.",
        "query_fol": "~bony(x)",
        "context": "Animals are not unicellular. Whales are bony. Invertebrates are animals. Every protostome is an invertebrate. Arthropods are protostomes. Arthropods are not bony. Insects are arthropods. Insects are not eight-legged. Each lepidopteran is an insect. Each butterfly is a lepidopteran. Every painted lady is a butterfly. Max is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 193,
        "query": "7 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Every real number is a number. Real numbers are not imaginary. Every integer is a real number. Every natural number is an integer. Each natural number is not negative. Prime numbers are natural numbers. Complex numbers are imaginary. Every prime number is not composite. Each Mersenne prime is a prime number. Mersenne primes are prime. 7 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 194,
        "query": "Max is bony.",
        "query_fol": "bony(x)",
        "context": "Animals are multicellular. Invertebrates are animals. Protostomes are invertebrates. Each arthropod is a protostome. Every arthropod is not bony. Every insect is an arthropod. Every insect is six-legged. Lepidopterans are insects. Butterflies are lepidopterans. Whales are bony. Each painted lady is a butterfly. Max is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 195,
        "query": "3 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Real numbers are numbers. Real numbers are not imaginary. Integers are real numbers. Natural numbers are integers. Natural numbers are not negative. Complex numbers are imaginary. Prime numbers are natural numbers. Prime numbers are not composite. Every Mersenne prime is a prime number. Mersenne primes are prime. 3 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 196,
        "query": "Alex is segmented.",
        "query_fol": "segmented(x)",
        "context": "Every animal is not unicellular. Invertebrates are animals. Every protostome is an invertebrate. Every nematode is not segmented. Every arthropod is a protostome. Arthropods are segmented. Every insect is an arthropod. Insects are not eight-legged. Lepidopterans are insects. Butterflies are lepidopterans. Each painted lady is a butterfly. Alex is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, nematode(x) => ~segmented(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => segmented(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 197,
        "query": "3 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Real numbers are numbers. Every real number is not imaginary. Each integer is a real number. Each natural number is an integer. Every natural number is not negative. Prime numbers are natural numbers. Every prime number is not composite. Each Mersenne prime is a prime number. Mersenne primes are not composite. Each complex number is imaginary. 3 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => ~composite(x), FOR_ALL x, complex_number(x) => imaginary_number(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 198,
        "query": "Fae is small.",
        "query_fol": "small(x)",
        "context": "Each animal is multicellular. Every invertebrate is an animal. Protostomes are invertebrates. Arthropods are protostomes. Each arthropod is small. Every insect is an arthropod. Each insect is not eight-legged. Lepidopterans are insects. Each whale is not small. Butterflies are lepidopterans. Every painted lady is a butterfly. Fae is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => small(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, whale(x) => ~small(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 199,
        "query": "Wren is not warm-blooded.",
        "query_fol": "~warm_blooded(x)",
        "context": "Every snake is not warm-blooded. Every animal is not unicellular. Bilaterians are animals. Every chordate is a bilaterian. Vertebrates are chordates. Each mammal is a vertebrate. Every mammal is warm-blooded. Each carnivore is a mammal. Each carnivore is carnivorous. Every feline is a carnivore. Each cat is a feline. Every tabby is a cat. Wren is a tabby.",
        "rules_fol": "[FOR_ALL x, snake(x) => ~warm_blooded(x), FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => warm_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 200,
        "query": "131071 is not real.",
        "query_fol": "~real_number(x)",
        "context": "Imaginary numbers are not real. Real numbers are numbers. Every real number is real. Every integer is a real number. Natural numbers are integers. Natural numbers are not negative. Every prime number is a natural number. Each prime number is prime. Mersenne primes are prime numbers. Mersenne primes are not composite. 131071 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime_number(x) => ~composite_number(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 201,
        "query": "Sam is not warm-blooded.",
        "query_fol": "~warm_blooded(x)",
        "context": "Each animal is multicellular. Every bilaterian is an animal. Snakes are not warm-blooded. Chordates are bilaterians. Vertebrates are chordates. Every mammal is a vertebrate. Every mammal is warm-blooded. Carnivores are mammals. Every carnivore is carnivorous. Each feline is a carnivore. Cats are felines. Each tabby is a cat. Sam is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, snake(x) => ~warm_blooded(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => warm_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 202,
        "query": "Max is cold-blooded.",
        "query_fol": "cold_blooded(x)",
        "context": "Animals are multicellular. Bilaterians are animals. Chordates are bilaterians. Vertebrates are chordates. Every mammal is a vertebrate. Mammals are not cold-blooded. Each carnivore is a mammal. Every carnivore is not herbivorous. Each feline is a carnivore. Every snake is cold-blooded. Cats are felines. Tabbies are cats. Max is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => ~cold_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => ~herbivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, snake(x) => cold_blooded(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 203,
        "query": "Max is cold-blooded.",
        "query_fol": "cold_blooded(x)",
        "context": "Animals are not unicellular. Bilaterians are animals. Chordates are bilaterians. Vertebrates are chordates. Every snake is cold-blooded. Every mammal is a vertebrate. Every mammal is not cold-blooded. Every carnivore is a mammal. Carnivores are not herbivorous. Each feline is a carnivore. Cats are felines. Tabbies are cats. Max is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, snake(x) => cold_blooded(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => ~cold_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => ~herbivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 204,
        "query": "3 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Each real number is a number. Every real number is not imaginary. Integers are real numbers. Every natural number is an integer. Natural numbers are positive. Each prime number is a natural number. Prime numbers are prime. Mersenne primes are prime numbers. Each Mersenne prime is not composite. Each complex number is imaginary. 3 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => ~composite(x), FOR_ALL x, complex_number(x) => imaginary_number(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 205,
        "query": "Sally is not bony.",
        "query_fol": "~bony(x)",
        "context": "Every animal is not unicellular. Every whale is bony. Every invertebrate is an animal. Every protostome is an invertebrate. Arthropods are protostomes. Each arthropod is not bony. Insects are arthropods. Insects are not eight-legged. Every lepidopteran is an insect. Butterflies are lepidopterans. Painted ladies are butterflies. Sally is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 206,
        "query": "Stella is not small.",
        "query_fol": "~small(x)",
        "context": "Each whale is not small. Animals are multicellular. Invertebrates are animals. Every protostome is an invertebrate. Each arthropod is a protostome. Every arthropod is small. Every insect is an arthropod. Insects are six-legged. Lepidopterans are insects. Every butterfly is a lepidopteran. Painted ladies are butterflies. Stella is a painted lady.",
        "rules_fol": "[FOR_ALL x, whale(x) => ~small(x), FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => small(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 207,
        "query": "7 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Complex numbers are imaginary. Real numbers are numbers. Every real number is not imaginary. Each integer is a real number. Each natural number is an integer. Natural numbers are positive. Prime numbers are natural numbers. Prime numbers are not composite. Every Mersenne prime is a prime number. Mersenne primes are not composite. 7 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime_number(x) => ~composite_number(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 208,
        "query": "Alex is small.",
        "query_fol": "small(x)",
        "context": "Animals are not unicellular. Each invertebrate is an animal. Protostomes are invertebrates. Arthropods are protostomes. Whales are not small. Every arthropod is small. Insects are arthropods. Every insect is six-legged. Each lepidopteran is an insect. Each butterfly is a lepidopteran. Painted ladies are butterflies. Alex is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, whale(x) => ~small(x), FOR_ALL x, arthropod(x) => small(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 209,
        "query": "Sam is bony.",
        "query_fol": "bony(x)",
        "context": "Each animal is multicellular. Invertebrates are animals. Every protostome is an invertebrate. Each arthropod is a protostome. Each whale is bony. Each arthropod is not bony. Insects are arthropods. Each insect is six-legged. Lepidopterans are insects. Butterflies are lepidopterans. Painted ladies are butterflies. Sam is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 210,
        "query": "31 is not real.",
        "query_fol": "~real_number(x)",
        "context": "Real numbers are numbers. Every imaginary number is not real. Real numbers are real. Every integer is a real number. Every natural number is an integer. Natural numbers are not negative. Each prime number is a natural number. Each prime number is prime. Mersenne primes are prime numbers. Mersenne primes are prime. 31 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 211,
        "query": "Alex is bony.",
        "query_fol": "bony(x)",
        "context": "Each animal is multicellular. Whales are bony. Invertebrates are animals. Every protostome is an invertebrate. Arthropods are protostomes. Arthropods are not bony. Insects are arthropods. Insects are not eight-legged. Each lepidopteran is an insect. Each butterfly is a lepidopteran. Every painted lady is a butterfly. Alex is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 212,
        "query": "Sally is segmented.",
        "query_fol": "segmented(x)",
        "context": "Every animal is not unicellular. Every invertebrate is an animal. Every protostome is an invertebrate. Each arthropod is a protostome. Each arthropod is segmented. Insects are arthropods. Each insect is six-legged. Lepidopterans are insects. Nematodes are not segmented. Each butterfly is a lepidopteran. Each painted lady is a butterfly. Sally is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => segmented(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, nematode(x) => ~segmented(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 213,
        "query": "7 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Real numbers are numbers. Complex numbers are imaginary. Real numbers are not imaginary. Integers are real numbers. Natural numbers are integers. Every natural number is positive. Prime numbers are natural numbers. Every prime number is prime. Mersenne primes are prime numbers. Every Mersenne prime is not composite. 7 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime_number(x) => ~composite_number(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 214,
        "query": "31 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Every real number is a number. Real numbers are not imaginary. Each integer is a real number. Natural numbers are integers. Complex numbers are imaginary. Natural numbers are positive. Every prime number is a natural number. Every prime number is not composite. Mersenne primes are prime numbers. Each Mersenne prime is not composite. 31 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, natural_number(x) => positive(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => ~composite(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 215,
        "query": "Stella is not bony.",
        "query_fol": "~bony(x)",
        "context": "Animals are not unicellular. Invertebrates are animals. Protostomes are invertebrates. Arthropods are protostomes. Each arthropod is not bony. Insects are arthropods. Each whale is bony. Each insect is not eight-legged. Every lepidopteran is an insect. Butterflies are lepidopterans. Painted ladies are butterflies. Stella is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 216,
        "query": "Alex is warm-blooded.",
        "query_fol": "warm_blooded(x)",
        "context": "Every animal is not unicellular. Bilaterians are animals. Chordates are bilaterians. Vertebrates are chordates. Mammals are vertebrates. Mammals are warm-blooded. Every carnivore is a mammal. Carnivores are not herbivorous. Every feline is a carnivore. Snakes are not warm-blooded. Every cat is a feline. Each tabby is a cat. Alex is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => warm_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => ~herbivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, snake(x) => ~warm_blooded(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "True"
    },
    {
        "number": 217,
        "query": "7 is not real.",
        "query_fol": "~real_number(x)",
        "context": "Imaginary numbers are not real. Each real number is a number. Every real number is real. Integers are real numbers. Natural numbers are integers. Every natural number is positive. Prime numbers are natural numbers. Prime numbers are prime. Mersenne primes are prime numbers. Mersenne primes are not composite. 7 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => ~composite(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 218,
        "query": "127 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Every real number is a number. Each real number is not imaginary. Integers are real numbers. Natural numbers are integers. Natural numbers are positive. Every prime number is a natural number. Prime numbers are prime. Every complex number is imaginary. Every Mersenne prime is a prime number. Every Mersenne prime is prime. 127 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime(x)]",
        "answer": "True"
    },
    {
        "number": 219,
        "query": "Max is bony.",
        "query_fol": "bony(x)",
        "context": "Every animal is multicellular. Invertebrates are animals. Each protostome is an invertebrate. Every arthropod is a protostome. Every arthropod is not bony. Each whale is bony. Every insect is an arthropod. Every insect is six-legged. Lepidopterans are insects. Each butterfly is a lepidopteran. Every painted lady is a butterfly. Max is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 220,
        "query": "Polly is not cold-blooded.",
        "query_fol": "~cold_blooded(x)",
        "context": "Animals are multicellular. Every bilaterian is an animal. Snakes are cold-blooded. Each chordate is a bilaterian. Every vertebrate is a chordate. Mammals are vertebrates. Mammals are not cold-blooded. Carnivores are mammals. Every carnivore is carnivorous. Each feline is a carnivore. Cats are felines. Tabbies are cats. Polly is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, snake(x) => cold_blooded(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => ~cold_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "True"
    },
    {
        "number": 221,
        "query": "Fae is not bony.",
        "query_fol": "~bony(x)",
        "context": "Every animal is multicellular. Invertebrates are animals. Protostomes are invertebrates. Every arthropod is a protostome. Whales are bony. Arthropods are not bony. Each insect is an arthropod. Insects are not eight-legged. Lepidopterans are insects. Butterflies are lepidopterans. Every painted lady is a butterfly. Fae is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 222,
        "query": "Max is bony.",
        "query_fol": "bony(x)",
        "context": "Animals are not unicellular. Each invertebrate is an animal. Every whale is bony. Each protostome is an invertebrate. Arthropods are protostomes. Arthropods are not bony. Each insect is an arthropod. Each insect is not eight-legged. Every lepidopteran is an insect. Every butterfly is a lepidopteran. Painted ladies are butterflies. Max is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 223,
        "query": "Stella is not cold-blooded.",
        "query_fol": "~cold_blooded(x)",
        "context": "Each animal is not unicellular. Every bilaterian is an animal. Each chordate is a bilaterian. Each vertebrate is a chordate. Mammals are vertebrates. Mammals are not cold-blooded. Carnivores are mammals. Carnivores are not herbivorous. Felines are carnivores. Each cat is a feline. Tabbies are cats. Snakes are cold-blooded. Stella is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => ~cold_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => ~herbivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), FOR_ALL x, snake(x) => cold_blooded(x), tabby(x)]",
        "answer": "True"
    },
    {
        "number": 224,
        "query": "Stella is not small.",
        "query_fol": "~small(x)",
        "context": "Every animal is not unicellular. Every invertebrate is an animal. Protostomes are invertebrates. Arthropods are protostomes. Every arthropod is small. Insects are arthropods. Each whale is not small. Insects are six-legged. Lepidopterans are insects. Butterflies are lepidopterans. Painted ladies are butterflies. Stella is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => small(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, whale(x) => ~small(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 225,
        "query": "Polly is small.",
        "query_fol": "small(x)",
        "context": "Each animal is multicellular. Invertebrates are animals. Whales are not small. Every protostome is an invertebrate. Arthropods are protostomes. Arthropods are small. Every insect is an arthropod. Every insect is not eight-legged. Each lepidopteran is an insect. Each butterfly is a lepidopteran. Each painted lady is a butterfly. Polly is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, whale(x) => ~small(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => small(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 226,
        "query": "Sally is not cold-blooded.",
        "query_fol": "~cold_blooded(x)",
        "context": "Every animal is not unicellular. Every bilaterian is an animal. Each chordate is a bilaterian. Every vertebrate is a chordate. Every mammal is a vertebrate. Every mammal is not cold-blooded. Every carnivore is a mammal. Snakes are cold-blooded. Carnivores are carnivorous. Each feline is a carnivore. Cats are felines. Every tabby is a cat. Sally is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => ~cold_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, snake(x) => cold_blooded(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "True"
    },
    {
        "number": 227,
        "query": "Polly is not segmented.",
        "query_fol": "~segmented(x)",
        "context": "Each animal is not unicellular. Every invertebrate is an animal. Protostomes are invertebrates. Each nematode is not segmented. Arthropods are protostomes. Arthropods are segmented. Every insect is an arthropod. Insects are not eight-legged. Lepidopterans are insects. Every butterfly is a lepidopteran. Painted ladies are butterflies. Polly is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, nematode(x) => ~segmented(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => segmented(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 228,
        "query": "31 is real.",
        "query_fol": "real_number(x)",
        "context": "Every real number is a number. Every real number is real. Imaginary numbers are not real. Each integer is a real number. Each natural number is an integer. Each natural number is not negative. Each prime number is a natural number. Prime numbers are prime. Each Mersenne prime is a prime number. Each Mersenne prime is prime. 31 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 229,
        "query": "Stella is not bony.",
        "query_fol": "~bony(x)",
        "context": "Every animal is multicellular. Every whale is bony. Each invertebrate is an animal. Protostomes are invertebrates. Arthropods are protostomes. Arthropods are not bony. Insects are arthropods. Insects are not eight-legged. Lepidopterans are insects. Each butterfly is a lepidopteran. Painted ladies are butterflies. Stella is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 230,
        "query": "131071 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Every real number is a number. Real numbers are not imaginary. Integers are real numbers. Every complex number is imaginary. Every natural number is an integer. Natural numbers are not negative. Prime numbers are natural numbers. Each prime number is not composite. Mersenne primes are prime numbers. Mersenne primes are not composite. 131071 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime_number(x) => ~composite_number(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 231,
        "query": "Wren is not warm-blooded.",
        "query_fol": "~warm_blooded(x)",
        "context": "Every animal is not unicellular. Bilaterians are animals. Every chordate is a bilaterian. Vertebrates are chordates. Mammals are vertebrates. Every mammal is warm-blooded. Snakes are not warm-blooded. Each carnivore is a mammal. Every carnivore is carnivorous. Felines are carnivores. Cats are felines. Every tabby is a cat. Wren is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => warm_blooded(x), FOR_ALL x, snake(x) => ~warm_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 232,
        "query": "Max is bony.",
        "query_fol": "bony(x)",
        "context": "Animals are multicellular. Each invertebrate is an animal. Protostomes are invertebrates. Arthropods are protostomes. Every arthropod is not bony. Every insect is an arthropod. Insects are not eight-legged. Each lepidopteran is an insect. Whales are bony. Every butterfly is a lepidopteran. Every painted lady is a butterfly. Max is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 233,
        "query": "Alex is not warm-blooded.",
        "query_fol": "~warm_blooded(x)",
        "context": "Animals are multicellular. Each bilaterian is an animal. Chordates are bilaterians. Every vertebrate is a chordate. Every mammal is a vertebrate. Snakes are not warm-blooded. Mammals are warm-blooded. Every carnivore is a mammal. Each carnivore is not herbivorous. Every feline is a carnivore. Cats are felines. Tabbies are cats. Alex is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, snake(x) => ~warm_blooded(x), FOR_ALL x, mammal(x) => warm_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => ~herbivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabbies(x) => cat(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 234,
        "query": "Stella is not bony.",
        "query_fol": "~bony(x)",
        "context": "Each animal is not unicellular. Invertebrates are animals. Every protostome is an invertebrate. Each arthropod is a protostome. Each arthropod is not bony. Each insect is an arthropod. Insects are six-legged. Whales are bony. Lepidopterans are insects. Butterflies are lepidopterans. Each painted lady is a butterfly. Stella is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 235,
        "query": "31 is real.",
        "query_fol": "real_number(x)",
        "context": "Every real number is a number. Each imaginary number is not real. Every real number is real. Each integer is a real number. Each natural number is an integer. Natural numbers are positive. Every prime number is a natural number. Prime numbers are prime. Each Mersenne prime is a prime number. Mersenne primes are prime. 31 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 236,
        "query": "8191 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Each real number is a number. Real numbers are not imaginary. Integers are real numbers. Natural numbers are integers. Each natural number is not negative. Every prime number is a natural number. Complex numbers are imaginary. Prime numbers are not composite. Mersenne primes are prime numbers. Mersenne primes are prime. 8191 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => ~negative(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 237,
        "query": "Max is bony.",
        "query_fol": "bony(x)",
        "context": "Every animal is not unicellular. Invertebrates are animals. Protostomes are invertebrates. Each arthropod is a protostome. Each arthropod is not bony. Every insect is an arthropod. Every insect is not eight-legged. Lepidopterans are insects. Every butterfly is a lepidopteran. Each painted lady is a butterfly. Whales are bony. Max is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), FOR_ALL x, whale(x) => bony(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 238,
        "query": "131071 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Every real number is a number. Every real number is not imaginary. Integers are real numbers. Each natural number is an integer. Natural numbers are not negative. Every complex number is imaginary. Every prime number is a natural number. Each prime number is prime. Each Mersenne prime is a prime number. Each Mersenne prime is prime. 131071 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 239,
        "query": "Sally is bony.",
        "query_fol": "bony(x)",
        "context": "Each animal is multicellular. Invertebrates are animals. Each protostome is an invertebrate. Arthropods are protostomes. Every arthropod is not bony. Whales are bony. Every insect is an arthropod. Every insect is six-legged. Lepidopterans are insects. Every butterfly is a lepidopteran. Each painted lady is a butterfly. Sally is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 240,
        "query": "127 is not real.",
        "query_fol": "~real(x)",
        "context": "Real numbers are numbers. Each real number is real. Each integer is a real number. Each natural number is an integer. Every natural number is positive. Prime numbers are natural numbers. Every prime number is prime. Mersenne primes are prime numbers. Imaginary numbers are not real. Mersenne primes are not composite. 127 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, mersenne_prime_number(x) => ~composite_number(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 241,
        "query": "Sally is small.",
        "query_fol": "small(x)",
        "context": "Each whale is not small. Animals are multicellular. Invertebrates are animals. Protostomes are invertebrates. Every arthropod is a protostome. Arthropods are small. Insects are arthropods. Insects are six-legged. Lepidopterans are insects. Each butterfly is a lepidopteran. Each painted lady is a butterfly. Sally is a painted lady.",
        "rules_fol": "[FOR_ALL x, whale(x) => ~small(x), FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => small(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 242,
        "query": "Wren is not bony.",
        "query_fol": "~bony(x)",
        "context": "Every animal is not unicellular. Invertebrates are animals. Each protostome is an invertebrate. Arthropods are protostomes. Each arthropod is not bony. Insects are arthropods. Every whale is bony. Each insect is six-legged. Every lepidopteran is an insect. Butterflies are lepidopterans. Painted ladies are butterflies. Wren is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 243,
        "query": "8191 is real.",
        "query_fol": "real_number(x)",
        "context": "Real numbers are numbers. Real numbers are real. Integers are real numbers. Imaginary numbers are not real. Each natural number is an integer. Natural numbers are not negative. Prime numbers are natural numbers. Each prime number is prime. Mersenne primes are prime numbers. Every Mersenne prime is prime. 8191 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 244,
        "query": "Polly is cold-blooded.",
        "query_fol": "cold_blooded(x)",
        "context": "Animals are multicellular. Each bilaterian is an animal. Chordates are bilaterians. Vertebrates are chordates. Each mammal is a vertebrate. Every mammal is not cold-blooded. Carnivores are mammals. Each carnivore is not herbivorous. Each feline is a carnivore. Each snake is cold-blooded. Each cat is a feline. Every tabby is a cat. Polly is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => ~cold_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => ~herbivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, snake(x) => cold_blooded(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 245,
        "query": "Wren is cold-blooded.",
        "query_fol": "cold_blooded(x)",
        "context": "Animals are multicellular. Bilaterians are animals. Chordates are bilaterians. Each vertebrate is a chordate. Mammals are vertebrates. Mammals are not cold-blooded. Every snake is cold-blooded. Carnivores are mammals. Every carnivore is not herbivorous. Each feline is a carnivore. Cats are felines. Each tabby is a cat. Wren is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => ~cold_blooded(x), FOR_ALL x, snake(x) => cold_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => ~herbivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 246,
        "query": "Sally is not segmented.",
        "query_fol": "~segmented(x)",
        "context": "Animals are not unicellular. Invertebrates are animals. Each protostome is an invertebrate. Arthropods are protostomes. Arthropods are segmented. Insects are arthropods. Insects are six-legged. Every nematode is not segmented. Lepidopterans are insects. Butterflies are lepidopterans. Painted ladies are butterflies. Sally is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => segmented(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, nematode(x) => ~segmented(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 247,
        "query": "Polly is warm-blooded.",
        "query_fol": "warm_blooded(x)",
        "context": "Every animal is not unicellular. Bilaterians are animals. Each chordate is a bilaterian. Snakes are not warm-blooded. Vertebrates are chordates. Every mammal is a vertebrate. Mammals are warm-blooded. Carnivores are mammals. Each carnivore is not herbivorous. Felines are carnivores. Cats are felines. Each tabby is a cat. Polly is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, snake(x) => ~warm_blooded(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => warm_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => ~herbivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "True"
    },
    {
        "number": 248,
        "query": "7 is real.",
        "query_fol": "real_number(x)",
        "context": "Every real number is a number. Each imaginary number is not real. Real numbers are real. Integers are real numbers. Natural numbers are integers. Natural numbers are not negative. Prime numbers are natural numbers. Prime numbers are prime. Each Mersenne prime is a prime number. Mersenne primes are not composite. 7 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => ~composite(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 249,
        "query": "Sam is warm-blooded.",
        "query_fol": "warm_blooded(x)",
        "context": "Each animal is not unicellular. Each bilaterian is an animal. Every chordate is a bilaterian. Every vertebrate is a chordate. Every snake is not warm-blooded. Mammals are vertebrates. Each mammal is warm-blooded. Each carnivore is a mammal. Every carnivore is carnivorous. Every feline is a carnivore. Each cat is a feline. Tabbies are cats. Sam is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, snake(x) => ~warm_blooded(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => warm_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "True"
    },
    {
        "number": 250,
        "query": "Rex is not bony.",
        "query_fol": "~bony(x)",
        "context": "Whales are bony. Animals are multicellular. Each invertebrate is an animal. Every protostome is an invertebrate. Arthropods are protostomes. Arthropods are not bony. Each insect is an arthropod. Insects are six-legged. Lepidopterans are insects. Butterflies are lepidopterans. Each painted lady is a butterfly. Rex is a painted lady.",
        "rules_fol": "[FOR_ALL x, whale(x) => bony(x), FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 251,
        "query": "Wren is not bony.",
        "query_fol": "~bony(x)",
        "context": "Every animal is multicellular. Invertebrates are animals. Every protostome is an invertebrate. Every arthropod is a protostome. Every arthropod is not bony. Insects are arthropods. Insects are six-legged. Whales are bony. Lepidopterans are insects. Every butterfly is a lepidopteran. Painted ladies are butterflies. Wren is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 252,
        "query": "31 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Real numbers are numbers. Real numbers are not imaginary. Each integer is a real number. Natural numbers are integers. Natural numbers are not negative. Prime numbers are natural numbers. Each prime number is prime. Every Mersenne prime is a prime number. Every complex number is imaginary. Every Mersenne prime is prime. 31 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 253,
        "query": "Fae is segmented.",
        "query_fol": "segmented(x)",
        "context": "Nematodes are not segmented. Animals are not unicellular. Every invertebrate is an animal. Every protostome is an invertebrate. Each arthropod is a protostome. Every arthropod is segmented. Every insect is an arthropod. Insects are six-legged. Lepidopterans are insects. Every butterfly is a lepidopteran. Painted ladies are butterflies. Fae is a painted lady.",
        "rules_fol": "[FOR_ALL x, nematode(x) => ~segmented(x), FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => segmented(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 254,
        "query": "Sam is cold-blooded.",
        "query_fol": "cold_blooded(x)",
        "context": "Every animal is multicellular. Bilaterians are animals. Every snake is cold-blooded. Chordates are bilaterians. Every vertebrate is a chordate. Mammals are vertebrates. Mammals are not cold-blooded. Carnivores are mammals. Carnivores are carnivorous. Felines are carnivores. Each cat is a feline. Every tabby is a cat. Sam is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, snake(x) => cold_blooded(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => ~cold_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 255,
        "query": "Fae is not small.",
        "query_fol": "~small(x)",
        "context": "Whales are not small. Each animal is multicellular. Invertebrates are animals. Protostomes are invertebrates. Every arthropod is a protostome. Arthropods are small. Each insect is an arthropod. Insects are six-legged. Lepidopterans are insects. Butterflies are lepidopterans. Painted ladies are butterflies. Fae is a painted lady.",
        "rules_fol": "[FOR_ALL x, whale(x) => ~small(x), FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => small(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 256,
        "query": "7 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Real numbers are numbers. Each real number is not imaginary. Each integer is a real number. Complex numbers are imaginary. Natural numbers are integers. Every natural number is positive. Each prime number is a natural number. Every prime number is not composite. Every Mersenne prime is a prime number. Mersenne primes are not composite. 7 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => ~composite(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 257,
        "query": "8191 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Real numbers are numbers. Real numbers are not imaginary. Integers are real numbers. Natural numbers are integers. Every natural number is not negative. Prime numbers are natural numbers. Complex numbers are imaginary. Prime numbers are prime. Every Mersenne prime is a prime number. Each Mersenne prime is not composite. 8191 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => ~negative(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => ~composite(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 258,
        "query": "31 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Real numbers are numbers. Real numbers are not imaginary. Integers are real numbers. Natural numbers are integers. Natural numbers are positive. Every prime number is a natural number. Prime numbers are not composite. Each Mersenne prime is a prime number. Each complex number is imaginary. Mersenne primes are prime. 31 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 259,
        "query": "8191 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Every real number is a number. Each real number is not imaginary. Every integer is a real number. Complex numbers are imaginary. Natural numbers are integers. Every natural number is positive. Prime numbers are natural numbers. Each prime number is prime. Mersenne primes are prime numbers. Mersenne primes are prime. 8191 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 260,
        "query": "Fae is not segmented.",
        "query_fol": "~segmented(x)",
        "context": "Nematodes are not segmented. Each animal is multicellular. Every invertebrate is an animal. Each protostome is an invertebrate. Arthropods are protostomes. Each arthropod is segmented. Insects are arthropods. Insects are not eight-legged. Lepidopterans are insects. Each butterfly is a lepidopteran. Painted ladies are butterflies. Fae is a painted lady.",
        "rules_fol": "[FOR_ALL x, nematode(x) => ~segmented(x), FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => segmented(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 261,
        "query": "31 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Every real number is a number. Real numbers are not imaginary. Every integer is a real number. Complex numbers are imaginary. Natural numbers are integers. Each natural number is positive. Every prime number is a natural number. Every prime number is not composite. Each Mersenne prime is a prime number. Every Mersenne prime is not composite. 31 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => ~composite(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 262,
        "query": "31 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Each complex number is imaginary. Real numbers are numbers. Real numbers are not imaginary. Every integer is a real number. Natural numbers are integers. Natural numbers are not negative. Each prime number is a natural number. Each prime number is prime. Mersenne primes are prime numbers. Mersenne primes are not composite. 31 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => ~composite(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 263,
        "query": "3 is not real.",
        "query_fol": "~real_number(x)",
        "context": "Each real number is a number. Each real number is real. Every integer is a real number. Natural numbers are integers. Natural numbers are positive. Imaginary numbers are not real. Every prime number is a natural number. Prime numbers are prime. Each Mersenne prime is a prime number. Every Mersenne prime is prime. 3 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 264,
        "query": "Sally is not bony.",
        "query_fol": "~bony(x)",
        "context": "Every animal is not unicellular. Every invertebrate is an animal. Protostomes are invertebrates. Arthropods are protostomes. Every arthropod is not bony. Every insect is an arthropod. Insects are not eight-legged. Whales are bony. Every lepidopteran is an insect. Each butterfly is a lepidopteran. Every painted lady is a butterfly. Sally is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 265,
        "query": "8191 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Real numbers are numbers. Real numbers are not imaginary. Integers are real numbers. Natural numbers are integers. Each natural number is positive. Every complex number is imaginary. Each prime number is a natural number. Every prime number is prime. Mersenne primes are prime numbers. Mersenne primes are prime. 8191 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => positive(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 266,
        "query": "7 is not real.",
        "query_fol": "~real_number(x)",
        "context": "Real numbers are numbers. Each real number is real. Every integer is a real number. Every natural number is an integer. Natural numbers are positive. Prime numbers are natural numbers. Prime numbers are prime. Every Mersenne prime is a prime number. Every Mersenne prime is prime. Every imaginary number is not real. 7 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 267,
        "query": "Polly is small.",
        "query_fol": "small(x)",
        "context": "Animals are multicellular. Each invertebrate is an animal. Every protostome is an invertebrate. Each arthropod is a protostome. Arthropods are small. Each insect is an arthropod. Each insect is not eight-legged. Lepidopterans are insects. Each whale is not small. Butterflies are lepidopterans. Each painted lady is a butterfly. Polly is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => small(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, whale(x) => ~small(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 268,
        "query": "127 is real.",
        "query_fol": "real_number(x)",
        "context": "Every real number is a number. Real numbers are real. Integers are real numbers. Natural numbers are integers. Natural numbers are not negative. Imaginary numbers are not real. Prime numbers are natural numbers. Prime numbers are not composite. Every Mersenne prime is a prime number. Mersenne primes are prime. 127 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => ~negative(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime(x)]",
        "answer": "True"
    },
    {
        "number": 269,
        "query": "8191 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Every real number is a number. Real numbers are not imaginary. Each integer is a real number. Each natural number is an integer. Every natural number is positive. Each prime number is a natural number. Complex numbers are imaginary. Each prime number is prime. Mersenne primes are prime numbers. Every Mersenne prime is prime. 8191 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 270,
        "query": "Stella is bony.",
        "query_fol": "bony(x)",
        "context": "Every animal is not unicellular. Each invertebrate is an animal. Each whale is bony. Protostomes are invertebrates. Each arthropod is a protostome. Arthropods are not bony. Insects are arthropods. Insects are six-legged. Every lepidopteran is an insect. Butterflies are lepidopterans. Every painted lady is a butterfly. Stella is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 271,
        "query": "7 is not real.",
        "query_fol": "~real_number(x)",
        "context": "Every real number is a number. Each imaginary number is not real. Real numbers are real. Integers are real numbers. Natural numbers are integers. Each natural number is not negative. Each prime number is a natural number. Prime numbers are prime. Every Mersenne prime is a prime number. Every Mersenne prime is prime. 7 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 272,
        "query": "Alex is not furry.",
        "query_fol": "~furry(x)",
        "context": "Every animal is multicellular. Each bilaterian is an animal. Each chordate is a bilaterian. Vertebrates are chordates. Mammals are vertebrates. Mammals are furry. Each carnivore is a mammal. Every carnivore is carnivorous. Felines are carnivores. Cats are felines. Tabbies are cats. Snakes are not furry. Alex is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => furry(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), FOR_ALL x, snake(x) => ~furry(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 273,
        "query": "3 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Real numbers are numbers. Every real number is not imaginary. Every integer is a real number. Each natural number is an integer. Every natural number is not negative. Every prime number is a natural number. Each complex number is imaginary. Each prime number is prime. Mersenne primes are prime numbers. Each Mersenne prime is prime. 3 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 274,
        "query": "Stella is furry.",
        "query_fol": "furry(x)",
        "context": "Each animal is multicellular. Every bilaterian is an animal. Chordates are bilaterians. Every vertebrate is a chordate. Each mammal is a vertebrate. Each mammal is furry. Carnivores are mammals. Carnivores are carnivorous. Each feline is a carnivore. Snakes are not furry. Each cat is a feline. Every tabby is a cat. Stella is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => furry(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, snake(x) => ~furry(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "True"
    },
    {
        "number": 275,
        "query": "Wren is not segmented.",
        "query_fol": "~segmented(x)",
        "context": "Animals are multicellular. Each invertebrate is an animal. Each protostome is an invertebrate. Every arthropod is a protostome. Arthropods are segmented. Every insect is an arthropod. Insects are not eight-legged. Lepidopterans are insects. Butterflies are lepidopterans. Nematodes are not segmented. Painted ladies are butterflies. Wren is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => segmented(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, nematode(x) => ~segmented(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 276,
        "query": "Rex is not small.",
        "query_fol": "~small(x)",
        "context": "Animals are not unicellular. Every invertebrate is an animal. Every protostome is an invertebrate. Each arthropod is a protostome. Every arthropod is small. Each insect is an arthropod. Every insect is six-legged. Lepidopterans are insects. Every butterfly is a lepidopteran. Painted ladies are butterflies. Whales are not small. Rex is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => small(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), FOR_ALL x, whale(x) => ~small(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 277,
        "query": "31 is real.",
        "query_fol": "real_number(x)",
        "context": "Real numbers are numbers. Real numbers are real. Each integer is a real number. Imaginary numbers are not real. Every natural number is an integer. Natural numbers are positive. Prime numbers are natural numbers. Each prime number is not composite. Mersenne primes are prime numbers. Mersenne primes are not composite. 31 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime_number(x) => ~composite_number(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 278,
        "query": "Sally is bony.",
        "query_fol": "bony(x)",
        "context": "Each animal is multicellular. Each invertebrate is an animal. Protostomes are invertebrates. Arthropods are protostomes. Every whale is bony. Each arthropod is not bony. Insects are arthropods. Insects are six-legged. Each lepidopteran is an insect. Each butterfly is a lepidopteran. Each painted lady is a butterfly. Sally is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 279,
        "query": "Stella is not cold-blooded.",
        "query_fol": "~cold_blooded(x)",
        "context": "Each animal is multicellular. Every bilaterian is an animal. Chordates are bilaterians. Every snake is cold-blooded. Vertebrates are chordates. Mammals are vertebrates. Mammals are not cold-blooded. Each carnivore is a mammal. Every carnivore is carnivorous. Each feline is a carnivore. Cats are felines. Every tabby is a cat. Stella is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, snake(x) => cold_blooded(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => ~cold_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "True"
    },
    {
        "number": 280,
        "query": "131071 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Real numbers are numbers. Each complex number is imaginary. Real numbers are not imaginary. Integers are real numbers. Each natural number is an integer. Natural numbers are not negative. Every prime number is a natural number. Every prime number is prime. Each Mersenne prime is a prime number. Mersenne primes are prime. 131071 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 281,
        "query": "Stella is small.",
        "query_fol": "small(x)",
        "context": "Every whale is not small. Animals are multicellular. Invertebrates are animals. Protostomes are invertebrates. Arthropods are protostomes. Arthropods are small. Each insect is an arthropod. Each insect is not eight-legged. Lepidopterans are insects. Butterflies are lepidopterans. Each painted lady is a butterfly. Stella is a painted lady.",
        "rules_fol": "[FOR_ALL x, whale(x) => ~small(x), FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => small(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 282,
        "query": "31 is not real.",
        "query_fol": "~real_number(x)",
        "context": "Each real number is a number. Real numbers are real. Every integer is a real number. Imaginary numbers are not real. Each natural number is an integer. Natural numbers are positive. Every prime number is a natural number. Each prime number is prime. Each Mersenne prime is a prime number. Every Mersenne prime is not composite. 31 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => ~composite(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 283,
        "query": "Fae is not cold-blooded.",
        "query_fol": "~cold_blooded(x)",
        "context": "Snakes are cold-blooded. Animals are multicellular. Bilaterians are animals. Every chordate is a bilaterian. Vertebrates are chordates. Mammals are vertebrates. Each mammal is not cold-blooded. Carnivores are mammals. Every carnivore is not herbivorous. Each feline is a carnivore. Each cat is a feline. Each tabby is a cat. Fae is a tabby.",
        "rules_fol": "[FOR_ALL x, snake(x) => cold_blooded(x), FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => ~cold_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => ~herbivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "True"
    },
    {
        "number": 284,
        "query": "Wren is not furry.",
        "query_fol": "~furry(x)",
        "context": "Every animal is not unicellular. Each bilaterian is an animal. Chordates are bilaterians. Each vertebrate is a chordate. Every mammal is a vertebrate. Every mammal is furry. Carnivores are mammals. Each carnivore is carnivorous. Each snake is not furry. Felines are carnivores. Every cat is a feline. Tabbies are cats. Wren is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => furry(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, snake(x) => ~furry(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 285,
        "query": "131071 is not real.",
        "query_fol": "~real_number(x)",
        "context": "Each real number is a number. Each real number is real. Every integer is a real number. Each natural number is an integer. Each natural number is positive. Every prime number is a natural number. Every imaginary number is not real. Every prime number is not composite. Every Mersenne prime is a prime number. Mersenne primes are prime. 131071 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 286,
        "query": "Wren is not small.",
        "query_fol": "~small(x)",
        "context": "Each animal is multicellular. Each invertebrate is an animal. Protostomes are invertebrates. Every whale is not small. Each arthropod is a protostome. Arthropods are small. Insects are arthropods. Insects are six-legged. Each lepidopteran is an insect. Every butterfly is a lepidopteran. Each painted lady is a butterfly. Wren is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, whale(x) => ~small(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => small(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 287,
        "query": "8191 is real.",
        "query_fol": "real_number(x)",
        "context": "Every real number is a number. Real numbers are real. Integers are real numbers. Natural numbers are integers. Each natural number is not negative. Imaginary numbers are not real. Prime numbers are natural numbers. Prime numbers are prime. Each Mersenne prime is a prime number. Every Mersenne prime is prime. 8191 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 288,
        "query": "Fae is not warm-blooded.",
        "query_fol": "~warm_blooded(x)",
        "context": "Each animal is not unicellular. Bilaterians are animals. Every chordate is a bilaterian. Each vertebrate is a chordate. Mammals are vertebrates. Mammals are warm-blooded. Carnivores are mammals. Each carnivore is not herbivorous. Each snake is not warm-blooded. Felines are carnivores. Cats are felines. Each tabby is a cat. Fae is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => warm_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => ~herbivorous(x), FOR_ALL x, snake(x) => ~warm_blooded(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 289,
        "query": "Sam is bony.",
        "query_fol": "bony(x)",
        "context": "Every animal is not unicellular. Invertebrates are animals. Protostomes are invertebrates. Every arthropod is a protostome. Arthropods are not bony. Whales are bony. Each insect is an arthropod. Insects are six-legged. Each lepidopteran is an insect. Each butterfly is a lepidopteran. Painted ladies are butterflies. Sam is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 290,
        "query": "131071 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Every real number is a number. Each real number is not imaginary. Integers are real numbers. Natural numbers are integers. Natural numbers are not negative. Prime numbers are natural numbers. Prime numbers are prime. Each Mersenne prime is a prime number. Complex numbers are imaginary. Mersenne primes are prime. 131071 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 291,
        "query": "Alex is segmented.",
        "query_fol": "segmented(x)",
        "context": "Animals are not unicellular. Every nematode is not segmented. Invertebrates are animals. Protostomes are invertebrates. Arthropods are protostomes. Arthropods are segmented. Every insect is an arthropod. Insects are not eight-legged. Lepidopterans are insects. Every butterfly is a lepidopteran. Each painted lady is a butterfly. Alex is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, nematode(x) => ~segmented(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => segmented(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 292,
        "query": "Alex is warm-blooded.",
        "query_fol": "warm_blooded(x)",
        "context": "Every animal is multicellular. Bilaterians are animals. Every chordate is a bilaterian. Vertebrates are chordates. Each mammal is a vertebrate. Mammals are warm-blooded. Carnivores are mammals. Every carnivore is not herbivorous. Felines are carnivores. Cats are felines. Tabbies are cats. Snakes are not warm-blooded. Alex is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => warm_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => ~herbivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), FOR_ALL x, snake(x) => ~warm_blooded(x), tabby(x)]",
        "answer": "True"
    },
    {
        "number": 293,
        "query": "131071 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Real numbers are numbers. Every real number is not imaginary. Each integer is a real number. Natural numbers are integers. Natural numbers are positive. Complex numbers are imaginary. Prime numbers are natural numbers. Every prime number is prime. Every Mersenne prime is a prime number. Each Mersenne prime is not composite. 131071 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => ~composite(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 294,
        "query": "Stella is warm-blooded.",
        "query_fol": "FOR_ALL x, stella(x) => warm_blooded(x)",
        "context": "Animals are not unicellular. Bilaterians are animals. Chordates are bilaterians. Snakes are not warm-blooded. Every vertebrate is a chordate. Mammals are vertebrates. Every mammal is warm-blooded. Each carnivore is a mammal. Carnivores are carnivorous. Felines are carnivores. Cats are felines. Tabbies are cats. Stella is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, snake(x) => ~warm_blooded(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => warm_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "True"
    },
    {
        "number": 295,
        "query": "7 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Real numbers are numbers. Real numbers are not imaginary. Every integer is a real number. Every natural number is an integer. Natural numbers are not negative. Prime numbers are natural numbers. Each prime number is not composite. Each Mersenne prime is a prime number. Every complex number is imaginary. Mersenne primes are prime. 7 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 296,
        "query": "127 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Each real number is a number. Each real number is not imaginary. Each integer is a real number. Natural numbers are integers. Each complex number is imaginary. Each natural number is positive. Each prime number is a natural number. Each prime number is prime. Every Mersenne prime is a prime number. Each Mersenne prime is prime. 127 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, natural_number(x) => positive(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 297,
        "query": "131071 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Real numbers are numbers. Each real number is not imaginary. Integers are real numbers. Every natural number is an integer. Natural numbers are positive. Every complex number is imaginary. Prime numbers are natural numbers. Prime numbers are prime. Every Mersenne prime is a prime number. Each Mersenne prime is not composite. 131071 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime_number(x) => ~composite_number(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 298,
        "query": "Max is cold-blooded.",
        "query_fol": "cold_blooded(x)",
        "context": "Animals are multicellular. Each snake is cold-blooded. Bilaterians are animals. Chordates are bilaterians. Vertebrates are chordates. Each mammal is a vertebrate. Each mammal is not cold-blooded. Carnivores are mammals. Carnivores are carnivorous. Felines are carnivores. Cats are felines. Every tabby is a cat. Max is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, snake(x) => cold_blooded(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => ~cold_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 299,
        "query": "3 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Each real number is a number. Each real number is not imaginary. Each complex number is imaginary. Integers are real numbers. Natural numbers are integers. Each natural number is not negative. Every prime number is a natural number. Prime numbers are prime. Every Mersenne prime is a prime number. Mersenne primes are not composite. 3 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime_number(x) => ~composite_number(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 300,
        "query": "31 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Real numbers are numbers. Every complex number is imaginary. Real numbers are not imaginary. Integers are real numbers. Natural numbers are integers. Natural numbers are positive. Every prime number is a natural number. Every prime number is not composite. Mersenne primes are prime numbers. Each Mersenne prime is not composite. 31 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => ~composite(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 301,
        "query": "8191 is not real.",
        "query_fol": "~real_number(x)",
        "context": "Real numbers are numbers. Each real number is real. Integers are real numbers. Each natural number is an integer. Natural numbers are not negative. Imaginary numbers are not real. Each prime number is a natural number. Prime numbers are prime. Each Mersenne prime is a prime number. Every Mersenne prime is prime. 8191 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 302,
        "query": "Max is bony.",
        "query_fol": "bony(x)",
        "context": "Whales are bony. Animals are multicellular. Invertebrates are animals. Protostomes are invertebrates. Every arthropod is a protostome. Arthropods are not bony. Insects are arthropods. Insects are six-legged. Lepidopterans are insects. Butterflies are lepidopterans. Painted ladies are butterflies. Max is a painted lady.",
        "rules_fol": "[FOR_ALL x, whale(x) => bony(x), FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 303,
        "query": "31 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Each real number is a number. Real numbers are not imaginary. Integers are real numbers. Natural numbers are integers. Natural numbers are not negative. Every prime number is a natural number. Prime numbers are not composite. Complex numbers are imaginary. Mersenne primes are prime numbers. Every Mersenne prime is prime. 31 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 304,
        "query": "Polly is segmented.",
        "query_fol": "segmented(x)",
        "context": "Animals are multicellular. Invertebrates are animals. Each protostome is an invertebrate. Arthropods are protostomes. Arthropods are segmented. Every nematode is not segmented. Every insect is an arthropod. Insects are not eight-legged. Each lepidopteran is an insect. Butterflies are lepidopterans. Every painted lady is a butterfly. Polly is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => segmented(x), FOR_ALL x, nematode(x) => ~segmented(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 305,
        "query": "3 is not real.",
        "query_fol": "~real_number(x)",
        "context": "Each imaginary number is not real. Real numbers are numbers. Each real number is real. Integers are real numbers. Natural numbers are integers. Natural numbers are not negative. Prime numbers are natural numbers. Prime numbers are prime. Mersenne primes are prime numbers. Mersenne primes are not composite. 3 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => ~composite(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 306,
        "query": "Max is bony.",
        "query_fol": "bony(x)",
        "context": "Animals are not unicellular. Every invertebrate is an animal. Protostomes are invertebrates. Every arthropod is a protostome. Arthropods are not bony. Every whale is bony. Insects are arthropods. Insects are not eight-legged. Lepidopterans are insects. Butterflies are lepidopterans. Painted ladies are butterflies. Max is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 307,
        "query": "Wren is small.",
        "query_fol": "small(x)",
        "context": "Animals are not unicellular. Invertebrates are animals. Each protostome is an invertebrate. Every arthropod is a protostome. Each whale is not small. Arthropods are small. Insects are arthropods. Insects are six-legged. Each lepidopteran is an insect. Every butterfly is a lepidopteran. Each painted lady is a butterfly. Wren is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, whale(x) => ~small(x), FOR_ALL x, arthropod(x) => small(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 308,
        "query": "Fae is not small.",
        "query_fol": "~small(x)",
        "context": "Animals are not unicellular. Every invertebrate is an animal. Protostomes are invertebrates. Each arthropod is a protostome. Whales are not small. Each arthropod is small. Each insect is an arthropod. Every insect is six-legged. Lepidopterans are insects. Butterflies are lepidopterans. Each painted lady is a butterfly. Fae is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, whale(x) => ~small(x), FOR_ALL x, arthropod(x) => small(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 309,
        "query": "Wren is not furry.",
        "query_fol": "~furry(x)",
        "context": "Each animal is not unicellular. Bilaterians are animals. Chordates are bilaterians. Vertebrates are chordates. Mammals are vertebrates. Snakes are not furry. Mammals are furry. Each carnivore is a mammal. Carnivores are not herbivorous. Each feline is a carnivore. Cats are felines. Each tabby is a cat. Wren is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, snake(x) => ~furry(x), FOR_ALL x, mammal(x) => furry(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => ~herbivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 310,
        "query": "7 is real.",
        "query_fol": "real_number(x)",
        "context": "Each real number is a number. Each real number is real. Each imaginary number is not real. Each integer is a real number. Natural numbers are integers. Natural numbers are positive. Every prime number is a natural number. Each prime number is prime. Mersenne primes are prime numbers. Mersenne primes are not composite. 7 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime_number(x) => ~composite_number(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 311,
        "query": "Wren is bony.",
        "query_fol": "bony(x)",
        "context": "Each animal is not unicellular. Invertebrates are animals. Each protostome is an invertebrate. Arthropods are protostomes. Arthropods are not bony. Every insect is an arthropod. Each whale is bony. Insects are six-legged. Each lepidopteran is an insect. Each butterfly is a lepidopteran. Painted ladies are butterflies. Wren is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 312,
        "query": "3 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Every complex number is imaginary. Every real number is a number. Every real number is not imaginary. Integers are real numbers. Natural numbers are integers. Natural numbers are positive. Prime numbers are natural numbers. Each prime number is prime. Each Mersenne prime is a prime number. Mersenne primes are not composite. 3 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => positive(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => ~composite_number(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 313,
        "query": "Sally is not warm-blooded.",
        "query_fol": "~warm_blooded(x)",
        "context": "Each animal is not unicellular. Bilaterians are animals. Each chordate is a bilaterian. Every vertebrate is a chordate. Each mammal is a vertebrate. Every mammal is warm-blooded. Every carnivore is a mammal. Snakes are not warm-blooded. Each carnivore is not herbivorous. Each feline is a carnivore. Each cat is a feline. Tabbies are cats. Sally is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => warm_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, snake(x) => ~warm_blooded(x), FOR_ALL x, carnivore(x) => ~herbivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 314,
        "query": "Fae is not bony.",
        "query_fol": "~bony(x)",
        "context": "Every animal is not unicellular. Invertebrates are animals. Protostomes are invertebrates. Arthropods are protostomes. Arthropods are not bony. Every insect is an arthropod. Every insect is six-legged. Each lepidopteran is an insect. Butterflies are lepidopterans. Every painted lady is a butterfly. Every whale is bony. Fae is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), FOR_ALL x, whale(x) => bony(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 315,
        "query": "31 is real.",
        "query_fol": "real_number(x)",
        "context": "Imaginary numbers are not real. Real numbers are numbers. Every real number is real. Each integer is a real number. Natural numbers are integers. Natural numbers are positive. Every prime number is a natural number. Prime numbers are prime. Mersenne primes are prime numbers. Mersenne primes are not composite. 31 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, imaginary_numbers(x) => ~real(x), FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime_number(x) => ~composite_number(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 316,
        "query": "131071 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Each complex number is imaginary. Real numbers are numbers. Real numbers are not imaginary. Each integer is a real number. Natural numbers are integers. Every natural number is positive. Every prime number is a natural number. Prime numbers are not composite. Every Mersenne prime is a prime number. Each Mersenne prime is not composite. 131071 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => ~composite(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 317,
        "query": "Sally is not small.",
        "query_fol": "~small(x)",
        "context": "Animals are multicellular. Each whale is not small. Invertebrates are animals. Protostomes are invertebrates. Arthropods are protostomes. Every arthropod is small. Each insect is an arthropod. Each insect is six-legged. Each lepidopteran is an insect. Butterflies are lepidopterans. Every painted lady is a butterfly. Sally is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, whale(x) => ~small(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => small(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 318,
        "query": "31 is not real.",
        "query_fol": "~real(x)",
        "context": "Real numbers are numbers. Real numbers are real. Integers are real numbers. Natural numbers are integers. Natural numbers are positive. Every prime number is a natural number. Prime numbers are not composite. Imaginary numbers are not real. Mersenne primes are prime numbers. Each Mersenne prime is prime. 31 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 319,
        "query": "3 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Each real number is a number. Each complex number is imaginary. Real numbers are not imaginary. Integers are real numbers. Natural numbers are integers. Natural numbers are positive. Every prime number is a natural number. Every prime number is prime. Each Mersenne prime is a prime number. Every Mersenne prime is prime. 3 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 320,
        "query": "Stella is cold-blooded.",
        "query_fol": "cold_blooded(x)",
        "context": "Each animal is not unicellular. Snakes are cold-blooded. Bilaterians are animals. Chordates are bilaterians. Vertebrates are chordates. Each mammal is a vertebrate. Every mammal is not cold-blooded. Each carnivore is a mammal. Carnivores are not herbivorous. Every feline is a carnivore. Cats are felines. Tabbies are cats. Stella is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, snake(x) => cold_blooded(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => ~cold_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => ~herbivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 321,
        "query": "8191 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Each real number is a number. Real numbers are not imaginary. Complex numbers are imaginary. Integers are real numbers. Each natural number is an integer. Every natural number is not negative. Each prime number is a natural number. Every prime number is prime. Every Mersenne prime is a prime number. Every Mersenne prime is prime. 8191 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 322,
        "query": "Stella is not warm-blooded.",
        "query_fol": "~warm_blooded(x)",
        "context": "Animals are not unicellular. Bilaterians are animals. Each chordate is a bilaterian. Vertebrates are chordates. Each mammal is a vertebrate. Mammals are warm-blooded. Every carnivore is a mammal. Every carnivore is not herbivorous. Each feline is a carnivore. Snakes are not warm-blooded. Cats are felines. Tabbies are cats. Stella is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => warm_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => ~herbivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, snake(x) => ~warm_blooded(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 323,
        "query": "Stella is not bony.",
        "query_fol": "~bony(x)",
        "context": "Animals are multicellular. Invertebrates are animals. Every protostome is an invertebrate. Arthropods are protostomes. Each arthropod is not bony. Each insect is an arthropod. Every whale is bony. Insects are not eight-legged. Each lepidopteran is an insect. Butterflies are lepidopterans. Painted ladies are butterflies. Stella is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 324,
        "query": "3 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Every real number is a number. Each real number is not imaginary. Integers are real numbers. Complex numbers are imaginary. Natural numbers are integers. Natural numbers are not negative. Prime numbers are natural numbers. Prime numbers are not composite. Every Mersenne prime is a prime number. Mersenne primes are prime. 3 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 325,
        "query": "127 is real.",
        "query_fol": "real_number(x)",
        "context": "Imaginary numbers are not real. Real numbers are numbers. Every real number is real. Each integer is a real number. Natural numbers are integers. Every natural number is not negative. Every prime number is a natural number. Prime numbers are not composite. Each Mersenne prime is a prime number. Mersenne primes are prime. 127 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime(x)]",
        "answer": "True"
    },
    {
        "number": 326,
        "query": "Wren is bony.",
        "query_fol": "bony(x)",
        "context": "Animals are not unicellular. Every invertebrate is an animal. Protostomes are invertebrates. Arthropods are protostomes. Arthropods are not bony. Insects are arthropods. Insects are six-legged. Whales are bony. Lepidopterans are insects. Each butterfly is a lepidopteran. Every painted lady is a butterfly. Wren is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 327,
        "query": "131071 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Every real number is a number. Every complex number is imaginary. Real numbers are not imaginary. Integers are real numbers. Each natural number is an integer. Each natural number is positive. Prime numbers are natural numbers. Prime numbers are prime. Each Mersenne prime is a prime number. Mersenne primes are prime. 131071 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 328,
        "query": "Rex is not small.",
        "query_fol": "~small(x)",
        "context": "Each animal is multicellular. Invertebrates are animals. Protostomes are invertebrates. Each arthropod is a protostome. Each arthropod is small. Every insect is an arthropod. Each insect is six-legged. Lepidopterans are insects. Butterflies are lepidopterans. Every whale is not small. Each painted lady is a butterfly. Rex is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => small(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, whale(x) => ~small(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 329,
        "query": "131071 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Real numbers are numbers. Real numbers are not imaginary. Every integer is a real number. Every natural number is an integer. Every natural number is positive. Complex numbers are imaginary. Prime numbers are natural numbers. Prime numbers are prime. Mersenne primes are prime numbers. Each Mersenne prime is prime. 131071 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 330,
        "query": "Rex is segmented.",
        "query_fol": "segmented(x)",
        "context": "Each animal is not unicellular. Each invertebrate is an animal. Protostomes are invertebrates. Each arthropod is a protostome. Each arthropod is segmented. Each nematode is not segmented. Every insect is an arthropod. Each insect is six-legged. Every lepidopteran is an insect. Every butterfly is a lepidopteran. Painted ladies are butterflies. Rex is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => segmented(x), FOR_ALL x, nematode(x) => ~segmented(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 331,
        "query": "Wren is not segmented.",
        "query_fol": "~segmented(x)",
        "context": "Animals are multicellular. Each invertebrate is an animal. Protostomes are invertebrates. Each arthropod is a protostome. Arthropods are segmented. Nematodes are not segmented. Insects are arthropods. Each insect is not eight-legged. Lepidopterans are insects. Butterflies are lepidopterans. Painted ladies are butterflies. Wren is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => segmented(x), FOR_ALL x, nematode(x) => ~segmented(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 332,
        "query": "3 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Every real number is a number. Every real number is not imaginary. Each integer is a real number. Every natural number is an integer. Natural numbers are positive. Every prime number is a natural number. Every complex number is imaginary. Every prime number is prime. Mersenne primes are prime numbers. Every Mersenne prime is not composite. 3 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => ~composite_number(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 333,
        "query": "8191 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Each real number is a number. Every real number is not imaginary. Integers are real numbers. Natural numbers are integers. Each natural number is positive. Prime numbers are natural numbers. Prime numbers are not composite. Each Mersenne prime is a prime number. Complex numbers are imaginary. Mersenne primes are prime. 8191 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 334,
        "query": "3 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Every real number is a number. Every real number is not imaginary. Every integer is a real number. Each natural number is an integer. Natural numbers are positive. Complex numbers are imaginary. Every prime number is a natural number. Every prime number is prime. Mersenne primes are prime numbers. Mersenne primes are prime. 3 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 335,
        "query": "127 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Real numbers are numbers. Complex numbers are imaginary. Real numbers are not imaginary. Integers are real numbers. Natural numbers are integers. Every natural number is not negative. Each prime number is a natural number. Prime numbers are prime. Mersenne primes are prime numbers. Mersenne primes are prime. 127 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => ~negative(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 336,
        "query": "Polly is bony.",
        "query_fol": "bony(x)",
        "context": "Every animal is not unicellular. Invertebrates are animals. Every protostome is an invertebrate. Each arthropod is a protostome. Arthropods are not bony. Insects are arthropods. Insects are six-legged. Whales are bony. Each lepidopteran is an insect. Each butterfly is a lepidopteran. Painted ladies are butterflies. Polly is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 337,
        "query": "3 is real.",
        "query_fol": "real_number(x)",
        "context": "Every real number is a number. Real numbers are real. Integers are real numbers. Natural numbers are integers. Each natural number is positive. Prime numbers are natural numbers. Every prime number is prime. Imaginary numbers are not real. Every Mersenne prime is a prime number. Mersenne primes are prime. 3 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 338,
        "query": "Sally is not small.",
        "query_fol": "~small(x)",
        "context": "Animals are multicellular. Each invertebrate is an animal. Each protostome is an invertebrate. Arthropods are protostomes. Arthropods are small. Each insect is an arthropod. Each insect is not eight-legged. Lepidopterans are insects. Each butterfly is a lepidopteran. Each whale is not small. Painted ladies are butterflies. Sally is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => small(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, whale(x) => ~small(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 339,
        "query": "131071 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Every real number is a number. Each real number is not imaginary. Integers are real numbers. Every natural number is an integer. Natural numbers are positive. Prime numbers are natural numbers. Every prime number is prime. Mersenne primes are prime numbers. Each Mersenne prime is not composite. Complex numbers are imaginary. 131071 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => ~composite(x), FOR_ALL x, complex_number(x) => imaginary_number(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 340,
        "query": "Sam is bony.",
        "query_fol": "bony(x)",
        "context": "Animals are multicellular. Invertebrates are animals. Protostomes are invertebrates. Arthropods are protostomes. Each arthropod is not bony. Whales are bony. Every insect is an arthropod. Every insect is not eight-legged. Each lepidopteran is an insect. Each butterfly is a lepidopteran. Painted ladies are butterflies. Sam is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 341,
        "query": "8191 is real.",
        "query_fol": "real_number(x)",
        "context": "Every real number is a number. Real numbers are real. Each integer is a real number. Each natural number is an integer. Every natural number is positive. Prime numbers are natural numbers. Every prime number is prime. Every Mersenne prime is a prime number. Every imaginary number is not real. Each Mersenne prime is not composite. 8191 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, mersenne_prime_number(x) => ~composite_number(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 342,
        "query": "Polly is furry.",
        "query_fol": "furry(x)",
        "context": "Animals are multicellular. Bilaterians are animals. Chordates are bilaterians. Each vertebrate is a chordate. Each snake is not furry. Each mammal is a vertebrate. Mammals are furry. Each carnivore is a mammal. Carnivores are not herbivorous. Each feline is a carnivore. Cats are felines. Tabbies are cats. Polly is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, snake(x) => ~furry(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => furry(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => ~herbivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "True"
    },
    {
        "number": 343,
        "query": "Max is cold-blooded.",
        "query_fol": "cold_blooded(x)",
        "context": "Animals are not unicellular. Every bilaterian is an animal. Chordates are bilaterians. Every vertebrate is a chordate. Every mammal is a vertebrate. Each mammal is not cold-blooded. Carnivores are mammals. Every carnivore is not herbivorous. Felines are carnivores. Cats are felines. Tabbies are cats. Each snake is cold-blooded. Max is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => ~cold_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => ~herbivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), FOR_ALL x, snake(x) => cold_blooded(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 344,
        "query": "31 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Each real number is a number. Real numbers are not imaginary. Integers are real numbers. Natural numbers are integers. Each natural number is positive. Complex numbers are imaginary. Prime numbers are natural numbers. Prime numbers are prime. Each Mersenne prime is a prime number. Every Mersenne prime is prime. 31 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 345,
        "query": "7 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Every real number is a number. Each real number is not imaginary. Integers are real numbers. Every complex number is imaginary. Natural numbers are integers. Natural numbers are not negative. Prime numbers are natural numbers. Each prime number is prime. Mersenne primes are prime numbers. Mersenne primes are prime. 7 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 346,
        "query": "Polly is not small.",
        "query_fol": "~small(x)",
        "context": "Animals are not unicellular. Invertebrates are animals. Whales are not small. Protostomes are invertebrates. Every arthropod is a protostome. Each arthropod is small. Every insect is an arthropod. Every insect is six-legged. Each lepidopteran is an insect. Butterflies are lepidopterans. Painted ladies are butterflies. Polly is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, whale(x) => ~small(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => small(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 347,
        "query": "7 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Real numbers are numbers. Every real number is not imaginary. Every integer is a real number. Natural numbers are integers. Each natural number is positive. Prime numbers are natural numbers. Every prime number is prime. Complex numbers are imaginary. Each Mersenne prime is a prime number. Mersenne primes are prime. 7 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 348,
        "query": "Polly is cold-blooded.",
        "query_fol": "cold_blooded(x)",
        "context": "Every snake is cold-blooded. Animals are not unicellular. Each bilaterian is an animal. Chordates are bilaterians. Vertebrates are chordates. Each mammal is a vertebrate. Mammals are not cold-blooded. Each carnivore is a mammal. Carnivores are carnivorous. Felines are carnivores. Cats are felines. Tabbies are cats. Polly is a tabby.",
        "rules_fol": "[FOR_ALL x, snake(x) => cold_blooded(x), FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => ~cold_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 349,
        "query": "3 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Real numbers are numbers. Real numbers are not imaginary. Each integer is a real number. Each natural number is an integer. Every complex number is imaginary. Natural numbers are positive. Every prime number is a natural number. Every prime number is prime. Each Mersenne prime is a prime number. Mersenne primes are not composite. 3 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, natural_number(x) => positive(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime_number(x) => ~composite_number(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 350,
        "query": "131071 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Every real number is a number. Every real number is not imaginary. Complex numbers are imaginary. Integers are real numbers. Natural numbers are integers. Natural numbers are positive. Every prime number is a natural number. Every prime number is not composite. Mersenne primes are prime numbers. Mersenne primes are not composite. 131071 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime_number(x) => ~composite_number(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 351,
        "query": "Polly is not furry.",
        "query_fol": "~furry(x)",
        "context": "Every animal is not unicellular. Each bilaterian is an animal. Each chordate is a bilaterian. Vertebrates are chordates. Mammals are vertebrates. Mammals are furry. Carnivores are mammals. Each carnivore is not herbivorous. Each snake is not furry. Each feline is a carnivore. Each cat is a feline. Tabbies are cats. Polly is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => furry(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => ~herbivorous(x), FOR_ALL x, snake(x) => ~furry(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 352,
        "query": "131071 is real.",
        "query_fol": "real_number(x)",
        "context": "Every real number is a number. Imaginary numbers are not real. Real numbers are real. Each integer is a real number. Natural numbers are integers. Natural numbers are positive. Prime numbers are natural numbers. Prime numbers are not composite. Every Mersenne prime is a prime number. Every Mersenne prime is not composite. 131071 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => ~composite(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 353,
        "query": "8191 is real.",
        "query_fol": "real_number(x)",
        "context": "Real numbers are numbers. Real numbers are real. Each integer is a real number. Every natural number is an integer. Each natural number is positive. Prime numbers are natural numbers. Prime numbers are not composite. Mersenne primes are prime numbers. Imaginary numbers are not real. Mersenne primes are prime. 8191 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 354,
        "query": "31 is not real.",
        "query_fol": "~real_number(x)",
        "context": "Each real number is a number. Real numbers are real. Each integer is a real number. Natural numbers are integers. Each natural number is positive. Prime numbers are natural numbers. Each imaginary number is not real. Prime numbers are prime. Each Mersenne prime is a prime number. Every Mersenne prime is not composite. 31 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => ~composite(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 355,
        "query": "131071 is imaginary.",
        "query_fol": "imaginary(x)",
        "context": "Every real number is a number. Each real number is not imaginary. Integers are real numbers. Each natural number is an integer. Natural numbers are positive. Every complex number is imaginary. Every prime number is a natural number. Every prime number is not composite. Mersenne primes are prime numbers. Mersenne primes are prime. 131071 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 356,
        "query": "3 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Complex numbers are imaginary. Real numbers are numbers. Real numbers are not imaginary. Every integer is a real number. Natural numbers are integers. Each natural number is positive. Every prime number is a natural number. Prime numbers are not composite. Mersenne primes are prime numbers. Every Mersenne prime is prime. 3 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => positive(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 357,
        "query": "Fae is small.",
        "query_fol": "small(x)",
        "context": "Every animal is not unicellular. Invertebrates are animals. Whales are not small. Protostomes are invertebrates. Every arthropod is a protostome. Every arthropod is small. Insects are arthropods. Insects are six-legged. Lepidopterans are insects. Butterflies are lepidopterans. Painted ladies are butterflies. Fae is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, whale(x) => ~small(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => small(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 358,
        "query": "Sally is segmented.",
        "query_fol": "segmented(x)",
        "context": "Each animal is not unicellular. Each invertebrate is an animal. Nematodes are not segmented. Protostomes are invertebrates. Arthropods are protostomes. Arthropods are segmented. Each insect is an arthropod. Every insect is not eight-legged. Every lepidopteran is an insect. Butterflies are lepidopterans. Painted ladies are butterflies. Sally is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, nematode(x) => ~segmented(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => segmented(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 359,
        "query": "Max is cold-blooded.",
        "query_fol": "cold_blooded(x)",
        "context": "Animals are not unicellular. Every bilaterian is an animal. Each chordate is a bilaterian. Vertebrates are chordates. Snakes are cold-blooded. Each mammal is a vertebrate. Mammals are not cold-blooded. Carnivores are mammals. Each carnivore is carnivorous. Every feline is a carnivore. Cats are felines. Tabbies are cats. Max is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, snake(x) => cold_blooded(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => ~cold_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 360,
        "query": "Fae is not furry.",
        "query_fol": "~furry(x)",
        "context": "Animals are not unicellular. Each bilaterian is an animal. Every chordate is a bilaterian. Every snake is not furry. Vertebrates are chordates. Every mammal is a vertebrate. Every mammal is furry. Carnivores are mammals. Carnivores are carnivorous. Every feline is a carnivore. Cats are felines. Tabbies are cats. Fae is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, snake(x) => ~furry(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => furry(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 361,
        "query": "Fae is not cold-blooded.",
        "query_fol": "~cold_blooded(x)",
        "context": "Every animal is multicellular. Bilaterians are animals. Chordates are bilaterians. Vertebrates are chordates. Each mammal is a vertebrate. Mammals are not cold-blooded. Each carnivore is a mammal. Every carnivore is not herbivorous. Felines are carnivores. Snakes are cold-blooded. Every cat is a feline. Tabbies are cats. Fae is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => ~cold_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => ~herbivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, snake(x) => cold_blooded(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "True"
    },
    {
        "number": 362,
        "query": "Sally is segmented.",
        "query_fol": "segmented(x)",
        "context": "Each animal is not unicellular. Each invertebrate is an animal. Each protostome is an invertebrate. Arthropods are protostomes. Every arthropod is segmented. Each insect is an arthropod. Each insect is six-legged. Each nematode is not segmented. Every lepidopteran is an insect. Butterflies are lepidopterans. Painted ladies are butterflies. Sally is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => segmented(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, nematode(x) => ~segmented(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 363,
        "query": "7 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Each real number is a number. Each real number is not imaginary. Complex numbers are imaginary. Integers are real numbers. Each natural number is an integer. Natural numbers are positive. Prime numbers are natural numbers. Each prime number is not composite. Mersenne primes are prime numbers. Every Mersenne prime is prime. 7 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => positive(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 364,
        "query": "127 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Every real number is a number. Real numbers are not imaginary. Complex numbers are imaginary. Each integer is a real number. Natural numbers are integers. Each natural number is positive. Prime numbers are natural numbers. Prime numbers are not composite. Each Mersenne prime is a prime number. Every Mersenne prime is prime. 127 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), FOR_ALL x, mersenne_prime(x) => mersenne_prime(x)]",
        "answer": "False"
    },
    {
        "number": 365,
        "query": "Sally is segmented.",
        "query_fol": "segmented(x)",
        "context": "Animals are multicellular. Invertebrates are animals. Each nematode is not segmented. Every protostome is an invertebrate. Arthropods are protostomes. Each arthropod is segmented. Insects are arthropods. Every insect is not eight-legged. Lepidopterans are insects. Every butterfly is a lepidopteran. Painted ladies are butterflies. Sally is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, nematode(x) => ~segmented(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => segmented(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 366,
        "query": "Alex is not bony.",
        "query_fol": "~bony(x)",
        "context": "Each animal is not unicellular. Each invertebrate is an animal. Every protostome is an invertebrate. Arthropods are protostomes. Arthropods are not bony. Insects are arthropods. Insects are not eight-legged. Each lepidopteran is an insect. Whales are bony. Butterflies are lepidopterans. Painted ladies are butterflies. Alex is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 367,
        "query": "Wren is not segmented.",
        "query_fol": "~segmented(x)",
        "context": "Animals are not unicellular. Invertebrates are animals. Every protostome is an invertebrate. Arthropods are protostomes. Arthropods are segmented. Each insect is an arthropod. Insects are six-legged. Every lepidopteran is an insect. Every butterfly is a lepidopteran. Painted ladies are butterflies. Every nematode is not segmented. Wren is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => segmented(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), FOR_ALL x, nematode(x) => ~segmented(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 368,
        "query": "7 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Every real number is a number. Real numbers are not imaginary. Complex numbers are imaginary. Integers are real numbers. Natural numbers are integers. Every natural number is not negative. Prime numbers are natural numbers. Prime numbers are prime. Mersenne primes are prime numbers. Mersenne primes are prime. 7 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime(x) => prime(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 369,
        "query": "Sally is warm-blooded.",
        "query_fol": "warm_blooded(x)",
        "context": "Each animal is multicellular. Bilaterians are animals. Chordates are bilaterians. Vertebrates are chordates. Every mammal is a vertebrate. Each mammal is warm-blooded. Carnivores are mammals. Carnivores are carnivorous. Every feline is a carnivore. Every cat is a feline. Each snake is not warm-blooded. Tabbies are cats. Sally is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => warm_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, snake(x) => ~warm_blooded(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "True"
    },
    {
        "number": 370,
        "query": "3 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Real numbers are numbers. Each real number is not imaginary. Integers are real numbers. Natural numbers are integers. Each natural number is positive. Prime numbers are natural numbers. Prime numbers are not composite. Each Mersenne prime is a prime number. Each Mersenne prime is prime. Complex numbers are imaginary. 3 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), FOR_ALL x, complex_number(x) => imaginary_number(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 371,
        "query": "Sally is small.",
        "query_fol": "small(x)",
        "context": "Each animal is not unicellular. Each invertebrate is an animal. Protostomes are invertebrates. Every arthropod is a protostome. Each whale is not small. Arthropods are small. Insects are arthropods. Each insect is six-legged. Every lepidopteran is an insect. Each butterfly is a lepidopteran. Painted ladies are butterflies. Sally is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, whale(x) => ~small(x), FOR_ALL x, arthropod(x) => small(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 372,
        "query": "31 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Each real number is a number. Complex numbers are imaginary. Real numbers are not imaginary. Every integer is a real number. Natural numbers are integers. Natural numbers are positive. Prime numbers are natural numbers. Prime numbers are prime. Every Mersenne prime is a prime number. Mersenne primes are prime. 31 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 373,
        "query": "31 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Each real number is a number. Real numbers are not imaginary. Every integer is a real number. Complex numbers are imaginary. Every natural number is an integer. Natural numbers are positive. Prime numbers are natural numbers. Every prime number is prime. Each Mersenne prime is a prime number. Each Mersenne prime is not composite. 31 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => ~composite(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 374,
        "query": "Rex is cold-blooded.",
        "query_fol": "cold_blooded(x)",
        "context": "Every snake is cold-blooded. Every animal is multicellular. Bilaterians are animals. Each chordate is a bilaterian. Vertebrates are chordates. Mammals are vertebrates. Every mammal is not cold-blooded. Each carnivore is a mammal. Carnivores are not herbivorous. Each feline is a carnivore. Cats are felines. Every tabby is a cat. Rex is a tabby.",
        "rules_fol": "[FOR_ALL x, snake(x) => cold_blooded(x), FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => ~cold_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => ~herbivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 375,
        "query": "Wren is not small.",
        "query_fol": "~small(x)",
        "context": "Every animal is not unicellular. Invertebrates are animals. Protostomes are invertebrates. Arthropods are protostomes. Each arthropod is small. Each insect is an arthropod. Insects are not eight-legged. Each whale is not small. Lepidopterans are insects. Butterflies are lepidopterans. Painted ladies are butterflies. Wren is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => small(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, whale(x) => ~small(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 376,
        "query": "Max is cold-blooded.",
        "query_fol": "cold_blooded(x)",
        "context": "Animals are multicellular. Bilaterians are animals. Chordates are bilaterians. Every snake is cold-blooded. Each vertebrate is a chordate. Mammals are vertebrates. Every mammal is not cold-blooded. Carnivores are mammals. Carnivores are not herbivorous. Every feline is a carnivore. Cats are felines. Tabbies are cats. Max is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, snake(x) => cold_blooded(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => ~cold_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => ~herbivore(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 377,
        "query": "Polly is not cold-blooded.",
        "query_fol": "~cold_blooded(x)",
        "context": "Each snake is cold-blooded. Animals are multicellular. Every bilaterian is an animal. Chordates are bilaterians. Each vertebrate is a chordate. Mammals are vertebrates. Mammals are not cold-blooded. Carnivores are mammals. Each carnivore is not herbivorous. Felines are carnivores. Cats are felines. Tabbies are cats. Polly is a tabby.",
        "rules_fol": "[FOR_ALL x, snake(x) => cold_blooded(x), FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => ~cold_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => ~herbivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "True"
    },
    {
        "number": 378,
        "query": "Polly is cold-blooded.",
        "query_fol": "cold_blooded(x)",
        "context": "Animals are multicellular. Bilaterians are animals. Chordates are bilaterians. Snakes are cold-blooded. Vertebrates are chordates. Every mammal is a vertebrate. Mammals are not cold-blooded. Carnivores are mammals. Every carnivore is carnivorous. Each feline is a carnivore. Cats are felines. Tabbies are cats. Polly is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, snake(x) => cold_blooded(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => ~cold_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 379,
        "query": "Stella is warm-blooded.",
        "query_fol": "warm_blooded(x)",
        "context": "Animals are multicellular. Bilaterians are animals. Every chordate is a bilaterian. Vertebrates are chordates. Each mammal is a vertebrate. Snakes are not warm-blooded. Mammals are warm-blooded. Every carnivore is a mammal. Each carnivore is carnivorous. Each feline is a carnivore. Every cat is a feline. Tabbies are cats. Stella is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, snake(x) => ~warm_blooded(x), FOR_ALL x, mammal(x) => warm_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "True"
    },
    {
        "number": 380,
        "query": "31 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Real numbers are numbers. Real numbers are not imaginary. Every integer is a real number. Every natural number is an integer. Natural numbers are positive. Complex numbers are imaginary. Prime numbers are natural numbers. Every prime number is prime. Mersenne primes are prime numbers. Mersenne primes are prime. 31 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 381,
        "query": "3 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Real numbers are numbers. Every complex number is imaginary. Every real number is not imaginary. Each integer is a real number. Each natural number is an integer. Every natural number is positive. Prime numbers are natural numbers. Each prime number is prime. Mersenne primes are prime numbers. Mersenne primes are prime. 3 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 382,
        "query": "7 is real.",
        "query_fol": "real_number(x)",
        "context": "Each real number is a number. Real numbers are real. Integers are real numbers. Every natural number is an integer. Each natural number is not negative. Each prime number is a natural number. Each prime number is prime. Each imaginary number is not real. Every Mersenne prime is a prime number. Each Mersenne prime is prime. 7 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 383,
        "query": "127 is real.",
        "query_fol": "real_number(x)",
        "context": "Real numbers are numbers. Every real number is real. Every imaginary number is not real. Integers are real numbers. Natural numbers are integers. Natural numbers are positive. Every prime number is a natural number. Each prime number is not composite. Every Mersenne prime is a prime number. Each Mersenne prime is prime. 127 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 384,
        "query": "8191 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Each real number is a number. Real numbers are not imaginary. Complex numbers are imaginary. Each integer is a real number. Every natural number is an integer. Natural numbers are positive. Each prime number is a natural number. Prime numbers are not composite. Mersenne primes are prime numbers. Mersenne primes are prime. 8191 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 385,
        "query": "3 is real.",
        "query_fol": "real_number(x)",
        "context": "Each real number is a number. Real numbers are real. Each integer is a real number. Each imaginary number is not real. Natural numbers are integers. Each natural number is not negative. Prime numbers are natural numbers. Prime numbers are prime. Each Mersenne prime is a prime number. Every Mersenne prime is not composite. 3 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => ~composite(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 386,
        "query": "Wren is segmented.",
        "query_fol": "segmented(x)",
        "context": "Nematodes are not segmented. Animals are not unicellular. Each invertebrate is an animal. Each protostome is an invertebrate. Every arthropod is a protostome. Each arthropod is segmented. Every insect is an arthropod. Insects are not eight-legged. Lepidopterans are insects. Every butterfly is a lepidopteran. Painted ladies are butterflies. Wren is a painted lady.",
        "rules_fol": "[FOR_ALL x, nematode(x) => ~segmented(x), FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => segmented(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 387,
        "query": "Fae is bony.",
        "query_fol": "bony(x)",
        "context": "Animals are not unicellular. Invertebrates are animals. Protostomes are invertebrates. Every arthropod is a protostome. Arthropods are not bony. Insects are arthropods. Insects are not eight-legged. Every lepidopteran is an insect. Every butterfly is a lepidopteran. Every whale is bony. Every painted lady is a butterfly. Fae is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 388,
        "query": "31 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Real numbers are numbers. Complex numbers are imaginary. Real numbers are not imaginary. Integers are real numbers. Natural numbers are integers. Every natural number is not negative. Prime numbers are natural numbers. Prime numbers are prime. Every Mersenne prime is a prime number. Every Mersenne prime is not composite. 31 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime_number(x) => ~composite_number(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 389,
        "query": "8191 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Each real number is a number. Real numbers are not imaginary. Integers are real numbers. Each natural number is an integer. Each natural number is not negative. Every complex number is imaginary. Prime numbers are natural numbers. Each prime number is prime. Each Mersenne prime is a prime number. Mersenne primes are not composite. 8191 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => ~composite(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 390,
        "query": "127 is real.",
        "query_fol": "real_number(x)",
        "context": "Real numbers are numbers. Each real number is real. Integers are real numbers. Each natural number is an integer. Natural numbers are positive. Imaginary numbers are not real. Prime numbers are natural numbers. Prime numbers are prime. Mersenne primes are prime numbers. Each Mersenne prime is not composite. 127 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => ~composite_number(x), mersenne_prime(x)]",
        "answer": "True"
    },
    {
        "number": 391,
        "query": "Rex is small.",
        "query_fol": "small(x)",
        "context": "Every animal is not unicellular. Invertebrates are animals. Each protostome is an invertebrate. Arthropods are protostomes. Arthropods are small. Each insect is an arthropod. Whales are not small. Each insect is six-legged. Lepidopterans are insects. Every butterfly is a lepidopteran. Painted ladies are butterflies. Rex is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => small(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, whale(x) => ~small(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 392,
        "query": "Fae is not small.",
        "query_fol": "~small(x)",
        "context": "Animals are multicellular. Every invertebrate is an animal. Protostomes are invertebrates. Each arthropod is a protostome. Arthropods are small. Every insect is an arthropod. Each insect is not eight-legged. Lepidopterans are insects. Each butterfly is a lepidopteran. Whales are not small. Every painted lady is a butterfly. Fae is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => small(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, whale(x) => ~small(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 393,
        "query": "7 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Every real number is a number. Every real number is not imaginary. Integers are real numbers. Every natural number is an integer. Each natural number is not negative. Prime numbers are natural numbers. Prime numbers are prime. Mersenne primes are prime numbers. Every complex number is imaginary. Mersenne primes are not composite. 7 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, mersenne_prime_number(x) => ~composite_number(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 394,
        "query": "Wren is small.",
        "query_fol": "small(x)",
        "context": "Each animal is multicellular. Every invertebrate is an animal. Each protostome is an invertebrate. Every arthropod is a protostome. Each arthropod is small. Every insect is an arthropod. Every whale is not small. Insects are not eight-legged. Every lepidopteran is an insect. Butterflies are lepidopterans. Painted ladies are butterflies. Wren is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => small(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, whale(x) => ~small(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 395,
        "query": "Alex is furry.",
        "query_fol": "furry(x)",
        "context": "Each animal is multicellular. Bilaterians are animals. Chordates are bilaterians. Every snake is not furry. Each vertebrate is a chordate. Every mammal is a vertebrate. Mammals are furry. Carnivores are mammals. Each carnivore is not herbivorous. Every feline is a carnivore. Every cat is a feline. Every tabby is a cat. Alex is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, snake(x) => ~furry(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => furry(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => ~herbivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "True"
    },
    {
        "number": 396,
        "query": "Fae is not segmented.",
        "query_fol": "~segmented(x)",
        "context": "Nematodes are not segmented. Animals are not unicellular. Invertebrates are animals. Protostomes are invertebrates. Arthropods are protostomes. Arthropods are segmented. Insects are arthropods. Each insect is six-legged. Every lepidopteran is an insect. Every butterfly is a lepidopteran. Every painted lady is a butterfly. Fae is a painted lady.",
        "rules_fol": "[FOR_ALL x, nematode(x) => ~segmented(x), FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => segmented(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 397,
        "query": "Alex is not bony.",
        "query_fol": "~bony(x)",
        "context": "Every animal is multicellular. Each invertebrate is an animal. Every protostome is an invertebrate. Each whale is bony. Each arthropod is a protostome. Every arthropod is not bony. Insects are arthropods. Insects are six-legged. Lepidopterans are insects. Butterflies are lepidopterans. Each painted lady is a butterfly. Alex is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 398,
        "query": "Wren is cold-blooded.",
        "query_fol": "cold_blooded(x)",
        "context": "Every snake is cold-blooded. Each animal is not unicellular. Each bilaterian is an animal. Chordates are bilaterians. Vertebrates are chordates. Each mammal is a vertebrate. Mammals are not cold-blooded. Every carnivore is a mammal. Carnivores are not herbivorous. Felines are carnivores. Cats are felines. Each tabby is a cat. Wren is a tabby.",
        "rules_fol": "[FOR_ALL x, snake(x) => cold_blooded(x), FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => ~cold_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => ~herbivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 399,
        "query": "Rex is furry.",
        "query_fol": "furry(x)",
        "context": "Animals are multicellular. Every bilaterian is an animal. Chordates are bilaterians. Every vertebrate is a chordate. Every mammal is a vertebrate. Every mammal is furry. Carnivores are mammals. Every carnivore is carnivorous. Every snake is not furry. Felines are carnivores. Each cat is a feline. Tabbies are cats. Rex is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => furry(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, snake(x) => ~furry(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "True"
    },
    {
        "number": 400,
        "query": "127 is not real.",
        "query_fol": "~real_number(x)",
        "context": "Imaginary numbers are not real. Every real number is a number. Every real number is real. Integers are real numbers. Every natural number is an integer. Each natural number is not negative. Every prime number is a natural number. Prime numbers are not composite. Every Mersenne prime is a prime number. Each Mersenne prime is not composite. 127 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime_number(x) => ~composite_number(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 401,
        "query": "Sally is cold-blooded.",
        "query_fol": "cold_blooded(x)",
        "context": "Every animal is not unicellular. Every snake is cold-blooded. Bilaterians are animals. Chordates are bilaterians. Vertebrates are chordates. Mammals are vertebrates. Each mammal is not cold-blooded. Every carnivore is a mammal. Every carnivore is carnivorous. Felines are carnivores. Cats are felines. Each tabby is a cat. Sally is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, snake(x) => cold_blooded(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => ~cold_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 402,
        "query": "Alex is not segmented.",
        "query_fol": "~segmented(x)",
        "context": "Animals are multicellular. Invertebrates are animals. Each protostome is an invertebrate. Every arthropod is a protostome. Arthropods are segmented. Each insect is an arthropod. Every insect is six-legged. Lepidopterans are insects. Butterflies are lepidopterans. Painted ladies are butterflies. Nematodes are not segmented. Alex is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => segmented(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), FOR_ALL x, nematode(x) => ~segmented(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 403,
        "query": "Alex is not segmented.",
        "query_fol": "~segmented(x)",
        "context": "Animals are not unicellular. Invertebrates are animals. Protostomes are invertebrates. Arthropods are protostomes. Arthropods are segmented. Each insect is an arthropod. Insects are six-legged. Each nematode is not segmented. Lepidopterans are insects. Every butterfly is a lepidopteran. Painted ladies are butterflies. Alex is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => segmented(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, nematode(x) => ~segmented(x), lepidofteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 404,
        "query": "131071 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Each real number is a number. Real numbers are not imaginary. Every integer is a real number. Complex numbers are imaginary. Each natural number is an integer. Each natural number is not negative. Prime numbers are natural numbers. Prime numbers are prime. Mersenne primes are prime numbers. Mersenne primes are prime. 131071 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 405,
        "query": "Fae is bony.",
        "query_fol": "bony(x)",
        "context": "Each animal is multicellular. Every invertebrate is an animal. Protostomes are invertebrates. Every arthropod is a protostome. Arthropods are not bony. Each insect is an arthropod. Whales are bony. Insects are six-legged. Each lepidopteran is an insect. Each butterfly is a lepidopteran. Painted ladies are butterflies. Fae is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 406,
        "query": "Stella is not bony.",
        "query_fol": "~bony(x)",
        "context": "Every animal is multicellular. Every invertebrate is an animal. Every whale is bony. Every protostome is an invertebrate. Arthropods are protostomes. Arthropods are not bony. Each insect is an arthropod. Every insect is six-legged. Lepidopterans are insects. Butterflies are lepidopterans. Each painted lady is a butterfly. Stella is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 407,
        "query": "Wren is cold-blooded.",
        "query_fol": "cold_blooded(x)",
        "context": "Each animal is multicellular. Each bilaterian is an animal. Chordates are bilaterians. Every vertebrate is a chordate. Mammals are vertebrates. Each mammal is not cold-blooded. Each snake is cold-blooded. Carnivores are mammals. Carnivores are not herbivorous. Felines are carnivores. Each cat is a feline. Tabbies are cats. Wren is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => ~cold_blooded(x), FOR_ALL x, snake(x) => cold_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => ~herbivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 408,
        "query": "Stella is not bony.",
        "query_fol": "~bony(x)",
        "context": "Animals are not unicellular. Invertebrates are animals. Each protostome is an invertebrate. Every arthropod is a protostome. Arthropods are not bony. Insects are arthropods. Insects are not eight-legged. Lepidopterans are insects. Every whale is bony. Butterflies are lepidopterans. Every painted lady is a butterfly. Stella is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 409,
        "query": "Fae is bony.",
        "query_fol": "bony(x)",
        "context": "Every whale is bony. Animals are multicellular. Invertebrates are animals. Every protostome is an invertebrate. Arthropods are protostomes. Arthropods are not bony. Insects are arthropods. Every insect is not eight-legged. Every lepidopteran is an insect. Each butterfly is a lepidopteran. Each painted lady is a butterfly. Fae is a painted lady.",
        "rules_fol": "[FOR_ALL x, whale(x) => bony(x), FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 410,
        "query": "Sam is bony.",
        "query_fol": "bony(x)",
        "context": "Every animal is multicellular. Each invertebrate is an animal. Protostomes are invertebrates. Arthropods are protostomes. Whales are bony. Arthropods are not bony. Insects are arthropods. Insects are six-legged. Each lepidopteran is an insect. Butterflies are lepidopterans. Every painted lady is a butterfly. Sam is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 411,
        "query": "Rex is segmented.",
        "query_fol": "segmented(x)",
        "context": "Every animal is multicellular. Every invertebrate is an animal. Each nematode is not segmented. Each protostome is an invertebrate. Arthropods are protostomes. Arthropods are segmented. Insects are arthropods. Every insect is six-legged. Lepidopterans are insects. Butterflies are lepidopterans. Painted ladies are butterflies. Rex is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, nematode(x) => ~segmented(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => segmented(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 412,
        "query": "3 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Each real number is a number. Real numbers are not imaginary. Integers are real numbers. Complex numbers are imaginary. Every natural number is an integer. Every natural number is not negative. Prime numbers are natural numbers. Every prime number is prime. Mersenne primes are prime numbers. Mersenne primes are prime. 3 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 413,
        "query": "8191 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Real numbers are numbers. Real numbers are not imaginary. Complex numbers are imaginary. Every integer is a real number. Each natural number is an integer. Each natural number is positive. Prime numbers are natural numbers. Prime numbers are prime. Mersenne primes are prime numbers. Mersenne primes are not composite. 8191 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime_number(x) => ~composite_number(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 414,
        "query": "Rex is bony.",
        "query_fol": "bony(x)",
        "context": "Each animal is multicellular. Every invertebrate is an animal. Each protostome is an invertebrate. Arthropods are protostomes. Each arthropod is not bony. Insects are arthropods. Insects are six-legged. Every lepidopteran is an insect. Butterflies are lepidopterans. Every painted lady is a butterfly. Whales are bony. Rex is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), FOR_ALL x, whale(x) => bony(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 415,
        "query": "7 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Every real number is a number. Real numbers are not imaginary. Integers are real numbers. Each natural number is an integer. Natural numbers are positive. Every prime number is a natural number. Each prime number is prime. Each Mersenne prime is a prime number. Each complex number is imaginary. Every Mersenne prime is prime. 7 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 416,
        "query": "7 is not real.",
        "query_fol": "~real_number(x)",
        "context": "Every real number is a number. Real numbers are real. Integers are real numbers. Each natural number is an integer. Natural numbers are positive. Prime numbers are natural numbers. Every prime number is prime. Each Mersenne prime is a prime number. Imaginary numbers are not real. Mersenne primes are not composite. 7 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, mersenne_prime_number(x) => ~composite_number(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 417,
        "query": "3 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Each real number is a number. Real numbers are not imaginary. Every integer is a real number. Natural numbers are integers. Natural numbers are positive. Each complex number is imaginary. Prime numbers are natural numbers. Prime numbers are prime. Mersenne primes are prime numbers. Mersenne primes are prime. 3 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 418,
        "query": "Sally is cold-blooded.",
        "query_fol": "cold_blooded(x)",
        "context": "Animals are not unicellular. Every bilaterian is an animal. Chordates are bilaterians. Each vertebrate is a chordate. Mammals are vertebrates. Every mammal is not cold-blooded. Each carnivore is a mammal. Each carnivore is carnivorous. Felines are carnivores. Cats are felines. Each snake is cold-blooded. Every tabby is a cat. Sally is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => ~cold_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, snake(x) => cold_blooded(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 419,
        "query": "127 is real.",
        "query_fol": "real_number(x)",
        "context": "Real numbers are numbers. Each imaginary number is not real. Real numbers are real. Integers are real numbers. Each natural number is an integer. Every natural number is not negative. Prime numbers are natural numbers. Prime numbers are prime. Mersenne primes are prime numbers. Mersenne primes are not composite. 127 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => ~composite(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 420,
        "query": "Stella is not segmented.",
        "query_fol": "~segmented(x)",
        "context": "Animals are multicellular. Invertebrates are animals. Every protostome is an invertebrate. Every arthropod is a protostome. Arthropods are segmented. Insects are arthropods. Insects are not eight-legged. Every lepidopteran is an insect. Every butterfly is a lepidopteran. Every nematode is not segmented. Every painted lady is a butterfly. Stella is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => segmented(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, nematode(x) => ~segmented(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 421,
        "query": "127 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Real numbers are numbers. Real numbers are not imaginary. Complex numbers are imaginary. Integers are real numbers. Natural numbers are integers. Every natural number is positive. Prime numbers are natural numbers. Prime numbers are not composite. Mersenne primes are prime numbers. Mersenne primes are not composite. 127 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime_number(x) => ~composite_number(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 422,
        "query": "7 is not real.",
        "query_fol": "~real_number(x)",
        "context": "Real numbers are numbers. Real numbers are real. Every integer is a real number. Every natural number is an integer. Imaginary numbers are not real. Each natural number is positive. Prime numbers are natural numbers. Each prime number is not composite. Mersenne primes are prime numbers. Each Mersenne prime is not composite. 7 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime_number(x) => ~composite(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 423,
        "query": "Max is not bony.",
        "query_fol": "~bony(x)",
        "context": "Animals are not unicellular. Each invertebrate is an animal. Every protostome is an invertebrate. Arthropods are protostomes. Every whale is bony. Each arthropod is not bony. Insects are arthropods. Each insect is not eight-legged. Lepidopterans are insects. Butterflies are lepidopterans. Each painted lady is a butterfly. Max is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 424,
        "query": "Max is not bony.",
        "query_fol": "~bony(x)",
        "context": "Every animal is multicellular. Invertebrates are animals. Protostomes are invertebrates. Arthropods are protostomes. Arthropods are not bony. Whales are bony. Each insect is an arthropod. Insects are not eight-legged. Each lepidopteran is an insect. Each butterfly is a lepidopteran. Every painted lady is a butterfly. Max is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 425,
        "query": "Max is not bony.",
        "query_fol": "~bony(x)",
        "context": "Animals are not unicellular. Invertebrates are animals. Each protostome is an invertebrate. Arthropods are protostomes. Each arthropod is not bony. Insects are arthropods. Insects are six-legged. Each lepidopteran is an insect. Butterflies are lepidopterans. Painted ladies are butterflies. Whales are bony. Max is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), FOR_ALL x, whale(x) => bony(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 426,
        "query": "131071 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Real numbers are numbers. Every real number is not imaginary. Each integer is a real number. Each natural number is an integer. Every complex number is imaginary. Natural numbers are not negative. Every prime number is a natural number. Prime numbers are not composite. Mersenne primes are prime numbers. Mersenne primes are prime. 131071 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 427,
        "query": "Rex is furry.",
        "query_fol": "furry(x)",
        "context": "Animals are not unicellular. Each bilaterian is an animal. Chordates are bilaterians. Each vertebrate is a chordate. Every mammal is a vertebrate. Each mammal is furry. Carnivores are mammals. Carnivores are carnivorous. Every feline is a carnivore. Every cat is a feline. Every tabby is a cat. Snakes are not furry. Rex is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => furry(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), FOR_ALL x, snake(x) => ~furry(x), tabby(x)]",
        "answer": "True"
    },
    {
        "number": 428,
        "query": "7 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Real numbers are numbers. Each real number is not imaginary. Integers are real numbers. Every natural number is an integer. Natural numbers are positive. Each prime number is a natural number. Prime numbers are prime. Complex numbers are imaginary. Each Mersenne prime is a prime number. Every Mersenne prime is prime. 7 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 429,
        "query": "Sam is cold-blooded.",
        "query_fol": "cold_blooded(x)",
        "context": "Animals are multicellular. Every bilaterian is an animal. Chordates are bilaterians. Each vertebrate is a chordate. Each mammal is a vertebrate. Snakes are cold-blooded. Mammals are not cold-blooded. Each carnivore is a mammal. Each carnivore is carnivorous. Every feline is a carnivore. Cats are felines. Tabbies are cats. Sam is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, snake(x) => cold_blooded(x), FOR_ALL x, mammal(x) => ~cold_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 430,
        "query": "31 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Every real number is a number. Every real number is not imaginary. Each integer is a real number. Natural numbers are integers. Natural numbers are positive. Every prime number is a natural number. Each complex number is imaginary. Prime numbers are prime. Every Mersenne prime is a prime number. Each Mersenne prime is not composite. 31 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => ~composite(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 431,
        "query": "31 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Complex numbers are imaginary. Real numbers are numbers. Every real number is not imaginary. Each integer is a real number. Natural numbers are integers. Natural numbers are positive. Prime numbers are natural numbers. Every prime number is not composite. Mersenne primes are prime numbers. Each Mersenne prime is prime. 31 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 432,
        "query": "8191 is not real.",
        "query_fol": "~real_number(x)",
        "context": "Every real number is a number. Every real number is real. Every integer is a real number. Natural numbers are integers. Every imaginary number is not real. Every natural number is positive. Prime numbers are natural numbers. Prime numbers are not composite. Every Mersenne prime is a prime number. Mersenne primes are prime. 8191 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime_number(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 433,
        "query": "31 is real.",
        "query_fol": "real_number(x)",
        "context": "Each real number is a number. Each real number is real. Every integer is a real number. Each natural number is an integer. Every natural number is not negative. Prime numbers are natural numbers. Imaginary numbers are not real. Every prime number is not composite. Every Mersenne prime is a prime number. Every Mersenne prime is prime. 31 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 434,
        "query": "Stella is cold-blooded.",
        "query_fol": "cold_blooded(x)",
        "context": "Animals are multicellular. Bilaterians are animals. Every chordate is a bilaterian. Each vertebrate is a chordate. Every mammal is a vertebrate. Mammals are not cold-blooded. Carnivores are mammals. Each snake is cold-blooded. Each carnivore is not herbivorous. Felines are carnivores. Cats are felines. Tabbies are cats. Stella is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => ~cold_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, snake(x) => cold_blooded(x), FOR_ALL x, carnivore(x) => ~herbivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 435,
        "query": "8191 is real.",
        "query_fol": "real_number(x)",
        "context": "Real numbers are numbers. Real numbers are real. Integers are real numbers. Every imaginary number is not real. Each natural number is an integer. Every natural number is positive. Prime numbers are natural numbers. Each prime number is not composite. Each Mersenne prime is a prime number. Every Mersenne prime is prime. 8191 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 436,
        "query": "31 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Every complex number is imaginary. Real numbers are numbers. Real numbers are not imaginary. Integers are real numbers. Natural numbers are integers. Natural numbers are not negative. Prime numbers are natural numbers. Each prime number is prime. Mersenne primes are prime numbers. Mersenne primes are not composite. 31 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime_number(x) => ~composite_number(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 437,
        "query": "Fae is not cold-blooded.",
        "query_fol": "~cold_blooded(x)",
        "context": "Each animal is not unicellular. Snakes are cold-blooded. Every bilaterian is an animal. Every chordate is a bilaterian. Each vertebrate is a chordate. Every mammal is a vertebrate. Every mammal is not cold-blooded. Each carnivore is a mammal. Carnivores are carnivorous. Each feline is a carnivore. Cats are felines. Tabbies are cats. Fae is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, snake(x) => cold_blooded(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => ~cold_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "True"
    },
    {
        "number": 438,
        "query": "Alex is not small.",
        "query_fol": "~small(x)",
        "context": "Animals are multicellular. Each invertebrate is an animal. Protostomes are invertebrates. Arthropods are protostomes. Each arthropod is small. Insects are arthropods. Every insect is six-legged. Each lepidopteran is an insect. Each whale is not small. Every butterfly is a lepidopteran. Every painted lady is a butterfly. Alex is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => small(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, whale(x) => ~small(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 439,
        "query": "Sally is not bony.",
        "query_fol": "~bony(x)",
        "context": "Animals are multicellular. Invertebrates are animals. Protostomes are invertebrates. Every whale is bony. Arthropods are protostomes. Every arthropod is not bony. Each insect is an arthropod. Insects are six-legged. Lepidopterans are insects. Every butterfly is a lepidopteran. Painted ladies are butterflies. Sally is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 440,
        "query": "8191 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Each real number is a number. Each real number is not imaginary. Each integer is a real number. Every natural number is an integer. Every natural number is positive. Prime numbers are natural numbers. Every prime number is prime. Complex numbers are imaginary. Mersenne primes are prime numbers. Every Mersenne prime is prime. 8191 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 441,
        "query": "Wren is warm-blooded.",
        "query_fol": "warm_blooded(x)",
        "context": "Every animal is not unicellular. Each snake is not warm-blooded. Every bilaterian is an animal. Chordates are bilaterians. Each vertebrate is a chordate. Each mammal is a vertebrate. Every mammal is warm-blooded. Each carnivore is a mammal. Carnivores are carnivorous. Felines are carnivores. Every cat is a feline. Every tabby is a cat. Wren is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, snake(x) => ~warm_blooded(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => warm_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "True"
    },
    {
        "number": 442,
        "query": "31 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Each real number is a number. Each real number is not imaginary. Each integer is a real number. Natural numbers are integers. Complex numbers are imaginary. Each natural number is not negative. Prime numbers are natural numbers. Each prime number is not composite. Mersenne primes are prime numbers. Mersenne primes are prime. 31 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, natural_number(x) => ~negative(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 443,
        "query": "131071 is not real.",
        "query_fol": "~real_number(x)",
        "context": "Real numbers are numbers. Real numbers are real. Each integer is a real number. Natural numbers are integers. Each imaginary number is not real. Every natural number is positive. Every prime number is a natural number. Every prime number is prime. Each Mersenne prime is a prime number. Each Mersenne prime is prime. 131071 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 444,
        "query": "Max is segmented.",
        "query_fol": "segmented(x)",
        "context": "Animals are not unicellular. Every invertebrate is an animal. Protostomes are invertebrates. Every arthropod is a protostome. Each arthropod is segmented. Insects are arthropods. Each insect is six-legged. Each nematode is not segmented. Lepidopterans are insects. Every butterfly is a lepidopteran. Every painted lady is a butterfly. Max is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => segmented(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, nematode(x) => ~segmented(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 445,
        "query": "7 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Every real number is a number. Every real number is not imaginary. Every integer is a real number. Every natural number is an integer. Every natural number is not negative. Every complex number is imaginary. Each prime number is a natural number. Prime numbers are prime. Mersenne primes are prime numbers. Mersenne primes are prime. 7 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime(x) => prime_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 446,
        "query": "Polly is not bony.",
        "query_fol": "~bony(x)",
        "context": "Every animal is multicellular. Invertebrates are animals. Protostomes are invertebrates. Arthropods are protostomes. Arthropods are not bony. Whales are bony. Every insect is an arthropod. Insects are not eight-legged. Lepidopterans are insects. Butterflies are lepidopterans. Every painted lady is a butterfly. Polly is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 447,
        "query": "127 is real.",
        "query_fol": "real_number(x)",
        "context": "Real numbers are numbers. Each imaginary number is not real. Each real number is real. Integers are real numbers. Natural numbers are integers. Each natural number is positive. Prime numbers are natural numbers. Prime numbers are prime. Every Mersenne prime is a prime number. Mersenne primes are not composite. 127 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => positive(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime_number(x) => ~composite_number(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 448,
        "query": "31 is not real.",
        "query_fol": "~real_number(x)",
        "context": "Each imaginary number is not real. Real numbers are numbers. Real numbers are real. Integers are real numbers. Each natural number is an integer. Natural numbers are positive. Each prime number is a natural number. Prime numbers are not composite. Mersenne primes are prime numbers. Mersenne primes are prime. 31 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 449,
        "query": "Stella is segmented.",
        "query_fol": "segmented(x)",
        "context": "Each animal is multicellular. Every invertebrate is an animal. Each nematode is not segmented. Protostomes are invertebrates. Each arthropod is a protostome. Every arthropod is segmented. Each insect is an arthropod. Insects are not eight-legged. Lepidopterans are insects. Butterflies are lepidopterans. Every painted lady is a butterfly. Stella is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, nematode(x) => ~segmented(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => segmented(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 450,
        "query": "Sam is bony.",
        "query_fol": "bony(x)",
        "context": "Each animal is not unicellular. Invertebrates are animals. Each protostome is an invertebrate. Arthropods are protostomes. Arthropods are not bony. Insects are arthropods. Insects are not eight-legged. Each lepidopteran is an insect. Whales are bony. Butterflies are lepidopterans. Painted ladies are butterflies. Sam is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 451,
        "query": "Sam is furry.",
        "query_fol": "furry(x)",
        "context": "Snakes are not furry. Each animal is not unicellular. Bilaterians are animals. Chordates are bilaterians. Vertebrates are chordates. Mammals are vertebrates. Each mammal is furry. Every carnivore is a mammal. Carnivores are carnivorous. Felines are carnivores. Each cat is a feline. Each tabby is a cat. Sam is a tabby.",
        "rules_fol": "[FOR_ALL x, snake(x) => ~furry(x), FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => furry(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "True"
    },
    {
        "number": 452,
        "query": "8191 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Every real number is a number. Each real number is not imaginary. Integers are real numbers. Every natural number is an integer. Complex numbers are imaginary. Natural numbers are positive. Prime numbers are natural numbers. Each prime number is not composite. Mersenne primes are prime numbers. Every Mersenne prime is not composite. 8191 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime_number(x) => ~composite_number(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 453,
        "query": "31 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Real numbers are numbers. Every real number is not imaginary. Every complex number is imaginary. Each integer is a real number. Natural numbers are integers. Each natural number is positive. Each prime number is a natural number. Every prime number is not composite. Mersenne primes are prime numbers. Every Mersenne prime is not composite. 31 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => positive(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => ~composite_number(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 454,
        "query": "131071 is real.",
        "query_fol": "real_number(x)",
        "context": "Real numbers are numbers. Every real number is real. Integers are real numbers. Natural numbers are integers. Natural numbers are not negative. Prime numbers are natural numbers. Imaginary numbers are not real. Each prime number is prime. Each Mersenne prime is a prime number. Every Mersenne prime is prime. 131071 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => ~negative(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 455,
        "query": "131071 is real.",
        "query_fol": "real_number(x)",
        "context": "Real numbers are numbers. Every real number is real. Every integer is a real number. Natural numbers are integers. Natural numbers are positive. Prime numbers are natural numbers. Prime numbers are prime. Imaginary numbers are not real. Mersenne primes are prime numbers. Each Mersenne prime is not composite. 131071 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => ~composite(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 456,
        "query": "Sam is segmented.",
        "query_fol": "segmented(x)",
        "context": "Each nematode is not segmented. Every animal is multicellular. Invertebrates are animals. Every protostome is an invertebrate. Each arthropod is a protostome. Arthropods are segmented. Insects are arthropods. Each insect is not eight-legged. Each lepidopteran is an insect. Butterflies are lepidopterans. Every painted lady is a butterfly. Sam is a painted lady.",
        "rules_fol": "[FOR_ALL x, nematode(x) => ~segmented(x), FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => segmented(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 457,
        "query": "127 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Real numbers are numbers. Real numbers are not imaginary. Integers are real numbers. Every natural number is an integer. Each natural number is not negative. Each prime number is a natural number. Prime numbers are not composite. Every Mersenne prime is a prime number. Each complex number is imaginary. Every Mersenne prime is prime. 127 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 458,
        "query": "31 is not real.",
        "query_fol": "~real_number(x)",
        "context": "Imaginary numbers are not real. Every real number is a number. Real numbers are real. Integers are real numbers. Natural numbers are integers. Each natural number is not negative. Prime numbers are natural numbers. Prime numbers are not composite. Mersenne primes are prime numbers. Each Mersenne prime is not composite. 31 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => ~composite_number(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 459,
        "query": "Max is small.",
        "query_fol": "small(x)",
        "context": "Every animal is not unicellular. Every invertebrate is an animal. Protostomes are invertebrates. Every whale is not small. Arthropods are protostomes. Arthropods are small. Each insect is an arthropod. Every insect is six-legged. Lepidopterans are insects. Each butterfly is a lepidopteran. Painted ladies are butterflies. Max is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, whale(x) => ~small(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => small(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 460,
        "query": "Polly is not bony.",
        "query_fol": "~bony(x)",
        "context": "Animals are not unicellular. Invertebrates are animals. Each whale is bony. Protostomes are invertebrates. Arthropods are protostomes. Arthropods are not bony. Insects are arthropods. Insects are six-legged. Every lepidopteran is an insect. Each butterfly is a lepidopteran. Every painted lady is a butterfly. Polly is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 461,
        "query": "Sam is segmented.",
        "query_fol": "segmented(x)",
        "context": "Nematodes are not segmented. Animals are not unicellular. Invertebrates are animals. Each protostome is an invertebrate. Each arthropod is a protostome. Arthropods are segmented. Insects are arthropods. Each insect is not eight-legged. Each lepidopteran is an insect. Butterflies are lepidopterans. Every painted lady is a butterfly. Sam is a painted lady.",
        "rules_fol": "[FOR_ALL x, nematode(x) => ~segmented(x), FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => segmented(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 462,
        "query": "Wren is bony.",
        "query_fol": "bony(x)",
        "context": "Animals are not unicellular. Invertebrates are animals. Protostomes are invertebrates. Arthropods are protostomes. Each arthropod is not bony. Insects are arthropods. Every insect is not eight-legged. Every lepidopteran is an insect. Each whale is bony. Butterflies are lepidopterans. Painted ladies are butterflies. Wren is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 463,
        "query": "Rex is not bony.",
        "query_fol": "~bony(x)",
        "context": "Animals are multicellular. Every invertebrate is an animal. Each protostome is an invertebrate. Each arthropod is a protostome. Each arthropod is not bony. Each insect is an arthropod. Whales are bony. Insects are not eight-legged. Every lepidopteran is an insect. Butterflies are lepidopterans. Painted ladies are butterflies. Rex is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 464,
        "query": "31 is real.",
        "query_fol": "real(x)",
        "context": "Each real number is a number. Real numbers are real. Integers are real numbers. Natural numbers are integers. Every natural number is not negative. Imaginary numbers are not real. Prime numbers are natural numbers. Prime numbers are prime. Every Mersenne prime is a prime number. Mersenne primes are not composite. 31 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => ~composite(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 465,
        "query": "Sam is furry.",
        "query_fol": "furry(x)",
        "context": "Animals are not unicellular. Bilaterians are animals. Chordates are bilaterians. Every vertebrate is a chordate. Mammals are vertebrates. Each mammal is furry. Carnivores are mammals. Carnivores are carnivorous. Felines are carnivores. Each cat is a feline. Snakes are not furry. Tabbies are cats. Sam is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => furry(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, snake(x) => ~furry(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "True"
    },
    {
        "number": 466,
        "query": "31 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Every real number is a number. Real numbers are not imaginary. Complex numbers are imaginary. Each integer is a real number. Each natural number is an integer. Each natural number is positive. Prime numbers are natural numbers. Every prime number is not composite. Mersenne primes are prime numbers. Mersenne primes are prime. 31 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 467,
        "query": "131071 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Real numbers are numbers. Each real number is not imaginary. Complex numbers are imaginary. Integers are real numbers. Natural numbers are integers. Natural numbers are positive. Each prime number is a natural number. Every prime number is not composite. Mersenne primes are prime numbers. Every Mersenne prime is prime. 131071 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 468,
        "query": "Max is cold-blooded.",
        "query_fol": "cold_blooded(x)",
        "context": "Snakes are cold-blooded. Each animal is not unicellular. Every bilaterian is an animal. Each chordate is a bilaterian. Vertebrates are chordates. Mammals are vertebrates. Every mammal is not cold-blooded. Every carnivore is a mammal. Carnivores are not herbivorous. Felines are carnivores. Cats are felines. Every tabby is a cat. Max is a tabby.",
        "rules_fol": "[FOR_ALL x, snake(x) => cold_blooded(x), FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => ~cold_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => ~herbivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 469,
        "query": "Sam is not warm-blooded.",
        "query_fol": "~warm_blooded(x)",
        "context": "Each animal is not unicellular. Every bilaterian is an animal. Every chordate is a bilaterian. Every vertebrate is a chordate. Each mammal is a vertebrate. Snakes are not warm-blooded. Each mammal is warm-blooded. Every carnivore is a mammal. Carnivores are carnivorous. Felines are carnivores. Cats are felines. Tabbies are cats. Sam is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, snake(x) => ~warm_blooded(x), FOR_ALL x, mammal(x) => warm_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 470,
        "query": "Sally is not warm-blooded.",
        "query_fol": "~warm_blooded(x)",
        "context": "Animals are multicellular. Bilaterians are animals. Chordates are bilaterians. Vertebrates are chordates. Every mammal is a vertebrate. Each mammal is warm-blooded. Every carnivore is a mammal. Snakes are not warm-blooded. Every carnivore is carnivorous. Every feline is a carnivore. Each cat is a feline. Tabbies are cats. Sally is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => warm_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, snake(x) => ~warm_blooded(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 471,
        "query": "Max is segmented.",
        "query_fol": "segmented(x)",
        "context": "Animals are multicellular. Invertebrates are animals. Protostomes are invertebrates. Nematodes are not segmented. Arthropods are protostomes. Arthropods are segmented. Every insect is an arthropod. Every insect is six-legged. Lepidopterans are insects. Butterflies are lepidopterans. Every painted lady is a butterfly. Max is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, nematode(x) => ~segmented(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => segmented(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 472,
        "query": "131071 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Real numbers are numbers. Every real number is not imaginary. Complex numbers are imaginary. Integers are real numbers. Natural numbers are integers. Every natural number is positive. Each prime number is a natural number. Prime numbers are prime. Each Mersenne prime is a prime number. Each Mersenne prime is prime. 131071 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => positive(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 473,
        "query": "Fae is cold-blooded.",
        "query_fol": "cold_blooded(x)",
        "context": "Every animal is not unicellular. Each bilaterian is an animal. Every chordate is a bilaterian. Vertebrates are chordates. Snakes are cold-blooded. Mammals are vertebrates. Mammals are not cold-blooded. Each carnivore is a mammal. Carnivores are carnivorous. Felines are carnivores. Cats are felines. Every tabby is a cat. Fae is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, snake(x) => cold_blooded(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => ~cold_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 474,
        "query": "31 is not real.",
        "query_fol": "~real_number(x)",
        "context": "Each real number is a number. Each real number is real. Integers are real numbers. Natural numbers are integers. Each natural number is positive. Prime numbers are natural numbers. Each prime number is not composite. Every Mersenne prime is a prime number. Each imaginary number is not real. Each Mersenne prime is prime. 31 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 475,
        "query": "Sally is not segmented.",
        "query_fol": "~segmented(x)",
        "context": "Each animal is multicellular. Invertebrates are animals. Each nematode is not segmented. Protostomes are invertebrates. Every arthropod is a protostome. Arthropods are segmented. Every insect is an arthropod. Each insect is six-legged. Each lepidopteran is an insect. Every butterfly is a lepidopteran. Painted ladies are butterflies. Sally is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, nematode(x) => ~segmented(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => segmented(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 476,
        "query": "127 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Each real number is a number. Every real number is not imaginary. Integers are real numbers. Each natural number is an integer. Natural numbers are positive. Prime numbers are natural numbers. Every complex number is imaginary. Prime numbers are not composite. Each Mersenne prime is a prime number. Mersenne primes are prime. 127 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 477,
        "query": "Sam is segmented.",
        "query_fol": "segmented(x)",
        "context": "Animals are not unicellular. Invertebrates are animals. Every protostome is an invertebrate. Arthropods are protostomes. Arthropods are segmented. Nematodes are not segmented. Every insect is an arthropod. Each insect is six-legged. Lepidopterans are insects. Butterflies are lepidopterans. Every painted lady is a butterfly. Sam is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => segmented(x), FOR_ALL x, nematode(x) => ~segmented(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 478,
        "query": "Polly is bony.",
        "query_fol": "bony(x)",
        "context": "Every animal is multicellular. Invertebrates are animals. Every whale is bony. Protostomes are invertebrates. Every arthropod is a protostome. Every arthropod is not bony. Each insect is an arthropod. Insects are not eight-legged. Lepidopterans are insects. Butterflies are lepidopterans. Each painted lady is a butterfly. Polly is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 479,
        "query": "7 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Each real number is a number. Every real number is not imaginary. Each integer is a real number. Each natural number is an integer. Natural numbers are not negative. Prime numbers are natural numbers. Every prime number is not composite. Mersenne primes are prime numbers. Every Mersenne prime is not composite. Complex numbers are imaginary. 7 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => ~composite_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 480,
        "query": "Polly is furry.",
        "query_fol": "furry(x)",
        "context": "Every animal is not unicellular. Each bilaterian is an animal. Every chordate is a bilaterian. Vertebrates are chordates. Mammals are vertebrates. Each mammal is furry. Each snake is not furry. Each carnivore is a mammal. Carnivores are carnivorous. Each feline is a carnivore. Every cat is a feline. Each tabby is a cat. Polly is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => furry(x), FOR_ALL x, snake(x) => ~furry(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "True"
    },
    {
        "number": 481,
        "query": "Stella is cold-blooded.",
        "query_fol": "cold_blooded(x)",
        "context": "Every animal is multicellular. Every bilaterian is an animal. Chordates are bilaterians. Every snake is cold-blooded. Vertebrates are chordates. Mammals are vertebrates. Each mammal is not cold-blooded. Carnivores are mammals. Carnivores are not herbivorous. Felines are carnivores. Cats are felines. Tabbies are cats. Stella is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, snake(x) => cold_blooded(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => ~cold_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => ~herbivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 482,
        "query": "Sally is cold-blooded.",
        "query_fol": "cold_blooded(x)",
        "context": "Animals are multicellular. Every snake is cold-blooded. Bilaterians are animals. Each chordate is a bilaterian. Each vertebrate is a chordate. Mammals are vertebrates. Each mammal is not cold-blooded. Each carnivore is a mammal. Carnivores are carnivorous. Felines are carnivores. Each cat is a feline. Every tabby is a cat. Sally is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, snake(x) => cold_blooded(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => ~cold_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 483,
        "query": "Polly is not cold-blooded.",
        "query_fol": "~cold_blooded(x)",
        "context": "Animals are multicellular. Bilaterians are animals. Chordates are bilaterians. Each snake is cold-blooded. Vertebrates are chordates. Mammals are vertebrates. Mammals are not cold-blooded. Every carnivore is a mammal. Each carnivore is carnivorous. Felines are carnivores. Cats are felines. Every tabby is a cat. Polly is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, snake(x) => cold_blooded(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => ~cold_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "True"
    },
    {
        "number": 484,
        "query": "Alex is not segmented.",
        "query_fol": "~segmented(x)",
        "context": "Animals are not unicellular. Invertebrates are animals. Every protostome is an invertebrate. Arthropods are protostomes. Arthropods are segmented. Each insect is an arthropod. Each insect is not eight-legged. Each nematode is not segmented. Lepidopterans are insects. Each butterfly is a lepidopteran. Painted ladies are butterflies. Alex is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => segmented(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, nematode(x) => ~segmented(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 485,
        "query": "7 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Real numbers are numbers. Real numbers are not imaginary. Every complex number is imaginary. Every integer is a real number. Natural numbers are integers. Each natural number is positive. Prime numbers are natural numbers. Each prime number is not composite. Every Mersenne prime is a prime number. Every Mersenne prime is prime. 7 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 486,
        "query": "Max is bony.",
        "query_fol": "bony(x)",
        "context": "Animals are not unicellular. Every invertebrate is an animal. Each protostome is an invertebrate. Whales are bony. Arthropods are protostomes. Every arthropod is not bony. Each insect is an arthropod. Each insect is six-legged. Each lepidopteran is an insect. Each butterfly is a lepidopteran. Every painted lady is a butterfly. Max is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 487,
        "query": "3 is real.",
        "query_fol": "real_number(x)",
        "context": "Each real number is a number. Real numbers are real. Integers are real numbers. Every imaginary number is not real. Every natural number is an integer. Natural numbers are positive. Prime numbers are natural numbers. Every prime number is not composite. Mersenne primes are prime numbers. Each Mersenne prime is not composite. 3 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => ~composite(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 488,
        "query": "Max is not furry.",
        "query_fol": "~furry(x)",
        "context": "Animals are not unicellular. Bilaterians are animals. Chordates are bilaterians. Vertebrates are chordates. Mammals are vertebrates. Mammals are furry. Each carnivore is a mammal. Carnivores are not herbivorous. Each feline is a carnivore. Cats are felines. Tabbies are cats. Snakes are not furry. Max is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => furry(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => ~herbivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), FOR_ALL x, snake(x) => ~furry(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 489,
        "query": "Max is cold-blooded.",
        "query_fol": "cold_blooded(x)",
        "context": "Each animal is multicellular. Bilaterians are animals. Each chordate is a bilaterian. Vertebrates are chordates. Mammals are vertebrates. Every mammal is not cold-blooded. Each snake is cold-blooded. Carnivores are mammals. Carnivores are not herbivorous. Felines are carnivores. Every cat is a feline. Each tabby is a cat. Max is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => ~cold_blooded(x), FOR_ALL x, snake(x) => cold_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => ~herbivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 490,
        "query": "7 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Real numbers are numbers. Real numbers are not imaginary. Each integer is a real number. Each natural number is an integer. Every complex number is imaginary. Natural numbers are positive. Every prime number is a natural number. Prime numbers are not composite. Each Mersenne prime is a prime number. Each Mersenne prime is prime. 7 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 491,
        "query": "131071 is real.",
        "query_fol": "real_number(x)",
        "context": "Real numbers are numbers. Every real number is real. Integers are real numbers. Every natural number is an integer. Each natural number is not negative. Each imaginary number is not real. Every prime number is a natural number. Prime numbers are not composite. Mersenne primes are prime numbers. Mersenne primes are not composite. 131071 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime_number(x) => ~composite_number(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 492,
        "query": "Sam is not small.",
        "query_fol": "FOR_ALL x, sam(x) => ~small(x)",
        "context": "Animals are multicellular. Invertebrates are animals. Every whale is not small. Protostomes are invertebrates. Each arthropod is a protostome. Arthropods are small. Every insect is an arthropod. Each insect is six-legged. Lepidopterans are insects. Every butterfly is a lepidopteran. Painted ladies are butterflies. Sam is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, whale(x) => ~small(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => small(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 493,
        "query": "Stella is not warm-blooded.",
        "query_fol": "~warm_blooded(x)",
        "context": "Every animal is multicellular. Snakes are not warm-blooded. Every bilaterian is an animal. Each chordate is a bilaterian. Each vertebrate is a chordate. Each mammal is a vertebrate. Every mammal is warm-blooded. Carnivores are mammals. Carnivores are carnivorous. Every feline is a carnivore. Cats are felines. Tabbies are cats. Stella is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, snake(x) => ~warm_blooded(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => warm_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 494,
        "query": "Max is not cold-blooded.",
        "query_fol": "~cold_blooded(x)",
        "context": "Animals are not unicellular. Snakes are cold-blooded. Every bilaterian is an animal. Every chordate is a bilaterian. Vertebrates are chordates. Every mammal is a vertebrate. Each mammal is not cold-blooded. Every carnivore is a mammal. Carnivores are carnivorous. Every feline is a carnivore. Each cat is a feline. Each tabby is a cat. Max is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, snake(x) => cold_blooded(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => ~cold_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "True"
    },
    {
        "number": 495,
        "query": "Alex is not cold-blooded.",
        "query_fol": "~cold_blooded(x)",
        "context": "Each animal is not unicellular. Bilaterians are animals. Chordates are bilaterians. Vertebrates are chordates. Snakes are cold-blooded. Each mammal is a vertebrate. Mammals are not cold-blooded. Carnivores are mammals. Every carnivore is carnivorous. Each feline is a carnivore. Each cat is a feline. Every tabby is a cat. Alex is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, snake(x) => cold_blooded(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => ~cold_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "True"
    },
    {
        "number": 496,
        "query": "Max is bony.",
        "query_fol": "bony(x)",
        "context": "Animals are multicellular. Invertebrates are animals. Protostomes are invertebrates. Each whale is bony. Arthropods are protostomes. Arthropods are not bony. Insects are arthropods. Each insect is six-legged. Lepidopterans are insects. Butterflies are lepidopterans. Every painted lady is a butterfly. Max is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 497,
        "query": "Stella is furry.",
        "query_fol": "furry(x)",
        "context": "Animals are not unicellular. Each bilaterian is an animal. Chordates are bilaterians. Vertebrates are chordates. Mammals are vertebrates. Mammals are furry. Each carnivore is a mammal. Each snake is not furry. Every carnivore is carnivorous. Every feline is a carnivore. Every cat is a feline. Tabbies are cats. Stella is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => furry(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, snake(x) => ~furry(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "True"
    },
    {
        "number": 498,
        "query": "Sam is bony.",
        "query_fol": "bony(x)",
        "context": "Animals are not unicellular. Each invertebrate is an animal. Each protostome is an invertebrate. Every arthropod is a protostome. Every whale is bony. Arthropods are not bony. Every insect is an arthropod. Each insect is not eight-legged. Each lepidopteran is an insect. Butterflies are lepidopterans. Each painted lady is a butterfly. Sam is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 499,
        "query": "Sally is bony.",
        "query_fol": "bony(x)",
        "context": "Animals are multicellular. Every whale is bony. Every invertebrate is an animal. Each protostome is an invertebrate. Arthropods are protostomes. Every arthropod is not bony. Insects are arthropods. Insects are not eight-legged. Every lepidopteran is an insect. Butterflies are lepidopterans. Every painted lady is a butterfly. Sally is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 500,
        "query": "131071 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Real numbers are numbers. Real numbers are not imaginary. Each integer is a real number. Natural numbers are integers. Natural numbers are positive. Each prime number is a natural number. Prime numbers are not composite. Mersenne primes are prime numbers. Mersenne primes are not composite. Complex numbers are imaginary. 131071 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime_number(x) => ~composite_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 501,
        "query": "Sam is bony.",
        "query_fol": "bony(x)",
        "context": "Each whale is bony. Animals are not unicellular. Every invertebrate is an animal. Every protostome is an invertebrate. Each arthropod is a protostome. Arthropods are not bony. Insects are arthropods. Each insect is six-legged. Each lepidopteran is an insect. Each butterfly is a lepidopteran. Painted ladies are butterflies. Sam is a painted lady.",
        "rules_fol": "[FOR_ALL x, whale(x) => bony(x), FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 502,
        "query": "Fae is cold-blooded.",
        "query_fol": "cold_blooded(x)",
        "context": "Each animal is multicellular. Each bilaterian is an animal. Snakes are cold-blooded. Chordates are bilaterians. Vertebrates are chordates. Every mammal is a vertebrate. Every mammal is not cold-blooded. Carnivores are mammals. Carnivores are carnivorous. Each feline is a carnivore. Every cat is a feline. Tabbies are cats. Fae is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, snake(x) => cold_blooded(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => ~cold_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 503,
        "query": "Alex is not cold-blooded.",
        "query_fol": "~cold_blooded(x)",
        "context": "Every animal is not unicellular. Bilaterians are animals. Each chordate is a bilaterian. Snakes are cold-blooded. Vertebrates are chordates. Each mammal is a vertebrate. Every mammal is not cold-blooded. Carnivores are mammals. Carnivores are carnivorous. Felines are carnivores. Cats are felines. Each tabby is a cat. Alex is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, snake(x) => cold_blooded(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => ~cold_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "True"
    },
    {
        "number": 504,
        "query": "Rex is not small.",
        "query_fol": "~small(x)",
        "context": "Whales are not small. Each animal is multicellular. Every invertebrate is an animal. Protostomes are invertebrates. Arthropods are protostomes. Every arthropod is small. Insects are arthropods. Insects are not eight-legged. Lepidopterans are insects. Butterflies are lepidopterans. Painted ladies are butterflies. Rex is a painted lady.",
        "rules_fol": "[FOR_ALL x, whale(x) => ~small(x), FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => small(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 505,
        "query": "131071 is real.",
        "query_fol": "real_number(x)",
        "context": "Imaginary numbers are not real. Every real number is a number. Every real number is real. Every integer is a real number. Natural numbers are integers. Every natural number is positive. Every prime number is a natural number. Prime numbers are prime. Every Mersenne prime is a prime number. Each Mersenne prime is prime. 131071 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 506,
        "query": "8191 is real.",
        "query_fol": "real_number(x)",
        "context": "Real numbers are numbers. Every real number is real. Each integer is a real number. Imaginary numbers are not real. Natural numbers are integers. Each natural number is positive. Each prime number is a natural number. Every prime number is prime. Every Mersenne prime is a prime number. Each Mersenne prime is prime. 8191 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 507,
        "query": "Sally is small.",
        "query_fol": "small(x)",
        "context": "Animals are multicellular. Each invertebrate is an animal. Each protostome is an invertebrate. Arthropods are protostomes. Each arthropod is small. Insects are arthropods. Whales are not small. Insects are not eight-legged. Each lepidopteran is an insect. Every butterfly is a lepidopteran. Each painted lady is a butterfly. Sally is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => small(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, whale(x) => ~small(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 508,
        "query": "Rex is cold-blooded.",
        "query_fol": "cold_blooded(x)",
        "context": "Every animal is not unicellular. Bilaterians are animals. Every chordate is a bilaterian. Each snake is cold-blooded. Every vertebrate is a chordate. Each mammal is a vertebrate. Every mammal is not cold-blooded. Every carnivore is a mammal. Carnivores are carnivorous. Felines are carnivores. Cats are felines. Tabbies are cats. Rex is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, snake(x) => cold_blooded(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => ~cold_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 509,
        "query": "Alex is warm-blooded.",
        "query_fol": "warm_blooded(x)",
        "context": "Animals are not unicellular. Bilaterians are animals. Each chordate is a bilaterian. Vertebrates are chordates. Each mammal is a vertebrate. Mammals are warm-blooded. Carnivores are mammals. Carnivores are not herbivorous. Each feline is a carnivore. Cats are felines. Tabbies are cats. Snakes are not warm-blooded. Alex is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => warm_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => ~herbivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), FOR_ALL x, snake(x) => ~warm_blooded(x), tabby(x)]",
        "answer": "True"
    },
    {
        "number": 510,
        "query": "8191 is not real.",
        "query_fol": "~real_number(x)",
        "context": "Real numbers are numbers. Real numbers are real. Integers are real numbers. Natural numbers are integers. Natural numbers are positive. Every imaginary number is not real. Prime numbers are natural numbers. Each prime number is not composite. Every Mersenne prime is a prime number. Mersenne primes are prime. 8191 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 511,
        "query": "127 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Each real number is a number. Every real number is not imaginary. Integers are real numbers. Each natural number is an integer. Each complex number is imaginary. Every natural number is not negative. Every prime number is a natural number. Prime numbers are prime. Mersenne primes are prime numbers. Each Mersenne prime is prime. 127 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 512,
        "query": "8191 is real.",
        "query_fol": "real_number(x)",
        "context": "Every real number is a number. Real numbers are real. Every integer is a real number. Natural numbers are integers. Natural numbers are positive. Every prime number is a natural number. Every prime number is prime. Mersenne primes are prime numbers. Mersenne primes are prime. Every imaginary number is not real. 8191 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => positive(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 513,
        "query": "Sally is not bony.",
        "query_fol": "~bony(x)",
        "context": "Animals are multicellular. Each invertebrate is an animal. Each protostome is an invertebrate. Arthropods are protostomes. Arthropods are not bony. Insects are arthropods. Each whale is bony. Insects are six-legged. Lepidopterans are insects. Every butterfly is a lepidopteran. Each painted lady is a butterfly. Sally is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 514,
        "query": "Sally is furry.",
        "query_fol": "furry(x)",
        "context": "Each animal is not unicellular. Bilaterians are animals. Each chordate is a bilaterian. Every vertebrate is a chordate. Mammals are vertebrates. Mammals are furry. Each carnivore is a mammal. Every carnivore is carnivorous. Each feline is a carnivore. Each snake is not furry. Every cat is a feline. Every tabby is a cat. Sally is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => furry(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, snake(x) => ~furry(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "True"
    },
    {
        "number": 515,
        "query": "7 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Each real number is a number. Every real number is not imaginary. Integers are real numbers. Each natural number is an integer. Each natural number is positive. Each prime number is a natural number. Each prime number is not composite. Every Mersenne prime is a prime number. Each complex number is imaginary. Mersenne primes are prime. 7 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integers(x) => real_numbers(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 516,
        "query": "Wren is bony.",
        "query_fol": "bony(x)",
        "context": "Every animal is not unicellular. Invertebrates are animals. Protostomes are invertebrates. Every whale is bony. Arthropods are protostomes. Every arthropod is not bony. Every insect is an arthropod. Insects are not eight-legged. Every lepidopteran is an insect. Butterflies are lepidopterans. Every painted lady is a butterfly. Wren is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 517,
        "query": "Wren is not bony.",
        "query_fol": "~bony(x)",
        "context": "Animals are multicellular. Each invertebrate is an animal. Every protostome is an invertebrate. Each arthropod is a protostome. Whales are bony. Arthropods are not bony. Every insect is an arthropod. Insects are six-legged. Lepidopterans are insects. Each butterfly is a lepidopteran. Painted ladies are butterflies. Wren is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 518,
        "query": "Wren is not segmented.",
        "query_fol": "~segmented(x)",
        "context": "Each animal is multicellular. Invertebrates are animals. Every protostome is an invertebrate. Each arthropod is a protostome. Arthropods are segmented. Each insect is an arthropod. Each nematode is not segmented. Each insect is six-legged. Each lepidopteran is an insect. Each butterfly is a lepidopteran. Painted ladies are butterflies. Wren is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => segmented(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, nematode(x) => ~segmented(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 519,
        "query": "3 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Real numbers are numbers. Every real number is not imaginary. Complex numbers are imaginary. Each integer is a real number. Natural numbers are integers. Each natural number is not negative. Prime numbers are natural numbers. Each prime number is not composite. Mersenne primes are prime numbers. Every Mersenne prime is prime. 3 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 520,
        "query": "Sally is segmented.",
        "query_fol": "segmented(x)",
        "context": "Animals are not unicellular. Invertebrates are animals. Protostomes are invertebrates. Arthropods are protostomes. Every arthropod is segmented. Insects are arthropods. Insects are six-legged. Lepidopterans are insects. Nematodes are not segmented. Butterflies are lepidopterans. Painted ladies are butterflies. Sally is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => segmented(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, nematode(x) => ~segmented(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 521,
        "query": "3 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Real numbers are numbers. Each real number is not imaginary. Integers are real numbers. Natural numbers are integers. Every complex number is imaginary. Natural numbers are not negative. Prime numbers are natural numbers. Prime numbers are not composite. Each Mersenne prime is a prime number. Every Mersenne prime is not composite. 3 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime_number(x) => ~composite_number(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 522,
        "query": "7 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Real numbers are numbers. Each real number is not imaginary. Integers are real numbers. Each complex number is imaginary. Every natural number is an integer. Each natural number is positive. Each prime number is a natural number. Every prime number is prime. Mersenne primes are prime numbers. Every Mersenne prime is not composite. 7 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => ~composite(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 523,
        "query": "8191 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Complex numbers are imaginary. Each real number is a number. Each real number is not imaginary. Every integer is a real number. Natural numbers are integers. Each natural number is positive. Prime numbers are natural numbers. Every prime number is prime. Mersenne primes are prime numbers. Each Mersenne prime is not composite. 8191 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => ~composite(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 524,
        "query": "131071 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Every complex number is imaginary. Every real number is a number. Real numbers are not imaginary. Integers are real numbers. Each natural number is an integer. Every natural number is positive. Prime numbers are natural numbers. Prime numbers are prime. Mersenne primes are prime numbers. Each Mersenne prime is prime. 131071 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 525,
        "query": "131071 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Every real number is a number. Each complex number is imaginary. Each real number is not imaginary. Integers are real numbers. Each natural number is an integer. Every natural number is positive. Each prime number is a natural number. Each prime number is prime. Every Mersenne prime is a prime number. Every Mersenne prime is not composite. 131071 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => ~composite(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 526,
        "query": "3 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Real numbers are numbers. Each real number is not imaginary. Integers are real numbers. Every natural number is an integer. Natural numbers are positive. Prime numbers are natural numbers. Complex numbers are imaginary. Prime numbers are not composite. Every Mersenne prime is a prime number. Each Mersenne prime is not composite. 3 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => ~composite_number(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 527,
        "query": "31 is real.",
        "query_fol": "real_number(x)",
        "context": "Real numbers are numbers. Every real number is real. Each integer is a real number. Natural numbers are integers. Natural numbers are positive. Each prime number is a natural number. Each prime number is not composite. Every Mersenne prime is a prime number. Imaginary numbers are not real. Mersenne primes are prime. 31 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => positive(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 528,
        "query": "31 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Real numbers are numbers. Real numbers are not imaginary. Every integer is a real number. Natural numbers are integers. Each natural number is positive. Prime numbers are natural numbers. Prime numbers are prime. Mersenne primes are prime numbers. Each Mersenne prime is not composite. Complex numbers are imaginary. 31 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => ~composite(x), FOR_ALL x, complex_number(x) => imaginary_number(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 529,
        "query": "131071 is not real.",
        "query_fol": "~real_number(x)",
        "context": "Each real number is a number. Every real number is real. Every integer is a real number. Each natural number is an integer. Imaginary numbers are not real. Each natural number is not negative. Prime numbers are natural numbers. Prime numbers are not composite. Every Mersenne prime is a prime number. Mersenne primes are not composite. 131071 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, natural_number(x) => ~negative(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => ~composite(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 530,
        "query": "3 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Real numbers are numbers. Each real number is not imaginary. Every integer is a real number. Natural numbers are integers. Every natural number is positive. Prime numbers are natural numbers. Each prime number is prime. Each Mersenne prime is a prime number. Each Mersenne prime is not composite. Each complex number is imaginary. 3 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => ~composite(x), FOR_ALL x, complex_number(x) => imaginary_number(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 531,
        "query": "131071 is real.",
        "query_fol": "real_number(x)",
        "context": "Real numbers are numbers. Real numbers are real. Imaginary numbers are not real. Each integer is a real number. Natural numbers are integers. Natural numbers are not negative. Each prime number is a natural number. Prime numbers are not composite. Mersenne primes are prime numbers. Every Mersenne prime is not composite. 131071 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime_number(x) => ~composite(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 532,
        "query": "Rex is small.",
        "query_fol": "small(x)",
        "context": "Animals are multicellular. Every invertebrate is an animal. Each protostome is an invertebrate. Each arthropod is a protostome. Arthropods are small. Insects are arthropods. Insects are not eight-legged. Each lepidopteran is an insect. Whales are not small. Butterflies are lepidopterans. Painted ladies are butterflies. Rex is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => small(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, whale(x) => ~small(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 533,
        "query": "127 is not real.",
        "query_fol": "~real(x)",
        "context": "Each imaginary number is not real. Each real number is a number. Real numbers are real. Every integer is a real number. Every natural number is an integer. Natural numbers are positive. Each prime number is a natural number. Prime numbers are prime. Mersenne primes are prime numbers. Mersenne primes are prime. 127 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 534,
        "query": "Wren is bony.",
        "query_fol": "bony(x)",
        "context": "Each animal is multicellular. Invertebrates are animals. Each protostome is an invertebrate. Every arthropod is a protostome. Each arthropod is not bony. Each whale is bony. Insects are arthropods. Every insect is six-legged. Every lepidopteran is an insect. Each butterfly is a lepidopteran. Every painted lady is a butterfly. Wren is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 535,
        "query": "Fae is not furry.",
        "query_fol": "~furry(x)",
        "context": "Animals are multicellular. Each snake is not furry. Every bilaterian is an animal. Each chordate is a bilaterian. Vertebrates are chordates. Mammals are vertebrates. Mammals are furry. Every carnivore is a mammal. Each carnivore is carnivorous. Each feline is a carnivore. Cats are felines. Tabbies are cats. Fae is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, snake(x) => ~furry(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => furry(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 536,
        "query": "8191 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Real numbers are numbers. Real numbers are not imaginary. Complex numbers are imaginary. Every integer is a real number. Each natural number is an integer. Natural numbers are positive. Prime numbers are natural numbers. Prime numbers are not composite. Mersenne primes are prime numbers. Mersenne primes are prime. 8191 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 537,
        "query": "7 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Each real number is a number. Every real number is not imaginary. Integers are real numbers. Every natural number is an integer. Natural numbers are positive. Each complex number is imaginary. Prime numbers are natural numbers. Prime numbers are prime. Each Mersenne prime is a prime number. Every Mersenne prime is prime. 7 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 538,
        "query": "7 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Every real number is a number. Real numbers are not imaginary. Each integer is a real number. Natural numbers are integers. Each natural number is not negative. Prime numbers are natural numbers. Prime numbers are prime. Complex numbers are imaginary. Mersenne primes are prime numbers. Each Mersenne prime is not composite. 7 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => ~negative(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime_number(x) => ~composite_number(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 539,
        "query": "Max is not furry.",
        "query_fol": "~furry(x)",
        "context": "Animals are not unicellular. Bilaterians are animals. Chordates are bilaterians. Vertebrates are chordates. Each snake is not furry. Mammals are vertebrates. Each mammal is furry. Carnivores are mammals. Each carnivore is carnivorous. Each feline is a carnivore. Cats are felines. Every tabby is a cat. Max is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, snake(x) => ~furry(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => furry(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 540,
        "query": "8191 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Each complex number is imaginary. Each real number is a number. Real numbers are not imaginary. Integers are real numbers. Each natural number is an integer. Every natural number is positive. Prime numbers are natural numbers. Every prime number is not composite. Mersenne primes are prime numbers. Each Mersenne prime is prime. 8191 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 541,
        "query": "8191 is not real.",
        "query_fol": "~real_number(x)",
        "context": "Real numbers are numbers. Imaginary numbers are not real. Each real number is real. Integers are real numbers. Natural numbers are integers. Natural numbers are not negative. Prime numbers are natural numbers. Every prime number is prime. Mersenne primes are prime numbers. Mersenne primes are prime. 8191 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 542,
        "query": "Rex is small.",
        "query_fol": "small(x)",
        "context": "Each animal is multicellular. Every invertebrate is an animal. Every whale is not small. Protostomes are invertebrates. Each arthropod is a protostome. Every arthropod is small. Each insect is an arthropod. Insects are six-legged. Every lepidopteran is an insect. Butterflies are lepidopterans. Each painted lady is a butterfly. Rex is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, whale(x) => ~small(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => small(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 543,
        "query": "127 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Every real number is a number. Real numbers are not imaginary. Complex numbers are imaginary. Each integer is a real number. Every natural number is an integer. Natural numbers are positive. Prime numbers are natural numbers. Prime numbers are not composite. Each Mersenne prime is a prime number. Each Mersenne prime is not composite. 127 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => ~composite(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 544,
        "query": "Fae is warm-blooded.",
        "query_fol": "warm_blooded(x)",
        "context": "Every animal is multicellular. Bilaterians are animals. Every chordate is a bilaterian. Every vertebrate is a chordate. Mammals are vertebrates. Mammals are warm-blooded. Each carnivore is a mammal. Snakes are not warm-blooded. Each carnivore is not herbivorous. Felines are carnivores. Cats are felines. Every tabby is a cat. Fae is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => warm_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, snake(x) => ~warm_blooded(x), FOR_ALL x, carnivore(x) => ~herbivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "True"
    },
    {
        "number": 545,
        "query": "7 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Each real number is a number. Real numbers are not imaginary. Each complex number is imaginary. Every integer is a real number. Natural numbers are integers. Every natural number is positive. Each prime number is a natural number. Prime numbers are prime. Mersenne primes are prime numbers. Mersenne primes are not composite. 7 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime_number(x) => ~composite_number(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 546,
        "query": "Sam is cold-blooded.",
        "query_fol": "cold_blooded(x)",
        "context": "Animals are not unicellular. Bilaterians are animals. Chordates are bilaterians. Every vertebrate is a chordate. Mammals are vertebrates. Every mammal is not cold-blooded. Carnivores are mammals. Each carnivore is carnivorous. Felines are carnivores. Snakes are cold-blooded. Cats are felines. Each tabby is a cat. Sam is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => ~cold_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, snake(x) => cold_blooded(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 547,
        "query": "Stella is bony.",
        "query_fol": "bony(x)",
        "context": "Animals are not unicellular. Every invertebrate is an animal. Every whale is bony. Each protostome is an invertebrate. Arthropods are protostomes. Arthropods are not bony. Insects are arthropods. Each insect is not eight-legged. Lepidopterans are insects. Butterflies are lepidopterans. Painted ladies are butterflies. Stella is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 548,
        "query": "Sally is bony.",
        "query_fol": "bony(x)",
        "context": "Every animal is not unicellular. Whales are bony. Invertebrates are animals. Protostomes are invertebrates. Every arthropod is a protostome. Each arthropod is not bony. Each insect is an arthropod. Insects are not eight-legged. Lepidopterans are insects. Every butterfly is a lepidopteran. Every painted lady is a butterfly. Sally is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 549,
        "query": "8191 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Real numbers are numbers. Every real number is not imaginary. Integers are real numbers. Every natural number is an integer. Each natural number is not negative. Complex numbers are imaginary. Prime numbers are natural numbers. Every prime number is prime. Mersenne primes are prime numbers. Each Mersenne prime is prime. 8191 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 550,
        "query": "31 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Each real number is a number. Real numbers are not imaginary. Every integer is a real number. Every natural number is an integer. Natural numbers are not negative. Each complex number is imaginary. Prime numbers are natural numbers. Prime numbers are prime. Every Mersenne prime is a prime number. Mersenne primes are prime. 31 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 551,
        "query": "Rex is not furry.",
        "query_fol": "~furry(x)",
        "context": "Animals are not unicellular. Each bilaterian is an animal. Each chordate is a bilaterian. Every vertebrate is a chordate. Mammals are vertebrates. Each snake is not furry. Every mammal is furry. Carnivores are mammals. Each carnivore is not herbivorous. Felines are carnivores. Cats are felines. Each tabby is a cat. Rex is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, snake(x) => ~furry(x), FOR_ALL x, mammal(x) => furry(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => ~herbivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 552,
        "query": "Wren is not bony.",
        "query_fol": "~bony(x)",
        "context": "Every animal is multicellular. Each invertebrate is an animal. Every protostome is an invertebrate. Each arthropod is a protostome. Arthropods are not bony. Whales are bony. Each insect is an arthropod. Every insect is six-legged. Every lepidopteran is an insect. Every butterfly is a lepidopteran. Painted ladies are butterflies. Wren is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 553,
        "query": "Sally is warm-blooded.",
        "query_fol": "warm_blooded(x)",
        "context": "Animals are not unicellular. Bilaterians are animals. Every chordate is a bilaterian. Every vertebrate is a chordate. Mammals are vertebrates. Every mammal is warm-blooded. Every carnivore is a mammal. Carnivores are carnivorous. Felines are carnivores. Snakes are not warm-blooded. Cats are felines. Tabbies are cats. Sally is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => warm_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, snake(x) => ~warm_blooded(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "True"
    },
    {
        "number": 554,
        "query": "Rex is furry.",
        "query_fol": "furry(x)",
        "context": "Animals are multicellular. Each bilaterian is an animal. Each chordate is a bilaterian. Every vertebrate is a chordate. Every mammal is a vertebrate. Each mammal is furry. Every carnivore is a mammal. Each carnivore is carnivorous. Snakes are not furry. Each feline is a carnivore. Cats are felines. Each tabby is a cat. Rex is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => furry(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, snake(x) => ~furry(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "True"
    },
    {
        "number": 555,
        "query": "7 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Complex numbers are imaginary. Real numbers are numbers. Every real number is not imaginary. Integers are real numbers. Natural numbers are integers. Natural numbers are not negative. Every prime number is a natural number. Prime numbers are prime. Mersenne primes are prime numbers. Mersenne primes are not composite. 7 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime_number(x) => ~composite_number(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 556,
        "query": "Alex is furry.",
        "query_fol": "furry(x)",
        "context": "Animals are not unicellular. Bilaterians are animals. Chordates are bilaterians. Vertebrates are chordates. Snakes are not furry. Mammals are vertebrates. Every mammal is furry. Carnivores are mammals. Carnivores are not herbivorous. Felines are carnivores. Cats are felines. Each tabby is a cat. Alex is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, snake(x) => ~furry(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => furry(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => ~herbivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "True"
    },
    {
        "number": 557,
        "query": "Sam is bony.",
        "query_fol": "bony(x)",
        "context": "Animals are multicellular. Each invertebrate is an animal. Each protostome is an invertebrate. Arthropods are protostomes. Arthropods are not bony. Each insect is an arthropod. Insects are six-legged. Each lepidopteran is an insect. Butterflies are lepidopterans. Whales are bony. Painted ladies are butterflies. Sam is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 558,
        "query": "Alex is bony.",
        "query_fol": "bony(x)",
        "context": "Animals are multicellular. Every invertebrate is an animal. Every protostome is an invertebrate. Arthropods are protostomes. Whales are bony. Arthropods are not bony. Insects are arthropods. Each insect is six-legged. Lepidopterans are insects. Every butterfly is a lepidopteran. Each painted lady is a butterfly. Alex is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 559,
        "query": "Alex is bony.",
        "query_fol": "bony(x)",
        "context": "Each animal is not unicellular. Invertebrates are animals. Protostomes are invertebrates. Every arthropod is a protostome. Each arthropod is not bony. Every insect is an arthropod. Insects are not eight-legged. Each lepidopteran is an insect. Whales are bony. Each butterfly is a lepidopteran. Painted ladies are butterflies. Alex is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 560,
        "query": "8191 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Each real number is a number. Every real number is not imaginary. Integers are real numbers. Every natural number is an integer. Each natural number is not negative. Prime numbers are natural numbers. Every prime number is prime. Every Mersenne prime is a prime number. Each complex number is imaginary. Mersenne primes are prime. 8191 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 561,
        "query": "127 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Real numbers are numbers. Every real number is not imaginary. Integers are real numbers. Complex numbers are imaginary. Each natural number is an integer. Natural numbers are positive. Each prime number is a natural number. Each prime number is prime. Mersenne primes are prime numbers. Each Mersenne prime is prime. 127 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 562,
        "query": "127 is real.",
        "query_fol": "real_number(x)",
        "context": "Real numbers are numbers. Each real number is real. Each integer is a real number. Each natural number is an integer. Every imaginary number is not real. Natural numbers are not negative. Each prime number is a natural number. Prime numbers are prime. Mersenne primes are prime numbers. Mersenne primes are prime. 127 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime(x) => prime(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 563,
        "query": "Sam is bony.",
        "query_fol": "bony(x)",
        "context": "Animals are not unicellular. Invertebrates are animals. Each protostome is an invertebrate. Arthropods are protostomes. Arthropods are not bony. Insects are arthropods. Insects are not eight-legged. Lepidopterans are insects. Whales are bony. Butterflies are lepidopterans. Every painted lady is a butterfly. Sam is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 564,
        "query": "127 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Real numbers are numbers. Real numbers are not imaginary. Each integer is a real number. Every natural number is an integer. Complex numbers are imaginary. Every natural number is not negative. Prime numbers are natural numbers. Each prime number is prime. Mersenne primes are prime numbers. Mersenne primes are prime. 127 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 565,
        "query": "Alex is furry.",
        "query_fol": "furry(x)",
        "context": "Every snake is not furry. Every animal is not unicellular. Bilaterians are animals. Chordates are bilaterians. Every vertebrate is a chordate. Every mammal is a vertebrate. Mammals are furry. Carnivores are mammals. Each carnivore is not herbivorous. Every feline is a carnivore. Every cat is a feline. Each tabby is a cat. Alex is a tabby.",
        "rules_fol": "[FOR_ALL x, snake(x) => ~furry(x), FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => furry(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => ~herbivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "True"
    },
    {
        "number": 566,
        "query": "Rex is not warm-blooded.",
        "query_fol": "~warm_blooded(x)",
        "context": "Animals are multicellular. Every bilaterian is an animal. Chordates are bilaterians. Each vertebrate is a chordate. Each mammal is a vertebrate. Mammals are warm-blooded. Each carnivore is a mammal. Each carnivore is carnivorous. Felines are carnivores. Each snake is not warm-blooded. Each cat is a feline. Each tabby is a cat. Rex is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => warm_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, snake(x) => ~warm_blooded(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 567,
        "query": "Rex is not furry.",
        "query_fol": "~furry(x)",
        "context": "Every animal is multicellular. Each bilaterian is an animal. Chordates are bilaterians. Each vertebrate is a chordate. Mammals are vertebrates. Every mammal is furry. Every carnivore is a mammal. Every snake is not furry. Carnivores are carnivorous. Felines are carnivores. Every cat is a feline. Every tabby is a cat. Rex is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => furry(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, snake(x) => ~furry(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 568,
        "query": "3 is real.",
        "query_fol": "real_number(x)",
        "context": "Real numbers are numbers. Every real number is real. Each integer is a real number. Every natural number is an integer. Every natural number is not negative. Prime numbers are natural numbers. Imaginary numbers are not real. Prime numbers are prime. Mersenne primes are prime numbers. Mersenne primes are not composite. 3 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime_number(x) => ~composite_number(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 569,
        "query": "Fae is not warm-blooded.",
        "query_fol": "~warm_blooded(x)",
        "context": "Each animal is multicellular. Bilaterians are animals. Chordates are bilaterians. Snakes are not warm-blooded. Vertebrates are chordates. Every mammal is a vertebrate. Mammals are warm-blooded. Carnivores are mammals. Carnivores are not herbivorous. Felines are carnivores. Cats are felines. Each tabby is a cat. Fae is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, snake(x) => ~warm_blooded(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => warm_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => ~herbivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 570,
        "query": "Fae is bony.",
        "query_fol": "bony(x)",
        "context": "Animals are not unicellular. Each invertebrate is an animal. Protostomes are invertebrates. Arthropods are protostomes. Arthropods are not bony. Each insect is an arthropod. Every insect is six-legged. Lepidopterans are insects. Every butterfly is a lepidopteran. Whales are bony. Each painted lady is a butterfly. Fae is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 571,
        "query": "Stella is cold-blooded.",
        "query_fol": "cold_blooded(x)",
        "context": "Each animal is not unicellular. Every bilaterian is an animal. Each chordate is a bilaterian. Each vertebrate is a chordate. Mammals are vertebrates. Every mammal is not cold-blooded. Every carnivore is a mammal. Each carnivore is carnivorous. Felines are carnivores. Every snake is cold-blooded. Each cat is a feline. Tabbies are cats. Stella is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => ~cold_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, snake(x) => cold_blooded(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 572,
        "query": "3 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Real numbers are numbers. Each real number is not imaginary. Integers are real numbers. Natural numbers are integers. Every natural number is not negative. Each prime number is a natural number. Every prime number is not composite. Mersenne primes are prime numbers. Complex numbers are imaginary. Each Mersenne prime is prime. 3 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 573,
        "query": "131071 is real.",
        "query_fol": "real_number(x)",
        "context": "Every real number is a number. Real numbers are real. Each imaginary number is not real. Every integer is a real number. Natural numbers are integers. Natural numbers are positive. Each prime number is a natural number. Each prime number is not composite. Each Mersenne prime is a prime number. Every Mersenne prime is not composite. 131071 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime_number(x) => ~composite_number(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 574,
        "query": "Alex is not bony.",
        "query_fol": "~bony(x)",
        "context": "Every animal is not unicellular. Invertebrates are animals. Protostomes are invertebrates. Arthropods are protostomes. Every arthropod is not bony. Insects are arthropods. Insects are six-legged. Lepidopterans are insects. Every butterfly is a lepidopteran. Whales are bony. Painted ladies are butterflies. Alex is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 575,
        "query": "131071 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Each complex number is imaginary. Real numbers are numbers. Real numbers are not imaginary. Integers are real numbers. Each natural number is an integer. Natural numbers are positive. Prime numbers are natural numbers. Every prime number is not composite. Mersenne primes are prime numbers. Mersenne primes are prime. 131071 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 576,
        "query": "Rex is furry.",
        "query_fol": "furry(x)",
        "context": "Animals are multicellular. Bilaterians are animals. Every chordate is a bilaterian. Every vertebrate is a chordate. Each mammal is a vertebrate. Every mammal is furry. Snakes are not furry. Carnivores are mammals. Carnivores are not herbivorous. Each feline is a carnivore. Each cat is a feline. Tabbies are cats. Rex is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => furry(x), FOR_ALL x, snake(x) => ~furry(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => ~herbivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "True"
    },
    {
        "number": 577,
        "query": "Max is segmented.",
        "query_fol": "segmented(x)",
        "context": "Animals are not unicellular. Each invertebrate is an animal. Each protostome is an invertebrate. Arthropods are protostomes. Arthropods are segmented. Insects are arthropods. Every insect is not eight-legged. Lepidopterans are insects. Every butterfly is a lepidopteran. Each nematode is not segmented. Each painted lady is a butterfly. Max is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => segmented(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, nematode(x) => ~segmented(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 578,
        "query": "Sam is bony.",
        "query_fol": "bony(x)",
        "context": "Animals are not unicellular. Each invertebrate is an animal. Protostomes are invertebrates. Arthropods are protostomes. Every arthropod is not bony. Every insect is an arthropod. Insects are six-legged. Every lepidopteran is an insect. Butterflies are lepidopterans. Every painted lady is a butterfly. Every whale is bony. Sam is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), FOR_ALL x, whale(x) => bony(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 579,
        "query": "Rex is not cold-blooded.",
        "query_fol": "~cold_blooded(x)",
        "context": "Each animal is not unicellular. Bilaterians are animals. Chordates are bilaterians. Each vertebrate is a chordate. Mammals are vertebrates. Mammals are not cold-blooded. Carnivores are mammals. Carnivores are not herbivorous. Felines are carnivores. Snakes are cold-blooded. Cats are felines. Tabbies are cats. Rex is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => ~cold_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => ~herbivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, snake(x) => cold_blooded(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "True"
    },
    {
        "number": 580,
        "query": "Stella is segmented.",
        "query_fol": "segmented(x)",
        "context": "Animals are multicellular. Each nematode is not segmented. Invertebrates are animals. Protostomes are invertebrates. Each arthropod is a protostome. Arthropods are segmented. Insects are arthropods. Each insect is six-legged. Each lepidopteran is an insect. Butterflies are lepidopterans. Painted ladies are butterflies. Stella is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, nematode(x) => ~segmented(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => segmented(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 581,
        "query": "Fae is cold-blooded.",
        "query_fol": "cold_blooded(x)",
        "context": "Animals are not unicellular. Bilaterians are animals. Chordates are bilaterians. Vertebrates are chordates. Every mammal is a vertebrate. Each snake is cold-blooded. Every mammal is not cold-blooded. Each carnivore is a mammal. Every carnivore is not herbivorous. Felines are carnivores. Cats are felines. Every tabby is a cat. Fae is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, snake(x) => cold_blooded(x), FOR_ALL x, mammal(x) => ~cold_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => ~herbivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 582,
        "query": "Wren is segmented.",
        "query_fol": "segmented(x)",
        "context": "Every animal is not unicellular. Each invertebrate is an animal. Protostomes are invertebrates. Each arthropod is a protostome. Each arthropod is segmented. Nematodes are not segmented. Insects are arthropods. Insects are not eight-legged. Lepidopterans are insects. Butterflies are lepidopterans. Every painted lady is a butterfly. Wren is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => segmented(x), FOR_ALL x, nematode(x) => ~segmented(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 583,
        "query": "Alex is small.",
        "query_fol": "small(x)",
        "context": "Every animal is not unicellular. Every invertebrate is an animal. Protostomes are invertebrates. Each arthropod is a protostome. Arthropods are small. Each insect is an arthropod. Each insect is six-legged. Lepidopterans are insects. Each butterfly is a lepidopteran. Each painted lady is a butterfly. Whales are not small. Alex is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => small(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), FOR_ALL x, whale(x) => ~small(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 584,
        "query": "3 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Every real number is a number. Real numbers are not imaginary. Integers are real numbers. Natural numbers are integers. Natural numbers are positive. Each complex number is imaginary. Every prime number is a natural number. Prime numbers are prime. Each Mersenne prime is a prime number. Every Mersenne prime is prime. 3 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => positive(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 585,
        "query": "Sally is bony.",
        "query_fol": "bony(x)",
        "context": "Each animal is multicellular. Every invertebrate is an animal. Protostomes are invertebrates. Every arthropod is a protostome. Each arthropod is not bony. Every insect is an arthropod. Every insect is not eight-legged. Every lepidopteran is an insect. Butterflies are lepidopterans. Each painted lady is a butterfly. Each whale is bony. Sally is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), FOR_ALL x, whale(x) => bony(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 586,
        "query": "131071 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Each real number is a number. Every real number is not imaginary. Integers are real numbers. Each natural number is an integer. Every natural number is positive. Prime numbers are natural numbers. Prime numbers are not composite. Complex numbers are imaginary. Mersenne primes are prime numbers. Each Mersenne prime is prime. 131071 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 587,
        "query": "Stella is warm-blooded.",
        "query_fol": "warm_blooded(x)",
        "context": "Animals are not unicellular. Each snake is not warm-blooded. Each bilaterian is an animal. Every chordate is a bilaterian. Vertebrates are chordates. Each mammal is a vertebrate. Mammals are warm-blooded. Every carnivore is a mammal. Every carnivore is not herbivorous. Felines are carnivores. Each cat is a feline. Tabbies are cats. Stella is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, snake(x) => ~warm_blooded(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => warm_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => ~herbivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "True"
    },
    {
        "number": 588,
        "query": "7 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Real numbers are numbers. Every real number is not imaginary. Integers are real numbers. Every natural number is an integer. Every natural number is positive. Prime numbers are natural numbers. Each prime number is not composite. Mersenne primes are prime numbers. Every complex number is imaginary. Mersenne primes are prime. 7 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 589,
        "query": "3 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Real numbers are numbers. Each real number is not imaginary. Each complex number is imaginary. Integers are real numbers. Natural numbers are integers. Natural numbers are positive. Every prime number is a natural number. Prime numbers are not composite. Each Mersenne prime is a prime number. Each Mersenne prime is prime. 3 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 590,
        "query": "8191 is not real.",
        "query_fol": "~real_number(x)",
        "context": "Real numbers are numbers. Every real number is real. Each integer is a real number. Natural numbers are integers. Each natural number is positive. Prime numbers are natural numbers. Prime numbers are prime. Each Mersenne prime is a prime number. Mersenne primes are prime. Each imaginary number is not real. 8191 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 591,
        "query": "8191 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Every real number is a number. Every real number is not imaginary. Integers are real numbers. Natural numbers are integers. Each natural number is positive. Every prime number is a natural number. Prime numbers are prime. Each complex number is imaginary. Mersenne primes are prime numbers. Mersenne primes are prime. 8191 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 592,
        "query": "Alex is not bony.",
        "query_fol": "~bony(x)",
        "context": "Every animal is multicellular. Every invertebrate is an animal. Every protostome is an invertebrate. Every arthropod is a protostome. Arthropods are not bony. Each insect is an arthropod. Each whale is bony. Insects are six-legged. Lepidopterans are insects. Butterflies are lepidopterans. Every painted lady is a butterfly. Alex is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 593,
        "query": "Polly is not bony.",
        "query_fol": "~bony(x)",
        "context": "Every whale is bony. Animals are not unicellular. Invertebrates are animals. Protostomes are invertebrates. Arthropods are protostomes. Each arthropod is not bony. Insects are arthropods. Insects are six-legged. Every lepidopteran is an insect. Each butterfly is a lepidopteran. Painted ladies are butterflies. Polly is a painted lady.",
        "rules_fol": "[FOR_ALL x, whale(x) => bony(x), FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 594,
        "query": "7 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Each complex number is imaginary. Real numbers are numbers. Real numbers are not imaginary. Each integer is a real number. Each natural number is an integer. Each natural number is not negative. Prime numbers are natural numbers. Each prime number is prime. Mersenne primes are prime numbers. Every Mersenne prime is prime. 7 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 595,
        "query": "7 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Each real number is a number. Every real number is not imaginary. Integers are real numbers. Each natural number is an integer. Natural numbers are not negative. Prime numbers are natural numbers. Every prime number is prime. Each complex number is imaginary. Each Mersenne prime is a prime number. Mersenne primes are prime. 7 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 596,
        "query": "Max is not bony.",
        "query_fol": "~bony(x)",
        "context": "Every animal is multicellular. Every invertebrate is an animal. Each protostome is an invertebrate. Arthropods are protostomes. Arthropods are not bony. Every insect is an arthropod. Insects are six-legged. Whales are bony. Each lepidopteran is an insect. Butterflies are lepidopterans. Each painted lady is a butterfly. Max is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 597,
        "query": "7 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Real numbers are numbers. Every real number is not imaginary. Every integer is a real number. Natural numbers are integers. Every complex number is imaginary. Every natural number is positive. Prime numbers are natural numbers. Prime numbers are prime. Mersenne primes are prime numbers. Mersenne primes are prime. 7 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 598,
        "query": "3 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Each real number is a number. Every real number is not imaginary. Integers are real numbers. Natural numbers are integers. Natural numbers are not negative. Every prime number is a natural number. Each prime number is not composite. Mersenne primes are prime numbers. Complex numbers are imaginary. Each Mersenne prime is prime. 3 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 599,
        "query": "Max is not segmented.",
        "query_fol": "~segmented(x)",
        "context": "Every animal is not unicellular. Invertebrates are animals. Each protostome is an invertebrate. Arthropods are protostomes. Arthropods are segmented. Insects are arthropods. Insects are six-legged. Lepidopterans are insects. Nematodes are not segmented. Every butterfly is a lepidopteran. Each painted lady is a butterfly. Max is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => segmented(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, nematode(x) => ~segmented(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 600,
        "query": "Polly is warm-blooded.",
        "query_fol": "warm_blooded(x)",
        "context": "Each animal is not unicellular. Bilaterians are animals. Each chordate is a bilaterian. Every snake is not warm-blooded. Vertebrates are chordates. Mammals are vertebrates. Each mammal is warm-blooded. Each carnivore is a mammal. Every carnivore is carnivorous. Every feline is a carnivore. Every cat is a feline. Every tabby is a cat. Polly is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, snake(x) => ~warm_blooded(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => warm_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "True"
    },
    {
        "number": 601,
        "query": "131071 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Every real number is a number. Real numbers are not imaginary. Every integer is a real number. Each natural number is an integer. Natural numbers are not negative. Every prime number is a natural number. Complex numbers are imaginary. Prime numbers are prime. Mersenne primes are prime numbers. Mersenne primes are not composite. 131071 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => ~composite_number(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 602,
        "query": "Stella is not small.",
        "query_fol": "~small(x)",
        "context": "Every animal is multicellular. Each invertebrate is an animal. Protostomes are invertebrates. Every arthropod is a protostome. Every arthropod is small. Every insect is an arthropod. Whales are not small. Every insect is six-legged. Each lepidopteran is an insect. Each butterfly is a lepidopteran. Painted ladies are butterflies. Stella is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => small(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, whale(x) => ~small(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 603,
        "query": "31 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Every real number is a number. Real numbers are not imaginary. Each complex number is imaginary. Integers are real numbers. Each natural number is an integer. Natural numbers are positive. Prime numbers are natural numbers. Prime numbers are not composite. Mersenne primes are prime numbers. Each Mersenne prime is prime. 31 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 604,
        "query": "Max is cold-blooded.",
        "query_fol": "cold_blooded(x)",
        "context": "Every animal is not unicellular. Bilaterians are animals. Every chordate is a bilaterian. Every vertebrate is a chordate. Mammals are vertebrates. Every mammal is not cold-blooded. Carnivores are mammals. Carnivores are carnivorous. Snakes are cold-blooded. Felines are carnivores. Cats are felines. Tabbies are cats. Max is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => ~cold_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, snake(x) => cold_blooded(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 605,
        "query": "7 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Real numbers are numbers. Real numbers are not imaginary. Integers are real numbers. Natural numbers are integers. Each natural number is not negative. Prime numbers are natural numbers. Complex numbers are imaginary. Every prime number is not composite. Every Mersenne prime is a prime number. Mersenne primes are not composite. 7 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => ~composite(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 606,
        "query": "7 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Real numbers are numbers. Real numbers are not imaginary. Every integer is a real number. Natural numbers are integers. Every natural number is positive. Prime numbers are natural numbers. Prime numbers are prime. Complex numbers are imaginary. Each Mersenne prime is a prime number. Mersenne primes are not composite. 7 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => positive(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime_number(x) => ~composite_number(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 607,
        "query": "131071 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Each real number is a number. Every real number is not imaginary. Every integer is a real number. Every complex number is imaginary. Natural numbers are integers. Every natural number is positive. Prime numbers are natural numbers. Prime numbers are not composite. Mersenne primes are prime numbers. Every Mersenne prime is prime. 131071 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 608,
        "query": "3 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Every complex number is imaginary. Real numbers are numbers. Each real number is not imaginary. Integers are real numbers. Each natural number is an integer. Each natural number is positive. Every prime number is a natural number. Every prime number is not composite. Every Mersenne prime is a prime number. Every Mersenne prime is prime. 3 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 609,
        "query": "127 is real.",
        "query_fol": "real_number(x)",
        "context": "Real numbers are numbers. Each real number is real. Integers are real numbers. Natural numbers are integers. Natural numbers are not negative. Each prime number is a natural number. Each prime number is not composite. Mersenne primes are prime numbers. Mersenne primes are prime. Imaginary numbers are not real. 127 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 610,
        "query": "3 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Real numbers are numbers. Real numbers are not imaginary. Every integer is a real number. Natural numbers are integers. Natural numbers are not negative. Every prime number is a natural number. Complex numbers are imaginary. Prime numbers are prime. Mersenne primes are prime numbers. Each Mersenne prime is not composite. 3 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => ~composite(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 611,
        "query": "Sally is small.",
        "query_fol": "small(x)",
        "context": "Animals are multicellular. Invertebrates are animals. Every protostome is an invertebrate. Every arthropod is a protostome. Arthropods are small. Insects are arthropods. Every insect is six-legged. Every whale is not small. Lepidopterans are insects. Butterflies are lepidopterans. Painted ladies are butterflies. Sally is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => small(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, whale(x) => ~small(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 612,
        "query": "Alex is segmented.",
        "query_fol": "segmented(x)",
        "context": "Animals are multicellular. Invertebrates are animals. Protostomes are invertebrates. Arthropods are protostomes. Every arthropod is segmented. Insects are arthropods. Every insect is six-legged. Lepidopterans are insects. Butterflies are lepidopterans. Nematodes are not segmented. Painted ladies are butterflies. Alex is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => segmented(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, nematode(x) => ~segmented(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 613,
        "query": "131071 is not real.",
        "query_fol": "~real_number(x)",
        "context": "Real numbers are numbers. Imaginary numbers are not real. Real numbers are real. Integers are real numbers. Every natural number is an integer. Every natural number is not negative. Each prime number is a natural number. Each prime number is not composite. Each Mersenne prime is a prime number. Mersenne primes are not composite. 131071 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime_number(x) => ~composite_number(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 614,
        "query": "Wren is segmented.",
        "query_fol": "segmented(x)",
        "context": "Every animal is multicellular. Each nematode is not segmented. Each invertebrate is an animal. Protostomes are invertebrates. Arthropods are protostomes. Arthropods are segmented. Every insect is an arthropod. Every insect is six-legged. Each lepidopteran is an insect. Butterflies are lepidopterans. Each painted lady is a butterfly. Wren is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, nematode(x) => ~segmented(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => segmented(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 615,
        "query": "31 is not real.",
        "query_fol": "~real_number(x)",
        "context": "Each imaginary number is not real. Real numbers are numbers. Every real number is real. Integers are real numbers. Natural numbers are integers. Each natural number is not negative. Prime numbers are natural numbers. Prime numbers are prime. Mersenne primes are prime numbers. Mersenne primes are not composite. 31 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => ~composite(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 616,
        "query": "127 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Every complex number is imaginary. Every real number is a number. Every real number is not imaginary. Integers are real numbers. Every natural number is an integer. Each natural number is positive. Prime numbers are natural numbers. Prime numbers are not composite. Mersenne primes are prime numbers. Each Mersenne prime is prime. 127 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime(x)]",
        "answer": "True"
    },
    {
        "number": 617,
        "query": "Sally is not segmented.",
        "query_fol": "~segmented(x)",
        "context": "Animals are not unicellular. Invertebrates are animals. Every protostome is an invertebrate. Each arthropod is a protostome. Arthropods are segmented. Insects are arthropods. Insects are six-legged. Nematodes are not segmented. Every lepidopteran is an insect. Each butterfly is a lepidopteran. Painted ladies are butterflies. Sally is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => segmented(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, nematode(x) => ~segmented(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 618,
        "query": "8191 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Real numbers are numbers. Complex numbers are imaginary. Each real number is not imaginary. Each integer is a real number. Each natural number is an integer. Every natural number is not negative. Each prime number is a natural number. Prime numbers are not composite. Mersenne primes are prime numbers. Mersenne primes are prime. 8191 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 619,
        "query": "Max is small.",
        "query_fol": "small(x)",
        "context": "Animals are multicellular. Invertebrates are animals. Each protostome is an invertebrate. Arthropods are protostomes. Every whale is not small. Every arthropod is small. Every insect is an arthropod. Insects are six-legged. Every lepidopteran is an insect. Each butterfly is a lepidopteran. Each painted lady is a butterfly. Max is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, whale(x) => ~small(x), FOR_ALL x, arthropod(x) => small(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 620,
        "query": "127 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Each real number is a number. Each real number is not imaginary. Integers are real numbers. Natural numbers are integers. Every natural number is not negative. Complex numbers are imaginary. Prime numbers are natural numbers. Every prime number is prime. Mersenne primes are prime numbers. Mersenne primes are not composite. 127 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => ~composite_number(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 621,
        "query": "Wren is not bony.",
        "query_fol": "~bony(x)",
        "context": "Animals are not unicellular. Every invertebrate is an animal. Protostomes are invertebrates. Arthropods are protostomes. Arthropods are not bony. Each whale is bony. Each insect is an arthropod. Each insect is six-legged. Lepidopterans are insects. Butterflies are lepidopterans. Every painted lady is a butterfly. Wren is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 622,
        "query": "8191 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Every real number is a number. Real numbers are not imaginary. Every integer is a real number. Every natural number is an integer. Natural numbers are positive. Prime numbers are natural numbers. Every prime number is prime. Each complex number is imaginary. Mersenne primes are prime numbers. Mersenne primes are not composite. 8191 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => ~composite(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 623,
        "query": "8191 is real.",
        "query_fol": "real(x)",
        "context": "Real numbers are numbers. Every real number is real. Imaginary numbers are not real. Integers are real numbers. Each natural number is an integer. Each natural number is positive. Prime numbers are natural numbers. Prime numbers are not composite. Mersenne primes are prime numbers. Each Mersenne prime is not composite. 8191 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => ~composite(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 624,
        "query": "127 is real.",
        "query_fol": "real_number(x)",
        "context": "Real numbers are numbers. Every real number is real. Integers are real numbers. Every natural number is an integer. Every natural number is not negative. Each prime number is a natural number. Prime numbers are not composite. Every Mersenne prime is a prime number. Imaginary numbers are not real. Each Mersenne prime is not composite. 127 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, mersenne_prime(x) => ~composite_number(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 625,
        "query": "3 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Each real number is a number. Each real number is not imaginary. Each integer is a real number. Natural numbers are integers. Natural numbers are not negative. Prime numbers are natural numbers. Complex numbers are imaginary. Prime numbers are prime. Every Mersenne prime is a prime number. Every Mersenne prime is not composite. 3 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => ~composite(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 626,
        "query": "127 is real.",
        "query_fol": "real_number(x)",
        "context": "Real numbers are numbers. Each real number is real. Integers are real numbers. Every natural number is an integer. Natural numbers are positive. Each prime number is a natural number. Each prime number is not composite. Each Mersenne prime is a prime number. Every imaginary number is not real. Mersenne primes are not composite. 127 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, mersenne_prime(x) => ~composite(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 627,
        "query": "Fae is not bony.",
        "query_fol": "~bony(x)",
        "context": "Whales are bony. Every animal is not unicellular. Every invertebrate is an animal. Protostomes are invertebrates. Arthropods are protostomes. Arthropods are not bony. Insects are arthropods. Insects are not eight-legged. Lepidopterans are insects. Every butterfly is a lepidopteran. Painted ladies are butterflies. Fae is a painted lady.",
        "rules_fol": "[FOR_ALL x, whale(x) => bony(x), FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 628,
        "query": "Stella is not cold-blooded.",
        "query_fol": "~cold_blooded(x)",
        "context": "Each animal is multicellular. Every bilaterian is an animal. Chordates are bilaterians. Vertebrates are chordates. Every mammal is a vertebrate. Each mammal is not cold-blooded. Carnivores are mammals. Snakes are cold-blooded. Carnivores are carnivorous. Every feline is a carnivore. Cats are felines. Tabbies are cats. Stella is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => ~cold_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, snake(x) => cold_blooded(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "True"
    },
    {
        "number": 629,
        "query": "Sally is not segmented.",
        "query_fol": "~segmented(x)",
        "context": "Animals are multicellular. Every invertebrate is an animal. Protostomes are invertebrates. Each arthropod is a protostome. Every nematode is not segmented. Arthropods are segmented. Insects are arthropods. Insects are not eight-legged. Lepidopterans are insects. Every butterfly is a lepidopteran. Painted ladies are butterflies. Sally is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, nematode(x) => ~segmented(x), FOR_ALL x, arthropod(x) => segmented(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 630,
        "query": "31 is not real.",
        "query_fol": "~real_number(x)",
        "context": "Every real number is a number. Real numbers are real. Integers are real numbers. Every imaginary number is not real. Natural numbers are integers. Each natural number is positive. Every prime number is a natural number. Each prime number is not composite. Each Mersenne prime is a prime number. Mersenne primes are not composite. 31 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime_number(x) => ~composite_number(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 631,
        "query": "8191 is not real.",
        "query_fol": "~real_number(x)",
        "context": "Real numbers are numbers. Each imaginary number is not real. Real numbers are real. Every integer is a real number. Every natural number is an integer. Each natural number is not negative. Prime numbers are natural numbers. Prime numbers are not composite. Mersenne primes are prime numbers. Each Mersenne prime is prime. 8191 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 632,
        "query": "127 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Complex numbers are imaginary. Each real number is a number. Real numbers are not imaginary. Integers are real numbers. Natural numbers are integers. Natural numbers are not negative. Each prime number is a natural number. Prime numbers are not composite. Mersenne primes are prime numbers. Mersenne primes are prime. 127 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime(x) => ~composite(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 633,
        "query": "31 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Real numbers are numbers. Every complex number is imaginary. Every real number is not imaginary. Each integer is a real number. Natural numbers are integers. Natural numbers are positive. Prime numbers are natural numbers. Every prime number is not composite. Mersenne primes are prime numbers. Mersenne primes are not composite. 31 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime_number(x) => ~composite_number(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 634,
        "query": "Stella is bony.",
        "query_fol": "bony(x)",
        "context": "Every animal is multicellular. Invertebrates are animals. Whales are bony. Every protostome is an invertebrate. Arthropods are protostomes. Each arthropod is not bony. Each insect is an arthropod. Insects are six-legged. Every lepidopteran is an insect. Each butterfly is a lepidopteran. Each painted lady is a butterfly. Stella is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 635,
        "query": "127 is not imaginary.",
        "query_fol": "~imaginary(x)",
        "context": "Real numbers are numbers. Real numbers are not imaginary. Integers are real numbers. Complex numbers are imaginary. Every natural number is an integer. Natural numbers are not negative. Prime numbers are natural numbers. Prime numbers are not composite. Mersenne primes are prime numbers. Every Mersenne prime is prime. 127 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime(x)]",
        "answer": "True"
    },
    {
        "number": 636,
        "query": "Sally is not segmented.",
        "query_fol": "~segmented(x)",
        "context": "Animals are multicellular. Every invertebrate is an animal. Every protostome is an invertebrate. Nematodes are not segmented. Arthropods are protostomes. Arthropods are segmented. Insects are arthropods. Each insect is not eight-legged. Lepidopterans are insects. Butterflies are lepidopterans. Each painted lady is a butterfly. Sally is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, nematode(x) => ~segmented(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => segmented(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 637,
        "query": "31 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Each real number is a number. Complex numbers are imaginary. Real numbers are not imaginary. Every integer is a real number. Natural numbers are integers. Each natural number is not negative. Prime numbers are natural numbers. Prime numbers are not composite. Mersenne primes are prime numbers. Every Mersenne prime is prime. 31 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 638,
        "query": "31 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Complex numbers are imaginary. Every real number is a number. Real numbers are not imaginary. Integers are real numbers. Natural numbers are integers. Each natural number is positive. Prime numbers are natural numbers. Each prime number is prime. Mersenne primes are prime numbers. Each Mersenne prime is prime. 31 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 639,
        "query": "Wren is segmented.",
        "query_fol": "segmented(x)",
        "context": "Animals are multicellular. Every invertebrate is an animal. Each protostome is an invertebrate. Each arthropod is a protostome. Nematodes are not segmented. Every arthropod is segmented. Each insect is an arthropod. Each insect is not eight-legged. Each lepidopteran is an insect. Each butterfly is a lepidopteran. Painted ladies are butterflies. Wren is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, nematode(x) => ~segmented(x), FOR_ALL x, arthropod(x) => segmented(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 640,
        "query": "Wren is bony.",
        "query_fol": "bony(x)",
        "context": "Every animal is not unicellular. Invertebrates are animals. Each protostome is an invertebrate. Whales are bony. Each arthropod is a protostome. Arthropods are not bony. Insects are arthropods. Every insect is not eight-legged. Lepidopterans are insects. Each butterfly is a lepidopteran. Painted ladies are butterflies. Wren is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 641,
        "query": "Polly is small.",
        "query_fol": "small(x)",
        "context": "Every animal is multicellular. Invertebrates are animals. Protostomes are invertebrates. Each arthropod is a protostome. Arthropods are small. Every insect is an arthropod. Every insect is not eight-legged. Each whale is not small. Each lepidopteran is an insect. Butterflies are lepidopterans. Each painted lady is a butterfly. Polly is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => small(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, whale(x) => ~small(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 642,
        "query": "8191 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Real numbers are numbers. Each real number is not imaginary. Integers are real numbers. Natural numbers are integers. Each natural number is positive. Every prime number is a natural number. Prime numbers are not composite. Mersenne primes are prime numbers. Complex numbers are imaginary. Mersenne primes are prime. 8191 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 643,
        "query": "127 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Real numbers are numbers. Each real number is not imaginary. Each complex number is imaginary. Each integer is a real number. Each natural number is an integer. Each natural number is positive. Each prime number is a natural number. Each prime number is prime. Mersenne primes are prime numbers. Mersenne primes are prime. 127 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 644,
        "query": "Max is cold-blooded.",
        "query_fol": "cold_blooded(x)",
        "context": "Animals are not unicellular. Bilaterians are animals. Chordates are bilaterians. Vertebrates are chordates. Every mammal is a vertebrate. Every mammal is not cold-blooded. Every carnivore is a mammal. Each carnivore is carnivorous. Each feline is a carnivore. Snakes are cold-blooded. Each cat is a feline. Every tabby is a cat. Max is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => ~cold_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, snake(x) => cold_blooded(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 645,
        "query": "Fae is not warm-blooded.",
        "query_fol": "~warm_blooded(x)",
        "context": "Snakes are not warm-blooded. Every animal is not unicellular. Every bilaterian is an animal. Each chordate is a bilaterian. Vertebrates are chordates. Every mammal is a vertebrate. Each mammal is warm-blooded. Every carnivore is a mammal. Carnivores are not herbivorous. Each feline is a carnivore. Cats are felines. Each tabby is a cat. Fae is a tabby.",
        "rules_fol": "[FOR_ALL x, snake(x) => ~warm_blooded(x), FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => warm_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => ~herbivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 646,
        "query": "Alex is not furry.",
        "query_fol": "~furry(x)",
        "context": "Every animal is multicellular. Every bilaterian is an animal. Each chordate is a bilaterian. Each vertebrate is a chordate. Every mammal is a vertebrate. Every mammal is furry. Every carnivore is a mammal. Carnivores are not herbivorous. Each feline is a carnivore. Cats are felines. Tabbies are cats. Every snake is not furry. Alex is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => furry(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => ~herbivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), FOR_ALL x, snake(x) => ~furry(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 647,
        "query": "131071 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Real numbers are numbers. Every real number is not imaginary. Integers are real numbers. Natural numbers are integers. Complex numbers are imaginary. Natural numbers are positive. Every prime number is a natural number. Prime numbers are prime. Each Mersenne prime is a prime number. Mersenne primes are prime. 131071 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 648,
        "query": "3 is not real.",
        "query_fol": "~real_number(x)",
        "context": "Real numbers are numbers. Real numbers are real. Every integer is a real number. Natural numbers are integers. Every natural number is not negative. Prime numbers are natural numbers. Imaginary numbers are not real. Prime numbers are not composite. Mersenne primes are prime numbers. Every Mersenne prime is prime. 3 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => ~negative(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 649,
        "query": "31 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Every real number is a number. Real numbers are not imaginary. Each integer is a real number. Natural numbers are integers. Every complex number is imaginary. Natural numbers are positive. Each prime number is a natural number. Each prime number is prime. Mersenne primes are prime numbers. Mersenne primes are not composite. 31 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime_number(x) => ~composite_number(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 650,
        "query": "Wren is not bony.",
        "query_fol": "~bony(x)",
        "context": "Animals are multicellular. Invertebrates are animals. Each protostome is an invertebrate. Every arthropod is a protostome. Every arthropod is not bony. Each insect is an arthropod. Each insect is six-legged. Every whale is bony. Every lepidopteran is an insect. Each butterfly is a lepidopteran. Painted ladies are butterflies. Wren is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 651,
        "query": "127 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Real numbers are numbers. Real numbers are not imaginary. Every integer is a real number. Each natural number is an integer. Natural numbers are not negative. Complex numbers are imaginary. Every prime number is a natural number. Prime numbers are not composite. Mersenne primes are prime numbers. Every Mersenne prime is not composite. 127 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => ~composite(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 652,
        "query": "Wren is furry.",
        "query_fol": "furry(x)",
        "context": "Each animal is multicellular. Every bilaterian is an animal. Each chordate is a bilaterian. Each vertebrate is a chordate. Snakes are not furry. Every mammal is a vertebrate. Mammals are furry. Carnivores are mammals. Carnivores are not herbivorous. Each feline is a carnivore. Cats are felines. Tabbies are cats. Wren is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, snake(x) => ~furry(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => furry(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => ~herbivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "True"
    },
    {
        "number": 653,
        "query": "Polly is not cold-blooded.",
        "query_fol": "~cold_blooded(x)",
        "context": "Animals are not unicellular. Bilaterians are animals. Chordates are bilaterians. Each vertebrate is a chordate. Every snake is cold-blooded. Each mammal is a vertebrate. Mammals are not cold-blooded. Each carnivore is a mammal. Carnivores are not herbivorous. Felines are carnivores. Cats are felines. Tabbies are cats. Polly is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, snake(x) => cold_blooded(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => ~cold_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => ~herbivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabbies(x) => cat(x), tabby(x)]",
        "answer": "True"
    },
    {
        "number": 654,
        "query": "31 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Each real number is a number. Every real number is not imaginary. Complex numbers are imaginary. Integers are real numbers. Every natural number is an integer. Natural numbers are not negative. Each prime number is a natural number. Prime numbers are not composite. Each Mersenne prime is a prime number. Every Mersenne prime is prime. 31 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 655,
        "query": "31 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Complex numbers are imaginary. Real numbers are numbers. Real numbers are not imaginary. Integers are real numbers. Natural numbers are integers. Natural numbers are positive. Every prime number is a natural number. Prime numbers are not composite. Mersenne primes are prime numbers. Every Mersenne prime is not composite. 31 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => positive(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => ~composite_number(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 656,
        "query": "7 is not real.",
        "query_fol": "~real_number(x)",
        "context": "Every real number is a number. Each real number is real. Every integer is a real number. Natural numbers are integers. Natural numbers are positive. Imaginary numbers are not real. Prime numbers are natural numbers. Prime numbers are not composite. Mersenne primes are prime numbers. Mersenne primes are prime. 7 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 657,
        "query": "7 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Each real number is a number. Real numbers are not imaginary. Each integer is a real number. Each natural number is an integer. Every complex number is imaginary. Each natural number is not negative. Every prime number is a natural number. Each prime number is prime. Each Mersenne prime is a prime number. Mersenne primes are not composite. 7 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => ~composite(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 658,
        "query": "Stella is cold-blooded.",
        "query_fol": "cold_blooded(x)",
        "context": "Every animal is not unicellular. Each bilaterian is an animal. Chordates are bilaterians. Vertebrates are chordates. Mammals are vertebrates. Each mammal is not cold-blooded. Snakes are cold-blooded. Carnivores are mammals. Carnivores are carnivorous. Each feline is a carnivore. Cats are felines. Every tabby is a cat. Stella is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => ~cold_blooded(x), FOR_ALL x, snake(x) => cold_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 659,
        "query": "7 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Real numbers are numbers. Every real number is not imaginary. Every integer is a real number. Natural numbers are integers. Each natural number is positive. Every prime number is a natural number. Each prime number is not composite. Each complex number is imaginary. Every Mersenne prime is a prime number. Mersenne primes are not composite. 7 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => positive(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime_number(x) => ~composite_number(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 660,
        "query": "3 is real.",
        "query_fol": "real_number(x)",
        "context": "Each real number is a number. Every real number is real. Integers are real numbers. Every natural number is an integer. Every natural number is positive. Prime numbers are natural numbers. Each imaginary number is not real. Every prime number is prime. Every Mersenne prime is a prime number. Each Mersenne prime is prime. 3 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 661,
        "query": "3 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Each real number is a number. Real numbers are not imaginary. Each integer is a real number. Natural numbers are integers. Natural numbers are not negative. Prime numbers are natural numbers. Prime numbers are prime. Each Mersenne prime is a prime number. Every Mersenne prime is not composite. Complex numbers are imaginary. 3 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => ~composite_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 662,
        "query": "Alex is segmented.",
        "query_fol": "segmented(x)",
        "context": "Animals are multicellular. Invertebrates are animals. Protostomes are invertebrates. Arthropods are protostomes. Every arthropod is segmented. Every insect is an arthropod. Insects are not eight-legged. Nematodes are not segmented. Lepidopterans are insects. Each butterfly is a lepidopteran. Each painted lady is a butterfly. Alex is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => segmented(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, nematode(x) => ~segmented(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 663,
        "query": "7 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Every real number is a number. Real numbers are not imaginary. Integers are real numbers. Each natural number is an integer. Each natural number is not negative. Every complex number is imaginary. Every prime number is a natural number. Every prime number is prime. Each Mersenne prime is a prime number. Each Mersenne prime is not composite. 7 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime_number(x) => ~composite_number(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 664,
        "query": "127 is real.",
        "query_fol": "real_number(x)",
        "context": "Every real number is a number. Every real number is real. Every integer is a real number. Each natural number is an integer. Natural numbers are positive. Prime numbers are natural numbers. Prime numbers are prime. Every Mersenne prime is a prime number. Each Mersenne prime is prime. Every imaginary number is not real. 127 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 665,
        "query": "Rex is not cold-blooded.",
        "query_fol": "~cold_blooded(x)",
        "context": "Every animal is multicellular. Every bilaterian is an animal. Chordates are bilaterians. Each vertebrate is a chordate. Every mammal is a vertebrate. Every mammal is not cold-blooded. Every carnivore is a mammal. Each carnivore is carnivorous. Each feline is a carnivore. Snakes are cold-blooded. Cats are felines. Tabbies are cats. Rex is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => ~cold_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, snake(x) => cold_blooded(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "True"
    },
    {
        "number": 666,
        "query": "8191 is real.",
        "query_fol": "real_number(x)",
        "context": "Real numbers are numbers. Real numbers are real. Every imaginary number is not real. Integers are real numbers. Natural numbers are integers. Natural numbers are not negative. Prime numbers are natural numbers. Each prime number is not composite. Each Mersenne prime is a prime number. Mersenne primes are prime. 8191 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 667,
        "query": "Sally is segmented.",
        "query_fol": "segmented(x)",
        "context": "Animals are not unicellular. Every invertebrate is an animal. Protostomes are invertebrates. Arthropods are protostomes. Arthropods are segmented. Insects are arthropods. Insects are six-legged. Nematodes are not segmented. Lepidopterans are insects. Every butterfly is a lepidopteran. Painted ladies are butterflies. Sally is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => segmented(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, nematode(x) => ~segmented(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 668,
        "query": "Fae is small.",
        "query_fol": "small(x)",
        "context": "Animals are not unicellular. Invertebrates are animals. Protostomes are invertebrates. Whales are not small. Arthropods are protostomes. Each arthropod is small. Every insect is an arthropod. Each insect is six-legged. Each lepidopteran is an insect. Each butterfly is a lepidopteran. Every painted lady is a butterfly. Fae is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, whale(x) => ~small(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => small(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 669,
        "query": "Fae is not small.",
        "query_fol": "~small(x)",
        "context": "Animals are multicellular. Invertebrates are animals. Protostomes are invertebrates. Each arthropod is a protostome. Arthropods are small. Insects are arthropods. Whales are not small. Every insect is six-legged. Each lepidopteran is an insect. Each butterfly is a lepidopteran. Painted ladies are butterflies. Fae is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => small(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, whale(x) => ~small(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 670,
        "query": "Alex is small.",
        "query_fol": "small(x)",
        "context": "Animals are multicellular. Each invertebrate is an animal. Each protostome is an invertebrate. Arthropods are protostomes. Each arthropod is small. Each insect is an arthropod. Insects are not eight-legged. Each lepidopteran is an insect. Every butterfly is a lepidopteran. Painted ladies are butterflies. Whales are not small. Alex is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => small(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), FOR_ALL x, whale(x) => ~small(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 671,
        "query": "Fae is not furry.",
        "query_fol": "~furry(x)",
        "context": "Each animal is multicellular. Bilaterians are animals. Each chordate is a bilaterian. Every vertebrate is a chordate. Every mammal is a vertebrate. Each mammal is furry. Each carnivore is a mammal. Every carnivore is not herbivorous. Each feline is a carnivore. Each snake is not furry. Every cat is a feline. Every tabby is a cat. Fae is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => furry(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => ~herbivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, snake(x) => ~furry(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 672,
        "query": "Max is cold-blooded.",
        "query_fol": "cold_blooded(x)",
        "context": "Animals are not unicellular. Bilaterians are animals. Each chordate is a bilaterian. Vertebrates are chordates. Mammals are vertebrates. Every mammal is not cold-blooded. Carnivores are mammals. Carnivores are carnivorous. Each feline is a carnivore. Cats are felines. Each snake is cold-blooded. Tabbies are cats. Max is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => ~cold_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, snake(x) => cold_blooded(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 673,
        "query": "3 is not real.",
        "query_fol": "~real_number(x)",
        "context": "Every imaginary number is not real. Every real number is a number. Each real number is real. Integers are real numbers. Natural numbers are integers. Every natural number is positive. Prime numbers are natural numbers. Prime numbers are prime. Mersenne primes are prime numbers. Every Mersenne prime is not composite. 3 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => ~composite(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 674,
        "query": "Stella is not bony.",
        "query_fol": "~bony(x)",
        "context": "Each animal is not unicellular. Invertebrates are animals. Every protostome is an invertebrate. Every arthropod is a protostome. Arthropods are not bony. Every insect is an arthropod. Every insect is six-legged. Whales are bony. Lepidopterans are insects. Butterflies are lepidopterans. Painted ladies are butterflies. Stella is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, whale(x) => bony(x), lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 675,
        "query": "3 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Each complex number is imaginary. Each real number is a number. Real numbers are not imaginary. Each integer is a real number. Every natural number is an integer. Natural numbers are positive. Prime numbers are natural numbers. Each prime number is prime. Mersenne primes are prime numbers. Mersenne primes are not composite. 3 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => ~composite(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 676,
        "query": "8191 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Every complex number is imaginary. Every real number is a number. Real numbers are not imaginary. Each integer is a real number. Natural numbers are integers. Natural numbers are not negative. Prime numbers are natural numbers. Prime numbers are prime. Mersenne primes are prime numbers. Mersenne primes are prime. 8191 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 677,
        "query": "Rex is not furry.",
        "query_fol": "~furry(x)",
        "context": "Animals are multicellular. Bilaterians are animals. Each chordate is a bilaterian. Snakes are not furry. Vertebrates are chordates. Mammals are vertebrates. Mammals are furry. Each carnivore is a mammal. Carnivores are carnivorous. Felines are carnivores. Cats are felines. Every tabby is a cat. Rex is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, snake(x) => ~furry(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammals(x) => furry(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 678,
        "query": "Stella is not furry.",
        "query_fol": "~furry(x)",
        "context": "Animals are multicellular. Bilaterians are animals. Chordates are bilaterians. Each vertebrate is a chordate. Mammals are vertebrates. Every mammal is furry. Each carnivore is a mammal. Carnivores are not herbivorous. Each feline is a carnivore. Cats are felines. Tabbies are cats. Snakes are not furry. Stella is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => furry(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => ~herbivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), FOR_ALL x, snake(x) => ~furry(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 679,
        "query": "Max is cold-blooded.",
        "query_fol": "cold_blooded(x)",
        "context": "Animals are multicellular. Bilaterians are animals. Chordates are bilaterians. Vertebrates are chordates. Mammals are vertebrates. Each mammal is not cold-blooded. Each snake is cold-blooded. Carnivores are mammals. Each carnivore is carnivorous. Felines are carnivores. Cats are felines. Tabbies are cats. Max is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => ~cold_blooded(x), FOR_ALL x, snake(x) => cold_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 680,
        "query": "131071 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Real numbers are numbers. Real numbers are not imaginary. Integers are real numbers. Natural numbers are integers. Every natural number is not negative. Each prime number is a natural number. Every complex number is imaginary. Prime numbers are not composite. Each Mersenne prime is a prime number. Mersenne primes are prime. 131071 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 681,
        "query": "Rex is cold-blooded.",
        "query_fol": "cold_blooded(x)",
        "context": "Animals are not unicellular. Each bilaterian is an animal. Every chordate is a bilaterian. Each vertebrate is a chordate. Each mammal is a vertebrate. Mammals are not cold-blooded. Carnivores are mammals. Carnivores are carnivorous. Every snake is cold-blooded. Felines are carnivores. Cats are felines. Every tabby is a cat. Rex is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => ~cold_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, snake(x) => cold_blooded(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 682,
        "query": "131071 is not real.",
        "query_fol": "~real_number(x)",
        "context": "Every real number is a number. Each real number is real. Integers are real numbers. Each natural number is an integer. Imaginary numbers are not real. Natural numbers are positive. Prime numbers are natural numbers. Every prime number is not composite. Mersenne primes are prime numbers. Every Mersenne prime is not composite. 131071 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => ~composite(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 683,
        "query": "127 is not imaginary.",
        "query_fol": "~imaginary(x)",
        "context": "Real numbers are numbers. Real numbers are not imaginary. Every integer is a real number. Complex numbers are imaginary. Natural numbers are integers. Natural numbers are not negative. Prime numbers are natural numbers. Prime numbers are prime. Each Mersenne prime is a prime number. Mersenne primes are prime. 127 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 684,
        "query": "131071 is real.",
        "query_fol": "real_number(x)",
        "context": "Real numbers are numbers. Each real number is real. Integers are real numbers. Natural numbers are integers. Natural numbers are positive. Each prime number is a natural number. Each imaginary number is not real. Each prime number is prime. Every Mersenne prime is a prime number. Mersenne primes are not composite. 131071 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => ~composite(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 685,
        "query": "31 is real.",
        "query_fol": "real_number(x)",
        "context": "Every real number is a number. Every imaginary number is not real. Every real number is real. Every integer is a real number. Each natural number is an integer. Every natural number is positive. Prime numbers are natural numbers. Each prime number is prime. Every Mersenne prime is a prime number. Mersenne primes are prime. 31 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 686,
        "query": "31 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Every real number is a number. Each real number is not imaginary. Each integer is a real number. Every natural number is an integer. Every natural number is not negative. Every prime number is a natural number. Every prime number is prime. Mersenne primes are prime numbers. Each complex number is imaginary. Mersenne primes are not composite. 31 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, mersenne_prime_number(x) => ~composite_number(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 687,
        "query": "8191 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Real numbers are numbers. Real numbers are not imaginary. Every integer is a real number. Each natural number is an integer. Each natural number is positive. Prime numbers are natural numbers. Every prime number is prime. Every Mersenne prime is a prime number. Complex numbers are imaginary. Every Mersenne prime is not composite. 8191 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, mersenne_prime(x) => ~composite(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 688,
        "query": "Stella is furry.",
        "query_fol": "furry(x)",
        "context": "Each animal is not unicellular. Every bilaterian is an animal. Chordates are bilaterians. Each vertebrate is a chordate. Mammals are vertebrates. Each mammal is furry. Carnivores are mammals. Snakes are not furry. Carnivores are not herbivorous. Felines are carnivores. Each cat is a feline. Each tabby is a cat. Stella is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => furry(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, snake(x) => ~furry(x), FOR_ALL x, carnivore(x) => ~herbivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "True"
    },
    {
        "number": 689,
        "query": "8191 is not real.",
        "query_fol": "~real_number(x)",
        "context": "Every real number is a number. Each real number is real. Each integer is a real number. Natural numbers are integers. Imaginary numbers are not real. Each natural number is not negative. Prime numbers are natural numbers. Prime numbers are prime. Every Mersenne prime is a prime number. Mersenne primes are prime. 8191 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 690,
        "query": "31 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Real numbers are numbers. Every real number is not imaginary. Integers are real numbers. Natural numbers are integers. Complex numbers are imaginary. Each natural number is not negative. Each prime number is a natural number. Every prime number is prime. Every Mersenne prime is a prime number. Mersenne primes are not composite. 31 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, natural_number(x) => ~negative(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => ~composite(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 691,
        "query": "Wren is not bony.",
        "query_fol": "~bony(x)",
        "context": "Every animal is multicellular. Every invertebrate is an animal. Whales are bony. Every protostome is an invertebrate. Every arthropod is a protostome. Every arthropod is not bony. Insects are arthropods. Insects are not eight-legged. Each lepidopteran is an insect. Each butterfly is a lepidopteran. Each painted lady is a butterfly. Wren is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 692,
        "query": "Sally is not segmented.",
        "query_fol": "~segmented(x)",
        "context": "Animals are multicellular. Each invertebrate is an animal. Each protostome is an invertebrate. Each nematode is not segmented. Arthropods are protostomes. Arthropods are segmented. Every insect is an arthropod. Insects are not eight-legged. Lepidopterans are insects. Butterflies are lepidopterans. Each painted lady is a butterfly. Sally is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, nematode(x) => ~segmented(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => segmented(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 693,
        "query": "Max is not warm-blooded.",
        "query_fol": "~warm_blooded(x)",
        "context": "Animals are multicellular. Every bilaterian is an animal. Each snake is not warm-blooded. Each chordate is a bilaterian. Vertebrates are chordates. Every mammal is a vertebrate. Mammals are warm-blooded. Each carnivore is a mammal. Each carnivore is not herbivorous. Felines are carnivores. Cats are felines. Every tabby is a cat. Max is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, snake(x) => ~warm_blooded(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => warm_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => ~herbivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 694,
        "query": "Sam is furry.",
        "query_fol": "furry(x)",
        "context": "Each animal is not unicellular. Every bilaterian is an animal. Every chordate is a bilaterian. Every snake is not furry. Each vertebrate is a chordate. Mammals are vertebrates. Each mammal is furry. Every carnivore is a mammal. Every carnivore is not herbivorous. Felines are carnivores. Cats are felines. Tabbies are cats. Sam is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, snake(x) => ~furry(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => furry(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => ~herbivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "True"
    },
    {
        "number": 695,
        "query": "8191 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Each real number is a number. Real numbers are not imaginary. Integers are real numbers. Every natural number is an integer. Each complex number is imaginary. Every natural number is not negative. Every prime number is a natural number. Each prime number is not composite. Mersenne primes are prime numbers. Each Mersenne prime is not composite. 8191 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime_number(x) => ~composite_number(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 696,
        "query": "31 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Real numbers are numbers. Each real number is not imaginary. Integers are real numbers. Natural numbers are integers. Natural numbers are positive. Every prime number is a natural number. Prime numbers are prime. Every Mersenne prime is a prime number. Mersenne primes are not composite. Each complex number is imaginary. 31 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => ~composite_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 697,
        "query": "Sally is not bony.",
        "query_fol": "~bony(x)",
        "context": "Animals are not unicellular. Each invertebrate is an animal. Every protostome is an invertebrate. Every arthropod is a protostome. Arthropods are not bony. Each insect is an arthropod. Insects are six-legged. Lepidopterans are insects. Butterflies are lepidopterans. Each whale is bony. Painted ladies are butterflies. Sally is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 698,
        "query": "Alex is not bony.",
        "query_fol": "~bony(x)",
        "context": "Every animal is multicellular. Invertebrates are animals. Whales are bony. Protostomes are invertebrates. Each arthropod is a protostome. Each arthropod is not bony. Insects are arthropods. Insects are not eight-legged. Lepidopterans are insects. Every butterfly is a lepidopteran. Every painted lady is a butterfly. Alex is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 699,
        "query": "3 is real.",
        "query_fol": "real_number(x)",
        "context": "Every real number is a number. Each real number is real. Integers are real numbers. Natural numbers are integers. Natural numbers are positive. Every imaginary number is not real. Prime numbers are natural numbers. Every prime number is prime. Mersenne primes are prime numbers. Mersenne primes are prime. 3 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 700,
        "query": "8191 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Every real number is a number. Real numbers are not imaginary. Each integer is a real number. Natural numbers are integers. Every natural number is positive. Prime numbers are natural numbers. Every complex number is imaginary. Prime numbers are prime. Each Mersenne prime is a prime number. Mersenne primes are prime. 8191 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 701,
        "query": "Rex is bony.",
        "query_fol": "bony(x)",
        "context": "Every animal is multicellular. Each invertebrate is an animal. Every protostome is an invertebrate. Each arthropod is a protostome. Arthropods are not bony. Every insect is an arthropod. Each whale is bony. Every insect is six-legged. Each lepidopteran is an insect. Butterflies are lepidopterans. Painted ladies are butterflies. Rex is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 702,
        "query": "131071 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Real numbers are numbers. Real numbers are not imaginary. Every integer is a real number. Natural numbers are integers. Each natural number is not negative. Prime numbers are natural numbers. Prime numbers are not composite. Mersenne primes are prime numbers. Every complex number is imaginary. Every Mersenne prime is prime. 131071 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => ~negative(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 703,
        "query": "8191 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Each real number is a number. Real numbers are not imaginary. Each integer is a real number. Each natural number is an integer. Complex numbers are imaginary. Every natural number is not negative. Each prime number is a natural number. Prime numbers are prime. Each Mersenne prime is a prime number. Every Mersenne prime is prime. 8191 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 704,
        "query": "131071 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Every real number is a number. Every real number is not imaginary. Every integer is a real number. Every natural number is an integer. Every natural number is positive. Prime numbers are natural numbers. Every complex number is imaginary. Every prime number is not composite. Every Mersenne prime is a prime number. Mersenne primes are prime. 131071 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 705,
        "query": "31 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Real numbers are numbers. Each real number is not imaginary. Integers are real numbers. Each natural number is an integer. Natural numbers are positive. Every prime number is a natural number. Every prime number is not composite. Complex numbers are imaginary. Each Mersenne prime is a prime number. Each Mersenne prime is prime. 31 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 706,
        "query": "7 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Every real number is a number. Real numbers are not imaginary. Integers are real numbers. Each natural number is an integer. Each natural number is positive. Prime numbers are natural numbers. Each prime number is prime. Each Mersenne prime is a prime number. Each Mersenne prime is not composite. Complex numbers are imaginary. 7 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => ~composite(x), FOR_ALL x, complex_number(x) => imaginary_number(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 707,
        "query": "Alex is segmented.",
        "query_fol": "segmented(x)",
        "context": "Each animal is not unicellular. Every invertebrate is an animal. Protostomes are invertebrates. Every arthropod is a protostome. Each arthropod is segmented. Insects are arthropods. Insects are not eight-legged. Every nematode is not segmented. Lepidopterans are insects. Every butterfly is a lepidopteran. Painted ladies are butterflies. Alex is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => segmented(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, nematode(x) => ~segmented(x), lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 708,
        "query": "8191 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Each real number is a number. Real numbers are not imaginary. Integers are real numbers. Every natural number is an integer. Natural numbers are positive. Complex numbers are imaginary. Prime numbers are natural numbers. Each prime number is not composite. Each Mersenne prime is a prime number. Mersenne primes are prime. 8191 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 709,
        "query": "Rex is bony.",
        "query_fol": "bony(x)",
        "context": "Every animal is not unicellular. Invertebrates are animals. Each protostome is an invertebrate. Every arthropod is a protostome. Whales are bony. Arthropods are not bony. Insects are arthropods. Every insect is six-legged. Each lepidopteran is an insect. Butterflies are lepidopterans. Painted ladies are butterflies. Rex is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 710,
        "query": "Stella is segmented.",
        "query_fol": "segmented(x)",
        "context": "Every animal is not unicellular. Invertebrates are animals. Every protostome is an invertebrate. Every arthropod is a protostome. Arthropods are segmented. Each insect is an arthropod. Insects are not eight-legged. Lepidopterans are insects. Each butterfly is a lepidopteran. Every painted lady is a butterfly. Each nematode is not segmented. Stella is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => segmented(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), FOR_ALL x, nematode(x) => ~segmented(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 711,
        "query": "3 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Each real number is a number. Every real number is not imaginary. Integers are real numbers. Natural numbers are integers. Natural numbers are positive. Prime numbers are natural numbers. Prime numbers are prime. Every complex number is imaginary. Mersenne primes are prime numbers. Mersenne primes are prime. 3 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 712,
        "query": "Alex is not bony.",
        "query_fol": "~bony(x)",
        "context": "Each animal is multicellular. Every invertebrate is an animal. Whales are bony. Protostomes are invertebrates. Arthropods are protostomes. Arthropods are not bony. Every insect is an arthropod. Each insect is six-legged. Each lepidopteran is an insect. Every butterfly is a lepidopteran. Painted ladies are butterflies. Alex is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 713,
        "query": "Polly is cold-blooded.",
        "query_fol": "cold_blooded(x)",
        "context": "Each snake is cold-blooded. Each animal is multicellular. Bilaterians are animals. Each chordate is a bilaterian. Vertebrates are chordates. Mammals are vertebrates. Every mammal is not cold-blooded. Carnivores are mammals. Carnivores are carnivorous. Felines are carnivores. Every cat is a feline. Tabbies are cats. Polly is a tabby.",
        "rules_fol": "[FOR_ALL x, snake(x) => cold_blooded(x), FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => ~cold_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 714,
        "query": "Rex is cold-blooded.",
        "query_fol": "cold_blooded(x)",
        "context": "Every animal is not unicellular. Each bilaterian is an animal. Chordates are bilaterians. Every vertebrate is a chordate. Snakes are cold-blooded. Mammals are vertebrates. Mammals are not cold-blooded. Every carnivore is a mammal. Carnivores are not herbivorous. Every feline is a carnivore. Each cat is a feline. Tabbies are cats. Rex is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, snake(x) => cold_blooded(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => ~cold_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => ~herbivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 715,
        "query": "31 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Real numbers are numbers. Every complex number is imaginary. Real numbers are not imaginary. Integers are real numbers. Natural numbers are integers. Natural numbers are positive. Every prime number is a natural number. Prime numbers are prime. Mersenne primes are prime numbers. Each Mersenne prime is prime. 31 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 716,
        "query": "Alex is not cold-blooded.",
        "query_fol": "~cold_blooded(x)",
        "context": "Animals are not unicellular. Bilaterians are animals. Chordates are bilaterians. Every vertebrate is a chordate. Mammals are vertebrates. Every snake is cold-blooded. Mammals are not cold-blooded. Carnivores are mammals. Every carnivore is carnivorous. Each feline is a carnivore. Cats are felines. Every tabby is a cat. Alex is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, snake(x) => cold_blooded(x), FOR_ALL x, mammal(x) => ~cold_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "True"
    },
    {
        "number": 717,
        "query": "127 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Real numbers are numbers. Real numbers are not imaginary. Integers are real numbers. Every natural number is an integer. Every natural number is positive. Prime numbers are natural numbers. Every complex number is imaginary. Each prime number is prime. Mersenne primes are prime numbers. Mersenne primes are prime. 127 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 718,
        "query": "Polly is not small.",
        "query_fol": "~small(x)",
        "context": "Each animal is not unicellular. Invertebrates are animals. Protostomes are invertebrates. Arthropods are protostomes. Every whale is not small. Each arthropod is small. Each insect is an arthropod. Every insect is six-legged. Lepidopterans are insects. Each butterfly is a lepidopteran. Painted ladies are butterflies. Polly is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, whale(x) => ~small(x), FOR_ALL x, arthropod(x) => small(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 719,
        "query": "31 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Each real number is a number. Real numbers are not imaginary. Each complex number is imaginary. Every integer is a real number. Natural numbers are integers. Each natural number is not negative. Prime numbers are natural numbers. Prime numbers are not composite. Mersenne primes are prime numbers. Mersenne primes are prime. 31 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 720,
        "query": "Rex is bony.",
        "query_fol": "bony(x)",
        "context": "Every animal is multicellular. Invertebrates are animals. Protostomes are invertebrates. Every whale is bony. Every arthropod is a protostome. Arthropods are not bony. Every insect is an arthropod. Each insect is six-legged. Each lepidopteran is an insect. Every butterfly is a lepidopteran. Painted ladies are butterflies. Rex is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 721,
        "query": "Sam is bony.",
        "query_fol": "bony(x)",
        "context": "Every animal is not unicellular. Every invertebrate is an animal. Protostomes are invertebrates. Every arthropod is a protostome. Each whale is bony. Every arthropod is not bony. Each insect is an arthropod. Each insect is not eight-legged. Each lepidopteran is an insect. Butterflies are lepidopterans. Every painted lady is a butterfly. Sam is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 722,
        "query": "8191 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Real numbers are numbers. Each real number is not imaginary. Complex numbers are imaginary. Integers are real numbers. Natural numbers are integers. Natural numbers are not negative. Every prime number is a natural number. Prime numbers are prime. Each Mersenne prime is a prime number. Every Mersenne prime is prime. 8191 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 723,
        "query": "31 is not real.",
        "query_fol": "~real_number(x)",
        "context": "Each real number is a number. Imaginary numbers are not real. Every real number is real. Every integer is a real number. Natural numbers are integers. Every natural number is not negative. Each prime number is a natural number. Prime numbers are prime. Each Mersenne prime is a prime number. Every Mersenne prime is prime. 31 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 724,
        "query": "8191 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Real numbers are numbers. Every real number is not imaginary. Every integer is a real number. Complex numbers are imaginary. Every natural number is an integer. Natural numbers are not negative. Each prime number is a natural number. Prime numbers are prime. Mersenne primes are prime numbers. Mersenne primes are prime. 8191 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 725,
        "query": "Alex is bony.",
        "query_fol": "bony(x)",
        "context": "Every animal is multicellular. Invertebrates are animals. Every protostome is an invertebrate. Arthropods are protostomes. Every arthropod is not bony. Whales are bony. Insects are arthropods. Every insect is six-legged. Lepidopterans are insects. Butterflies are lepidopterans. Painted ladies are butterflies. Alex is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 726,
        "query": "Alex is not bony.",
        "query_fol": "~bony(x)",
        "context": "Animals are not unicellular. Invertebrates are animals. Each protostome is an invertebrate. Arthropods are protostomes. Every arthropod is not bony. Insects are arthropods. Insects are six-legged. Whales are bony. Lepidopterans are insects. Every butterfly is a lepidopteran. Painted ladies are butterflies. Alex is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 727,
        "query": "127 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Every real number is a number. Every real number is not imaginary. Every integer is a real number. Natural numbers are integers. Every natural number is positive. Prime numbers are natural numbers. Every prime number is prime. Every Mersenne prime is a prime number. Complex numbers are imaginary. Every Mersenne prime is not composite. 127 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => positive(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, mersenne_prime_number(x) => ~composite_number(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 728,
        "query": "8191 is real.",
        "query_fol": "real_number(x)",
        "context": "Real numbers are numbers. Real numbers are real. Integers are real numbers. Every natural number is an integer. Every natural number is positive. Prime numbers are natural numbers. Every prime number is prime. Imaginary numbers are not real. Mersenne primes are prime numbers. Each Mersenne prime is prime. 8191 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 729,
        "query": "Rex is not segmented.",
        "query_fol": "~segmented(x)",
        "context": "Every animal is multicellular. Invertebrates are animals. Protostomes are invertebrates. Each nematode is not segmented. Every arthropod is a protostome. Each arthropod is segmented. Insects are arthropods. Insects are not eight-legged. Lepidopterans are insects. Butterflies are lepidopterans. Each painted lady is a butterfly. Rex is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, nematode(x) => ~segmented(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => segmented(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 730,
        "query": "31 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Complex numbers are imaginary. Each real number is a number. Each real number is not imaginary. Each integer is a real number. Natural numbers are integers. Each natural number is positive. Every prime number is a natural number. Every prime number is prime. Each Mersenne prime is a prime number. Mersenne primes are prime. 31 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 731,
        "query": "8191 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Real numbers are numbers. Every real number is not imaginary. Integers are real numbers. Natural numbers are integers. Natural numbers are not negative. Every prime number is a natural number. Every prime number is not composite. Every Mersenne prime is a prime number. Each complex number is imaginary. Mersenne primes are prime. 8191 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 732,
        "query": "8191 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Every real number is a number. Real numbers are not imaginary. Each integer is a real number. Complex numbers are imaginary. Natural numbers are integers. Each natural number is positive. Every prime number is a natural number. Prime numbers are prime. Every Mersenne prime is a prime number. Mersenne primes are prime. 8191 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 733,
        "query": "31 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Each real number is a number. Real numbers are not imaginary. Integers are real numbers. Every natural number is an integer. Natural numbers are not negative. Prime numbers are natural numbers. Every complex number is imaginary. Prime numbers are not composite. Every Mersenne prime is a prime number. Each Mersenne prime is prime. 31 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 734,
        "query": "8191 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Real numbers are numbers. Real numbers are not imaginary. Every integer is a real number. Each natural number is an integer. Natural numbers are not negative. Every prime number is a natural number. Complex numbers are imaginary. Each prime number is not composite. Mersenne primes are prime numbers. Mersenne primes are prime. 8191 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 735,
        "query": "Polly is cold-blooded.",
        "query_fol": "cold_blooded(x)",
        "context": "Snakes are cold-blooded. Every animal is not unicellular. Every bilaterian is an animal. Every chordate is a bilaterian. Every vertebrate is a chordate. Mammals are vertebrates. Each mammal is not cold-blooded. Every carnivore is a mammal. Each carnivore is not herbivorous. Felines are carnivores. Every cat is a feline. Each tabby is a cat. Polly is a tabby.",
        "rules_fol": "[FOR_ALL x, snake(x) => cold_blooded(x), FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => ~cold_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => ~herbivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 736,
        "query": "Sally is not bony.",
        "query_fol": "~bony(x)",
        "context": "Each animal is not unicellular. Each invertebrate is an animal. Every protostome is an invertebrate. Arthropods are protostomes. Arthropods are not bony. Each insect is an arthropod. Each insect is six-legged. Lepidopterans are insects. Each butterfly is a lepidopteran. Whales are bony. Painted ladies are butterflies. Sally is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 737,
        "query": "31 is real.",
        "query_fol": "real_number(x)",
        "context": "Each real number is a number. Real numbers are real. Each integer is a real number. Natural numbers are integers. Natural numbers are positive. Every prime number is a natural number. Prime numbers are not composite. Mersenne primes are prime numbers. Mersenne primes are prime. Each imaginary number is not real. 31 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, imaginary_number(x) => ~real(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 738,
        "query": "8191 is not real.",
        "query_fol": "~real_number(x)",
        "context": "Real numbers are numbers. Real numbers are real. Imaginary numbers are not real. Every integer is a real number. Natural numbers are integers. Every natural number is positive. Prime numbers are natural numbers. Each prime number is prime. Mersenne primes are prime numbers. Every Mersenne prime is prime. 8191 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => positive(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime(x) => prime(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 739,
        "query": "7 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Every real number is a number. Each real number is not imaginary. Every integer is a real number. Natural numbers are integers. Every natural number is positive. Prime numbers are natural numbers. Every prime number is not composite. Mersenne primes are prime numbers. Complex numbers are imaginary. Mersenne primes are prime. 7 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => positive(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 740,
        "query": "7 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Each real number is a number. Real numbers are not imaginary. Integers are real numbers. Every natural number is an integer. Natural numbers are not negative. Prime numbers are natural numbers. Prime numbers are prime. Each Mersenne prime is a prime number. Every Mersenne prime is prime. Each complex number is imaginary. 7 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integers(x) => real_numbers(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), FOR_ALL x, complex_number(x) => imaginary_number(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 741,
        "query": "Rex is not bony.",
        "query_fol": "~bony(x)",
        "context": "Every animal is not unicellular. Each invertebrate is an animal. Every protostome is an invertebrate. Arthropods are protostomes. Each arthropod is not bony. Every insect is an arthropod. Insects are six-legged. Lepidopterans are insects. Butterflies are lepidopterans. Whales are bony. Painted ladies are butterflies. Rex is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 742,
        "query": "31 is real.",
        "query_fol": "real_number(x)",
        "context": "Each real number is a number. Every real number is real. Integers are real numbers. Every natural number is an integer. Every natural number is positive. Prime numbers are natural numbers. Each imaginary number is not real. Prime numbers are prime. Each Mersenne prime is a prime number. Each Mersenne prime is not composite. 31 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime_number(x) => ~composite_number(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 743,
        "query": "Fae is furry.",
        "query_fol": "furry(x)",
        "context": "Each animal is not unicellular. Every bilaterian is an animal. Chordates are bilaterians. Snakes are not furry. Vertebrates are chordates. Mammals are vertebrates. Mammals are furry. Carnivores are mammals. Carnivores are carnivorous. Every feline is a carnivore. Each cat is a feline. Every tabby is a cat. Fae is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, snake(x) => ~furry(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => furry(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "True"
    },
    {
        "number": 744,
        "query": "127 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Each real number is a number. Each real number is not imaginary. Integers are real numbers. Natural numbers are integers. Natural numbers are not negative. Each complex number is imaginary. Prime numbers are natural numbers. Every prime number is prime. Mersenne primes are prime numbers. Every Mersenne prime is prime. 127 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 745,
        "query": "Wren is bony.",
        "query_fol": "bony(x)",
        "context": "Every animal is multicellular. Each invertebrate is an animal. Whales are bony. Each protostome is an invertebrate. Arthropods are protostomes. Arthropods are not bony. Insects are arthropods. Each insect is six-legged. Every lepidopteran is an insect. Butterflies are lepidopterans. Painted ladies are butterflies. Wren is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 746,
        "query": "31 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Real numbers are numbers. Every real number is not imaginary. Integers are real numbers. Every natural number is an integer. Natural numbers are not negative. Prime numbers are natural numbers. Every complex number is imaginary. Prime numbers are not composite. Mersenne primes are prime numbers. Every Mersenne prime is prime. 31 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 747,
        "query": "127 is not real.",
        "query_fol": "~real_number(x)",
        "context": "Real numbers are numbers. Real numbers are real. Imaginary numbers are not real. Integers are real numbers. Natural numbers are integers. Every natural number is positive. Every prime number is a natural number. Prime numbers are prime. Each Mersenne prime is a prime number. Mersenne primes are not composite. 127 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime_number(x) => ~composite_number(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 748,
        "query": "Wren is not bony.",
        "query_fol": "~bony(x)",
        "context": "Each animal is not unicellular. Invertebrates are animals. Every protostome is an invertebrate. Arthropods are protostomes. Each arthropod is not bony. Each insect is an arthropod. Each whale is bony. Each insect is six-legged. Each lepidopteran is an insect. Butterflies are lepidopterans. Painted ladies are butterflies. Wren is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 749,
        "query": "Sally is not warm-blooded.",
        "query_fol": "~warm_blooded(x)",
        "context": "Animals are not unicellular. Each bilaterian is an animal. Chordates are bilaterians. Every vertebrate is a chordate. Every mammal is a vertebrate. Each mammal is warm-blooded. Every carnivore is a mammal. Every carnivore is not herbivorous. Each feline is a carnivore. Snakes are not warm-blooded. Each cat is a feline. Every tabby is a cat. Sally is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => warm_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => ~herbivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, snake(x) => ~warm_blooded(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 750,
        "query": "Wren is segmented.",
        "query_fol": "segmented(x)",
        "context": "Animals are multicellular. Every invertebrate is an animal. Protostomes are invertebrates. Each arthropod is a protostome. Arthropods are segmented. Insects are arthropods. Every insect is not eight-legged. Nematodes are not segmented. Every lepidopteran is an insect. Each butterfly is a lepidopteran. Painted ladies are butterflies. Wren is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => segmented(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, nematode(x) => ~segmented(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 751,
        "query": "31 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Every real number is a number. Each real number is not imaginary. Every integer is a real number. Natural numbers are integers. Every natural number is positive. Every prime number is a natural number. Each prime number is not composite. Every complex number is imaginary. Each Mersenne prime is a prime number. Every Mersenne prime is prime. 31 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => positive(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 752,
        "query": "31 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Real numbers are numbers. Real numbers are not imaginary. Integers are real numbers. Every natural number is an integer. Natural numbers are positive. Complex numbers are imaginary. Prime numbers are natural numbers. Every prime number is prime. Each Mersenne prime is a prime number. Each Mersenne prime is not composite. 31 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => ~composite(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 753,
        "query": "Fae is bony.",
        "query_fol": "bony(x)",
        "context": "Each animal is multicellular. Invertebrates are animals. Protostomes are invertebrates. Every arthropod is a protostome. Each arthropod is not bony. Insects are arthropods. Insects are six-legged. Lepidopterans are insects. Butterflies are lepidopterans. Every whale is bony. Each painted lady is a butterfly. Fae is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 754,
        "query": "7 is real.",
        "query_fol": "real_number(x)",
        "context": "Every real number is a number. Each real number is real. Integers are real numbers. Natural numbers are integers. Each natural number is not negative. Prime numbers are natural numbers. Every prime number is prime. Each imaginary number is not real. Each Mersenne prime is a prime number. Mersenne primes are not composite. 7 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime_number(x) => ~composite_number(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 755,
        "query": "127 is real.",
        "query_fol": "real_number(x)",
        "context": "Each real number is a number. Each real number is real. Integers are real numbers. Each natural number is an integer. Natural numbers are not negative. Imaginary numbers are not real. Prime numbers are natural numbers. Every prime number is not composite. Each Mersenne prime is a prime number. Each Mersenne prime is prime. 127 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 756,
        "query": "31 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Real numbers are numbers. Real numbers are not imaginary. Every integer is a real number. Each natural number is an integer. Natural numbers are positive. Prime numbers are natural numbers. Each complex number is imaginary. Prime numbers are not composite. Mersenne primes are prime numbers. Mersenne primes are prime. 31 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 757,
        "query": "Alex is not bony.",
        "query_fol": "~bony(x)",
        "context": "Animals are not unicellular. Every invertebrate is an animal. Each protostome is an invertebrate. Every arthropod is a protostome. Arthropods are not bony. Insects are arthropods. Insects are six-legged. Whales are bony. Lepidopterans are insects. Each butterfly is a lepidopteran. Painted ladies are butterflies. Alex is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 758,
        "query": "131071 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Every real number is a number. Every real number is not imaginary. Integers are real numbers. Every natural number is an integer. Each complex number is imaginary. Each natural number is not negative. Prime numbers are natural numbers. Each prime number is not composite. Mersenne primes are prime numbers. Mersenne primes are not composite. 131071 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime_number(x) => ~composite_number(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 759,
        "query": "7 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Every real number is a number. Every real number is not imaginary. Each integer is a real number. Each natural number is an integer. Natural numbers are not negative. Each prime number is a natural number. Each complex number is imaginary. Each prime number is not composite. Each Mersenne prime is a prime number. Each Mersenne prime is prime. 7 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 760,
        "query": "Stella is not furry.",
        "query_fol": "~furry(x)",
        "context": "Animals are multicellular. Bilaterians are animals. Chordates are bilaterians. Every vertebrate is a chordate. Each snake is not furry. Mammals are vertebrates. Mammals are furry. Each carnivore is a mammal. Carnivores are not herbivorous. Felines are carnivores. Cats are felines. Each tabby is a cat. Stella is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, snake(x) => ~furry(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => furry(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => ~herbivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 761,
        "query": "Polly is not bony.",
        "query_fol": "~bony(x)",
        "context": "Animals are not unicellular. Each invertebrate is an animal. Every protostome is an invertebrate. Every arthropod is a protostome. Each arthropod is not bony. Every insect is an arthropod. Insects are six-legged. Lepidopterans are insects. Each butterfly is a lepidopteran. Whales are bony. Every painted lady is a butterfly. Polly is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 762,
        "query": "127 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Real numbers are numbers. Real numbers are not imaginary. Every integer is a real number. Every natural number is an integer. Each natural number is not negative. Each prime number is a natural number. Each prime number is prime. Mersenne primes are prime numbers. Every complex number is imaginary. Every Mersenne prime is prime. 127 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 763,
        "query": "Fae is cold-blooded.",
        "query_fol": "cold_blooded(x)",
        "context": "Every animal is multicellular. Every bilaterian is an animal. Chordates are bilaterians. Each vertebrate is a chordate. Mammals are vertebrates. Mammals are not cold-blooded. Carnivores are mammals. Every carnivore is not herbivorous. Snakes are cold-blooded. Felines are carnivores. Cats are felines. Tabbies are cats. Fae is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => ~cold_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => ~herbivorous(x), FOR_ALL x, snake(x) => cold_blooded(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 764,
        "query": "3 is not real.",
        "query_fol": "~real_number(x)",
        "context": "Real numbers are numbers. Real numbers are real. Integers are real numbers. Every natural number is an integer. Natural numbers are positive. Every prime number is a natural number. Every imaginary number is not real. Prime numbers are prime. Every Mersenne prime is a prime number. Every Mersenne prime is prime. 3 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 765,
        "query": "Rex is not small.",
        "query_fol": "~small(x)",
        "context": "Whales are not small. Animals are multicellular. Invertebrates are animals. Protostomes are invertebrates. Every arthropod is a protostome. Arthropods are small. Insects are arthropods. Insects are not eight-legged. Lepidopterans are insects. Each butterfly is a lepidopteran. Painted ladies are butterflies. Rex is a painted lady.",
        "rules_fol": "[FOR_ALL x, whale(x) => ~small(x), FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => small(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 766,
        "query": "8191 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Every real number is a number. Every real number is not imaginary. Every integer is a real number. Each natural number is an integer. Natural numbers are not negative. Prime numbers are natural numbers. Every prime number is not composite. Every Mersenne prime is a prime number. Every complex number is imaginary. Mersenne primes are prime. 8191 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 767,
        "query": "Fae is furry.",
        "query_fol": "furry(x)",
        "context": "Each animal is multicellular. Every bilaterian is an animal. Each chordate is a bilaterian. Every vertebrate is a chordate. Mammals are vertebrates. Every mammal is furry. Each carnivore is a mammal. Every carnivore is carnivorous. Felines are carnivores. Cats are felines. Every snake is not furry. Tabbies are cats. Fae is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => furry(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, snake(x) => ~furry(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "True"
    },
    {
        "number": 768,
        "query": "Max is segmented.",
        "query_fol": "segmented(x)",
        "context": "Animals are multicellular. Invertebrates are animals. Protostomes are invertebrates. Each arthropod is a protostome. Nematodes are not segmented. Every arthropod is segmented. Insects are arthropods. Insects are six-legged. Lepidopterans are insects. Every butterfly is a lepidopteran. Painted ladies are butterflies. Max is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, nematode(x) => ~segmented(x), FOR_ALL x, arthropod(x) => segmented(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 769,
        "query": "31 is not real.",
        "query_fol": "~real_number(x)",
        "context": "Each real number is a number. Real numbers are real. Integers are real numbers. Each natural number is an integer. Each imaginary number is not real. Natural numbers are positive. Prime numbers are natural numbers. Each prime number is prime. Mersenne primes are prime numbers. Mersenne primes are prime. 31 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 770,
        "query": "Max is bony.",
        "query_fol": "bony(x)",
        "context": "Animals are not unicellular. Every invertebrate is an animal. Each protostome is an invertebrate. Every arthropod is a protostome. Arthropods are not bony. Every insect is an arthropod. Every insect is six-legged. Every lepidopteran is an insect. Butterflies are lepidopterans. Whales are bony. Every painted lady is a butterfly. Max is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 771,
        "query": "Wren is not bony.",
        "query_fol": "~bony(x)",
        "context": "Animals are multicellular. Each invertebrate is an animal. Each protostome is an invertebrate. Every arthropod is a protostome. Each whale is bony. Arthropods are not bony. Insects are arthropods. Each insect is six-legged. Lepidopterans are insects. Each butterfly is a lepidopteran. Painted ladies are butterflies. Wren is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), paint_lady(x)]",
        "answer": "True"
    },
    {
        "number": 772,
        "query": "Sally is furry.",
        "query_fol": "furry(x)",
        "context": "Every animal is multicellular. Each bilaterian is an animal. Chordates are bilaterians. Vertebrates are chordates. Mammals are vertebrates. Mammals are furry. Carnivores are mammals. Every carnivore is carnivorous. Each feline is a carnivore. Every cat is a feline. Each snake is not furry. Tabbies are cats. Sally is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => furry(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, snake(x) => ~furry(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "True"
    },
    {
        "number": 773,
        "query": "Wren is cold-blooded.",
        "query_fol": "cold_blooded(x)",
        "context": "Animals are not unicellular. Bilaterians are animals. Chordates are bilaterians. Every vertebrate is a chordate. Mammals are vertebrates. Every snake is cold-blooded. Mammals are not cold-blooded. Carnivores are mammals. Carnivores are not herbivorous. Felines are carnivores. Each cat is a feline. Each tabby is a cat. Wren is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, snake(x) => cold_blooded(x), FOR_ALL x, mammal(x) => ~cold_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => ~herbivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 774,
        "query": "Rex is cold-blooded.",
        "query_fol": "cold_blooded(x)",
        "context": "Each animal is multicellular. Bilaterians are animals. Chordates are bilaterians. Each snake is cold-blooded. Vertebrates are chordates. Every mammal is a vertebrate. Each mammal is not cold-blooded. Each carnivore is a mammal. Carnivores are carnivorous. Felines are carnivores. Cats are felines. Tabbies are cats. Rex is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, snake(x) => cold_blooded(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => ~cold_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 775,
        "query": "Fae is not bony.",
        "query_fol": "~bony(x)",
        "context": "Each whale is bony. Animals are not unicellular. Each invertebrate is an animal. Protostomes are invertebrates. Each arthropod is a protostome. Each arthropod is not bony. Insects are arthropods. Insects are six-legged. Each lepidopteran is an insect. Each butterfly is a lepidopteran. Painted ladies are butterflies. Fae is a painted lady.",
        "rules_fol": "[FOR_ALL x, whale(x) => bony(x), FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 776,
        "query": "Rex is not furry.",
        "query_fol": "~furry(x)",
        "context": "Animals are not unicellular. Every snake is not furry. Every bilaterian is an animal. Chordates are bilaterians. Every vertebrate is a chordate. Every mammal is a vertebrate. Each mammal is furry. Carnivores are mammals. Carnivores are not herbivorous. Felines are carnivores. Each cat is a feline. Every tabby is a cat. Rex is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, snake(x) => ~furry(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => furry(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => ~herbivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 777,
        "query": "Polly is not bony.",
        "query_fol": "~bony(x)",
        "context": "Animals are multicellular. Each invertebrate is an animal. Each protostome is an invertebrate. Every arthropod is a protostome. Arthropods are not bony. Each insect is an arthropod. Every insect is not eight-legged. Lepidopterans are insects. Each butterfly is a lepidopteran. Whales are bony. Painted ladies are butterflies. Polly is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 778,
        "query": "Rex is not small.",
        "query_fol": "~small(x)",
        "context": "Animals are not unicellular. Invertebrates are animals. Every protostome is an invertebrate. Each arthropod is a protostome. Arthropods are small. Whales are not small. Each insect is an arthropod. Insects are six-legged. Lepidopterans are insects. Each butterfly is a lepidopteran. Each painted lady is a butterfly. Rex is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => small(x), FOR_ALL x, whale(x) => ~small(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 779,
        "query": "Rex is segmented.",
        "query_fol": "segmented(x)",
        "context": "Animals are not unicellular. Invertebrates are animals. Every protostome is an invertebrate. Nematodes are not segmented. Every arthropod is a protostome. Arthropods are segmented. Insects are arthropods. Insects are not eight-legged. Every lepidopteran is an insect. Butterflies are lepidopterans. Painted ladies are butterflies. Rex is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, nematode(x) => ~segmented(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => segmented(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 780,
        "query": "31 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Complex numbers are imaginary. Real numbers are numbers. Each real number is not imaginary. Integers are real numbers. Natural numbers are integers. Every natural number is not negative. Every prime number is a natural number. Every prime number is prime. Every Mersenne prime is a prime number. Mersenne primes are not composite. 31 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => ~negative(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => ~composite(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 781,
        "query": "127 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Real numbers are numbers. Each real number is not imaginary. Complex numbers are imaginary. Every integer is a real number. Every natural number is an integer. Every natural number is positive. Every prime number is a natural number. Each prime number is prime. Mersenne primes are prime numbers. Mersenne primes are not composite. 127 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime_number(x) => ~composite_number(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 782,
        "query": "7 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Every real number is a number. Each real number is not imaginary. Integers are real numbers. Natural numbers are integers. Natural numbers are not negative. Prime numbers are natural numbers. Prime numbers are prime. Mersenne primes are prime numbers. Mersenne primes are not composite. Every complex number is imaginary. 7 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => ~composite_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 783,
        "query": "Sam is not small.",
        "query_fol": "~small(x)",
        "context": "Each animal is multicellular. Each invertebrate is an animal. Protostomes are invertebrates. Each arthropod is a protostome. Each arthropod is small. Every insect is an arthropod. Whales are not small. Insects are not eight-legged. Lepidopterans are insects. Butterflies are lepidopterans. Painted ladies are butterflies. Sam is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => small(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, whale(x) => ~small(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 784,
        "query": "Max is not small.",
        "query_fol": "~small(x)",
        "context": "Animals are multicellular. Every whale is not small. Invertebrates are animals. Protostomes are invertebrates. Every arthropod is a protostome. Arthropods are small. Every insect is an arthropod. Each insect is six-legged. Every lepidopteran is an insect. Butterflies are lepidopterans. Painted ladies are butterflies. Max is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, whale(x) => ~small(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => small(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 785,
        "query": "127 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Every real number is a number. Real numbers are not imaginary. Each integer is a real number. Every complex number is imaginary. Natural numbers are integers. Every natural number is positive. Every prime number is a natural number. Prime numbers are not composite. Each Mersenne prime is a prime number. Each Mersenne prime is prime. 127 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 786,
        "query": "Polly is furry.",
        "query_fol": "furry(x)",
        "context": "Animals are not unicellular. Bilaterians are animals. Each chordate is a bilaterian. Vertebrates are chordates. Each mammal is a vertebrate. Every mammal is furry. Carnivores are mammals. Snakes are not furry. Carnivores are carnivorous. Felines are carnivores. Cats are felines. Tabbies are cats. Polly is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => furry(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, snake(x) => ~furry(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "True"
    },
    {
        "number": 787,
        "query": "Sally is cold-blooded.",
        "query_fol": "cold_blooded(x)",
        "context": "Every animal is multicellular. Every bilaterian is an animal. Every chordate is a bilaterian. Vertebrates are chordates. Each mammal is a vertebrate. Each mammal is not cold-blooded. Each carnivore is a mammal. Every carnivore is not herbivorous. Every feline is a carnivore. Each cat is a feline. Each snake is cold-blooded. Every tabby is a cat. Sally is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => ~cold_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => ~herbivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, snake(x) => cold_blooded(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 788,
        "query": "31 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Every real number is a number. Real numbers are not imaginary. Every integer is a real number. Natural numbers are integers. Natural numbers are not negative. Complex numbers are imaginary. Every prime number is a natural number. Prime numbers are not composite. Mersenne primes are prime numbers. Every Mersenne prime is not composite. 31 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => ~composite(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 789,
        "query": "7 is not real.",
        "query_fol": "~real_number(x)",
        "context": "Real numbers are numbers. Each real number is real. Integers are real numbers. Natural numbers are integers. Natural numbers are positive. Prime numbers are natural numbers. Prime numbers are prime. Every Mersenne prime is a prime number. Imaginary numbers are not real. Mersenne primes are prime. 7 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 790,
        "query": "131071 is real.",
        "query_fol": "real_number(x)",
        "context": "Every real number is a number. Real numbers are real. Every integer is a real number. Every imaginary number is not real. Natural numbers are integers. Every natural number is not negative. Prime numbers are natural numbers. Every prime number is not composite. Every Mersenne prime is a prime number. Mersenne primes are prime. 131071 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime_number(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 791,
        "query": "8191 is not real.",
        "query_fol": "~real_number(x)",
        "context": "Each imaginary number is not real. Each real number is a number. Every real number is real. Integers are real numbers. Every natural number is an integer. Natural numbers are not negative. Each prime number is a natural number. Every prime number is prime. Each Mersenne prime is a prime number. Each Mersenne prime is not composite. 8191 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => ~composite(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 792,
        "query": "Wren is bony.",
        "query_fol": "bony(x)",
        "context": "Animals are multicellular. Every invertebrate is an animal. Protostomes are invertebrates. Whales are bony. Arthropods are protostomes. Every arthropod is not bony. Each insect is an arthropod. Insects are not eight-legged. Each lepidopteran is an insect. Butterflies are lepidopterans. Each painted lady is a butterfly. Wren is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 793,
        "query": "131071 is not real.",
        "query_fol": "~real_number(x)",
        "context": "Real numbers are numbers. Real numbers are real. Integers are real numbers. Natural numbers are integers. Natural numbers are positive. Prime numbers are natural numbers. Prime numbers are not composite. Imaginary numbers are not real. Every Mersenne prime is a prime number. Mersenne primes are not composite. 131071 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => ~composite_number(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 794,
        "query": "7 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Real numbers are numbers. Real numbers are not imaginary. Each integer is a real number. Natural numbers are integers. Complex numbers are imaginary. Natural numbers are positive. Each prime number is a natural number. Each prime number is not composite. Mersenne primes are prime numbers. Mersenne primes are prime. 7 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 795,
        "query": "31 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Each real number is a number. Every real number is not imaginary. Every integer is a real number. Each natural number is an integer. Each natural number is positive. Each prime number is a natural number. Prime numbers are not composite. Every complex number is imaginary. Mersenne primes are prime numbers. Every Mersenne prime is not composite. 31 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime_number(x) => ~composite_number(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 796,
        "query": "Sam is not cold-blooded.",
        "query_fol": "~cold_blooded(x)",
        "context": "Animals are multicellular. Snakes are cold-blooded. Each bilaterian is an animal. Chordates are bilaterians. Each vertebrate is a chordate. Mammals are vertebrates. Every mammal is not cold-blooded. Carnivores are mammals. Every carnivore is carnivorous. Felines are carnivores. Each cat is a feline. Tabbies are cats. Sam is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, snake(x) => cold_blooded(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => ~cold_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "True"
    },
    {
        "number": 797,
        "query": "31 is real.",
        "query_fol": "real_number(x)",
        "context": "Real numbers are numbers. Each imaginary number is not real. Real numbers are real. Integers are real numbers. Natural numbers are integers. Natural numbers are positive. Each prime number is a natural number. Every prime number is not composite. Mersenne primes are prime numbers. Mersenne primes are prime. 31 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 798,
        "query": "8191 is real.",
        "query_fol": "real_number(x)",
        "context": "Real numbers are numbers. Real numbers are real. Every integer is a real number. Natural numbers are integers. Every natural number is positive. Prime numbers are natural numbers. Prime numbers are prime. Imaginary numbers are not real. Mersenne primes are prime numbers. Every Mersenne prime is prime. 8191 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => positive(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 799,
        "query": "Max is segmented.",
        "query_fol": "segmented(x)",
        "context": "Animals are not unicellular. Every nematode is not segmented. Invertebrates are animals. Protostomes are invertebrates. Every arthropod is a protostome. Each arthropod is segmented. Each insect is an arthropod. Each insect is six-legged. Each lepidopteran is an insect. Each butterfly is a lepidopteran. Each painted lady is a butterfly. Max is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, nematode(x) => ~segmented(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => segmented(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 800,
        "query": "Polly is not bony.",
        "query_fol": "~bony(x)",
        "context": "Animals are multicellular. Invertebrates are animals. Every protostome is an invertebrate. Every arthropod is a protostome. Each arthropod is not bony. Each insect is an arthropod. Each insect is not eight-legged. Every lepidopteran is an insect. Each butterfly is a lepidopteran. Painted ladies are butterflies. Whales are bony. Polly is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), FOR_ALL x, whale(x) => bony(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 801,
        "query": "131071 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Complex numbers are imaginary. Each real number is a number. Real numbers are not imaginary. Every integer is a real number. Natural numbers are integers. Each natural number is positive. Each prime number is a natural number. Prime numbers are not composite. Each Mersenne prime is a prime number. Mersenne primes are prime. 131071 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 802,
        "query": "Fae is not bony.",
        "query_fol": "~bony(x)",
        "context": "Animals are multicellular. Invertebrates are animals. Each protostome is an invertebrate. Arthropods are protostomes. Every arthropod is not bony. Every insect is an arthropod. Insects are six-legged. Whales are bony. Every lepidopteran is an insect. Each butterfly is a lepidopteran. Painted ladies are butterflies. Fae is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 803,
        "query": "Max is not bony.",
        "query_fol": "~bony(x)",
        "context": "Every animal is multicellular. Each invertebrate is an animal. Each protostome is an invertebrate. Whales are bony. Each arthropod is a protostome. Every arthropod is not bony. Insects are arthropods. Each insect is six-legged. Each lepidopteran is an insect. Butterflies are lepidopterans. Each painted lady is a butterfly. Max is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 804,
        "query": "Rex is not furry.",
        "query_fol": "~furry(x)",
        "context": "Animals are multicellular. Bilaterians are animals. Chordates are bilaterians. Each vertebrate is a chordate. Mammals are vertebrates. Every mammal is furry. Each carnivore is a mammal. Carnivores are not herbivorous. Each feline is a carnivore. Every cat is a feline. Snakes are not furry. Tabbies are cats. Rex is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => furry(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => ~herbivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, snake(x) => ~furry(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 805,
        "query": "131071 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Every real number is a number. Every real number is not imaginary. Each integer is a real number. Every natural number is an integer. Every natural number is not negative. Prime numbers are natural numbers. Every prime number is not composite. Every Mersenne prime is a prime number. Every complex number is imaginary. Every Mersenne prime is prime. 131071 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 806,
        "query": "Max is not segmented.",
        "query_fol": "~segmented(x)",
        "context": "Every nematode is not segmented. Animals are multicellular. Each invertebrate is an animal. Each protostome is an invertebrate. Each arthropod is a protostome. Each arthropod is segmented. Each insect is an arthropod. Insects are six-legged. Every lepidopteran is an insect. Every butterfly is a lepidopteran. Every painted lady is a butterfly. Max is a painted lady.",
        "rules_fol": "[FOR_ALL x, nematode(x) => ~segmented(x), FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => segmented(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 807,
        "query": "8191 is not real.",
        "query_fol": "~real_number(x)",
        "context": "Real numbers are numbers. Real numbers are real. Every integer is a real number. Natural numbers are integers. Each natural number is not negative. Prime numbers are natural numbers. Prime numbers are prime. Each imaginary number is not real. Each Mersenne prime is a prime number. Each Mersenne prime is not composite. 8191 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => ~negative(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => ~composite(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 808,
        "query": "Sally is not bony.",
        "query_fol": "~bony(x)",
        "context": "Each animal is not unicellular. Invertebrates are animals. Protostomes are invertebrates. Arthropods are protostomes. Arthropods are not bony. Every insect is an arthropod. Every insect is six-legged. Lepidopterans are insects. Every butterfly is a lepidopteran. Whales are bony. Each painted lady is a butterfly. Sally is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 809,
        "query": "8191 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Real numbers are numbers. Every complex number is imaginary. Every real number is not imaginary. Integers are real numbers. Natural numbers are integers. Natural numbers are positive. Prime numbers are natural numbers. Each prime number is not composite. Every Mersenne prime is a prime number. Each Mersenne prime is not composite. 8191 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime_number(x) => ~composite_number(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 810,
        "query": "Max is not bony.",
        "query_fol": "~bony(x)",
        "context": "Animals are multicellular. Invertebrates are animals. Every protostome is an invertebrate. Each arthropod is a protostome. Each whale is bony. Each arthropod is not bony. Insects are arthropods. Insects are six-legged. Each lepidopteran is an insect. Every butterfly is a lepidopteran. Painted ladies are butterflies. Max is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 811,
        "query": "Rex is not bony.",
        "query_fol": "~bony(x)",
        "context": "Animals are multicellular. Every invertebrate is an animal. Every protostome is an invertebrate. Arthropods are protostomes. Each whale is bony. Each arthropod is not bony. Insects are arthropods. Insects are not eight-legged. Every lepidopteran is an insect. Butterflies are lepidopterans. Painted ladies are butterflies. Rex is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 812,
        "query": "Wren is bony.",
        "query_fol": "bony(x)",
        "context": "Every animal is multicellular. Each invertebrate is an animal. Every protostome is an invertebrate. Arthropods are protostomes. Each arthropod is not bony. Each insect is an arthropod. Insects are six-legged. Lepidopterans are insects. Each butterfly is a lepidopteran. Painted ladies are butterflies. Whales are bony. Wren is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), FOR_ALL x, whale(x) => bony(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 813,
        "query": "Sally is not bony.",
        "query_fol": "~bony(x)",
        "context": "Animals are not unicellular. Every whale is bony. Each invertebrate is an animal. Protostomes are invertebrates. Arthropods are protostomes. Arthropods are not bony. Insects are arthropods. Insects are six-legged. Lepidopterans are insects. Every butterfly is a lepidopteran. Painted ladies are butterflies. Sally is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 814,
        "query": "8191 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Every real number is a number. Real numbers are not imaginary. Integers are real numbers. Natural numbers are integers. Natural numbers are not negative. Each prime number is a natural number. Every prime number is prime. Each Mersenne prime is a prime number. Mersenne primes are prime. Complex numbers are imaginary. 8191 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), FOR_ALL x, complex_number(x) => imaginary_number(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 815,
        "query": "3 is real.",
        "query_fol": "real_number(x)",
        "context": "Every imaginary number is not real. Real numbers are numbers. Each real number is real. Integers are real numbers. Natural numbers are integers. Every natural number is not negative. Prime numbers are natural numbers. Prime numbers are prime. Mersenne primes are prime numbers. Every Mersenne prime is prime. 3 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 816,
        "query": "Stella is not furry.",
        "query_fol": "~furry(x)",
        "context": "Every animal is multicellular. Bilaterians are animals. Every chordate is a bilaterian. Vertebrates are chordates. Each mammal is a vertebrate. Mammals are furry. Every snake is not furry. Carnivores are mammals. Every carnivore is carnivorous. Felines are carnivores. Cats are felines. Tabbies are cats. Stella is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => furry(x), FOR_ALL x, snake(x) => ~furry(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 817,
        "query": "131071 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Every complex number is imaginary. Each real number is a number. Each real number is not imaginary. Integers are real numbers. Natural numbers are integers. Every natural number is positive. Prime numbers are natural numbers. Prime numbers are not composite. Mersenne primes are prime numbers. Every Mersenne prime is prime. 131071 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 818,
        "query": "31 is imaginary.",
        "query_fol": "imaginary(x)",
        "context": "Each real number is a number. Each real number is not imaginary. Integers are real numbers. Natural numbers are integers. Natural numbers are not negative. Prime numbers are natural numbers. Prime numbers are prime. Mersenne primes are prime numbers. Every Mersenne prime is not composite. Each complex number is imaginary. 31 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => ~composite(x), FOR_ALL x, complex_number(x) => imaginary_number(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 819,
        "query": "Polly is not small.",
        "query_fol": "~small(x)",
        "context": "Animals are not unicellular. Each whale is not small. Every invertebrate is an animal. Protostomes are invertebrates. Every arthropod is a protostome. Each arthropod is small. Insects are arthropods. Every insect is not eight-legged. Every lepidopteran is an insect. Butterflies are lepidopterans. Painted ladies are butterflies. Polly is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, whale(x) => ~small(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => small(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 820,
        "query": "31 is not real.",
        "query_fol": "~real_number(x)",
        "context": "Each real number is a number. Every real number is real. Integers are real numbers. Every natural number is an integer. Every natural number is positive. Imaginary numbers are not real. Prime numbers are natural numbers. Each prime number is prime. Each Mersenne prime is a prime number. Every Mersenne prime is prime. 31 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 821,
        "query": "8191 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Complex numbers are imaginary. Real numbers are numbers. Real numbers are not imaginary. Integers are real numbers. Natural numbers are integers. Each natural number is positive. Prime numbers are natural numbers. Prime numbers are not composite. Mersenne primes are prime numbers. Every Mersenne prime is prime. 8191 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 822,
        "query": "Alex is not small.",
        "query_fol": "~small(x)",
        "context": "Every animal is multicellular. Every invertebrate is an animal. Whales are not small. Protostomes are invertebrates. Arthropods are protostomes. Each arthropod is small. Insects are arthropods. Every insect is six-legged. Every lepidopteran is an insect. Every butterfly is a lepidopteran. Each painted lady is a butterfly. Alex is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, whale(x) => ~small(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => small(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 823,
        "query": "Sally is cold-blooded.",
        "query_fol": "cold_blooded(x)",
        "context": "Animals are multicellular. Every snake is cold-blooded. Bilaterians are animals. Each chordate is a bilaterian. Every vertebrate is a chordate. Every mammal is a vertebrate. Each mammal is not cold-blooded. Carnivores are mammals. Carnivores are not herbivorous. Felines are carnivores. Every cat is a feline. Each tabby is a cat. Sally is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, snake(x) => cold_blooded(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => ~cold_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => ~herbivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 824,
        "query": "Fae is not cold-blooded.",
        "query_fol": "~cold_blooded(x)",
        "context": "Animals are not unicellular. Every bilaterian is an animal. Each chordate is a bilaterian. Snakes are cold-blooded. Vertebrates are chordates. Mammals are vertebrates. Mammals are not cold-blooded. Each carnivore is a mammal. Carnivores are not herbivorous. Each feline is a carnivore. Each cat is a feline. Each tabby is a cat. Fae is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, snake(x) => cold_blooded(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => ~cold_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => ~herbivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "True"
    },
    {
        "number": 825,
        "query": "Sally is not segmented.",
        "query_fol": "~segmented(x)",
        "context": "Each animal is not unicellular. Each invertebrate is an animal. Protostomes are invertebrates. Every arthropod is a protostome. Arthropods are segmented. Insects are arthropods. Insects are not eight-legged. Lepidopterans are insects. Butterflies are lepidopterans. Every nematode is not segmented. Each painted lady is a butterfly. Sally is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => segmented(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, nematode(x) => ~segmented(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 826,
        "query": "7 is real.",
        "query_fol": "real_number(x)",
        "context": "Every real number is a number. Every real number is real. Every integer is a real number. Every natural number is an integer. Natural numbers are not negative. Every prime number is a natural number. Every imaginary number is not real. Every prime number is prime. Mersenne primes are prime numbers. Each Mersenne prime is prime. 7 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 827,
        "query": "Alex is segmented.",
        "query_fol": "segmented(x)",
        "context": "Each animal is multicellular. Each invertebrate is an animal. Every protostome is an invertebrate. Every arthropod is a protostome. Arthropods are segmented. Nematodes are not segmented. Each insect is an arthropod. Insects are not eight-legged. Every lepidopteran is an insect. Butterflies are lepidopterans. Painted ladies are butterflies. Alex is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => segmented(x), FOR_ALL x, nematode(x) => ~segmented(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 828,
        "query": "Stella is not small.",
        "query_fol": "~small(x)",
        "context": "Every animal is multicellular. Each invertebrate is an animal. Each protostome is an invertebrate. Arthropods are protostomes. Arthropods are small. Each whale is not small. Insects are arthropods. Every insect is six-legged. Every lepidopteran is an insect. Butterflies are lepidopterans. Painted ladies are butterflies. Stella is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => small(x), FOR_ALL x, whale(x) => ~small(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 829,
        "query": "Sally is not segmented.",
        "query_fol": "~segmented(x)",
        "context": "Each animal is not unicellular. Invertebrates are animals. Protostomes are invertebrates. Each nematode is not segmented. Arthropods are protostomes. Arthropods are segmented. Insects are arthropods. Each insect is not eight-legged. Every lepidopteran is an insect. Every butterfly is a lepidopteran. Painted ladies are butterflies. Sally is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, nematode(x) => ~segmented(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => segmented(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 830,
        "query": "3 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Every real number is a number. Each real number is not imaginary. Integers are real numbers. Each complex number is imaginary. Each natural number is an integer. Natural numbers are not negative. Prime numbers are natural numbers. Prime numbers are not composite. Mersenne primes are prime numbers. Mersenne primes are not composite. 3 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => ~negative(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime_number(x) => ~composite_number(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 831,
        "query": "Max is segmented.",
        "query_fol": "segmented(x)",
        "context": "Every animal is not unicellular. Invertebrates are animals. Every protostome is an invertebrate. Arthropods are protostomes. Arthropods are segmented. Every insect is an arthropod. Insects are six-legged. Nematodes are not segmented. Every lepidopteran is an insect. Each butterfly is a lepidopteran. Every painted lady is a butterfly. Max is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => segmented(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, nematode(x) => ~segmented(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 832,
        "query": "31 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Every real number is a number. Real numbers are not imaginary. Every integer is a real number. Complex numbers are imaginary. Natural numbers are integers. Each natural number is not negative. Prime numbers are natural numbers. Prime numbers are prime. Mersenne primes are prime numbers. Every Mersenne prime is prime. 31 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 833,
        "query": "Wren is not furry.",
        "query_fol": "~furry(x)",
        "context": "Every animal is multicellular. Every bilaterian is an animal. Chordates are bilaterians. Every vertebrate is a chordate. Mammals are vertebrates. Mammals are furry. Carnivores are mammals. Every carnivore is carnivorous. Felines are carnivores. Each snake is not furry. Each cat is a feline. Each tabby is a cat. Wren is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => furry(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, snake(x) => ~furry(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 834,
        "query": "Alex is not bony.",
        "query_fol": "~bony(x)",
        "context": "Animals are not unicellular. Invertebrates are animals. Protostomes are invertebrates. Arthropods are protostomes. Arthropods are not bony. Insects are arthropods. Each insect is six-legged. Each lepidopteran is an insect. Each butterfly is a lepidopteran. Every painted lady is a butterfly. Whales are bony. Alex is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), FOR_ALL x, whale(x) => bony(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 835,
        "query": "3 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Every complex number is imaginary. Each real number is a number. Real numbers are not imaginary. Integers are real numbers. Every natural number is an integer. Every natural number is not negative. Prime numbers are natural numbers. Prime numbers are prime. Each Mersenne prime is a prime number. Mersenne primes are prime. 3 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 836,
        "query": "Max is not small.",
        "query_fol": "~small(x)",
        "context": "Animals are multicellular. Each invertebrate is an animal. Every protostome is an invertebrate. Arthropods are protostomes. Every arthropod is small. Insects are arthropods. Insects are six-legged. Lepidopterans are insects. Butterflies are lepidopterans. Each whale is not small. Painted ladies are butterflies. Max is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => small(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, whale(x) => ~small(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 837,
        "query": "Alex is not segmented.",
        "query_fol": "~segmented(x)",
        "context": "Each animal is not unicellular. Each invertebrate is an animal. Protostomes are invertebrates. Arthropods are protostomes. Each arthropod is segmented. Insects are arthropods. Each insect is not eight-legged. Nematodes are not segmented. Lepidopterans are insects. Each butterfly is a lepidopteran. Painted ladies are butterflies. Alex is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => segmented(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, nematode(x) => ~segmented(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 838,
        "query": "127 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Every real number is a number. Real numbers are not imaginary. Integers are real numbers. Complex numbers are imaginary. Every natural number is an integer. Every natural number is not negative. Every prime number is a natural number. Each prime number is prime. Mersenne primes are prime numbers. Mersenne primes are prime. 127 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 839,
        "query": "Sally is furry.",
        "query_fol": "furry(x)",
        "context": "Each animal is not unicellular. Snakes are not furry. Bilaterians are animals. Chordates are bilaterians. Every vertebrate is a chordate. Every mammal is a vertebrate. Mammals are furry. Carnivores are mammals. Carnivores are carnivorous. Every feline is a carnivore. Each cat is a feline. Every tabby is a cat. Sally is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, snake(x) => ~furry(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => furry(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "True"
    },
    {
        "number": 840,
        "query": "7 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Real numbers are numbers. Each real number is not imaginary. Complex numbers are imaginary. Each integer is a real number. Every natural number is an integer. Each natural number is not negative. Prime numbers are natural numbers. Every prime number is prime. Mersenne primes are prime numbers. Mersenne primes are prime. 7 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 841,
        "query": "7 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Each real number is a number. Real numbers are not imaginary. Each complex number is imaginary. Integers are real numbers. Natural numbers are integers. Natural numbers are not negative. Prime numbers are natural numbers. Every prime number is prime. Mersenne primes are prime numbers. Mersenne primes are not composite. 7 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => ~composite(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 842,
        "query": "Stella is cold-blooded.",
        "query_fol": "cold_blooded(x)",
        "context": "Each animal is multicellular. Bilaterians are animals. Snakes are cold-blooded. Chordates are bilaterians. Every vertebrate is a chordate. Mammals are vertebrates. Mammals are not cold-blooded. Every carnivore is a mammal. Carnivores are carnivorous. Felines are carnivores. Each cat is a feline. Every tabby is a cat. Stella is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, snake(x) => cold_blooded(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => ~cold_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 843,
        "query": "Fae is furry.",
        "query_fol": "furry(x)",
        "context": "Animals are multicellular. Each bilaterian is an animal. Snakes are not furry. Chordates are bilaterians. Every vertebrate is a chordate. Every mammal is a vertebrate. Each mammal is furry. Carnivores are mammals. Carnivores are carnivorous. Each feline is a carnivore. Each cat is a feline. Each tabby is a cat. Fae is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, snake(x) => ~furry(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => furry(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "True"
    },
    {
        "number": 844,
        "query": "3 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Each complex number is imaginary. Real numbers are numbers. Every real number is not imaginary. Every integer is a real number. Natural numbers are integers. Natural numbers are positive. Prime numbers are natural numbers. Each prime number is prime. Mersenne primes are prime numbers. Mersenne primes are not composite. 3 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => positive(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => ~composite(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 845,
        "query": "3 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Every real number is a number. Real numbers are not imaginary. Integers are real numbers. Every natural number is an integer. Natural numbers are positive. Prime numbers are natural numbers. Every prime number is not composite. Mersenne primes are prime numbers. Every Mersenne prime is prime. Each complex number is imaginary. 3 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), FOR_ALL x, complex_number(x) => imaginary_number(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 846,
        "query": "31 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Real numbers are numbers. Real numbers are not imaginary. Integers are real numbers. Each natural number is an integer. Complex numbers are imaginary. Natural numbers are not negative. Each prime number is a natural number. Prime numbers are prime. Every Mersenne prime is a prime number. Every Mersenne prime is prime. 31 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 847,
        "query": "7 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Real numbers are numbers. Every real number is not imaginary. Integers are real numbers. Each natural number is an integer. Natural numbers are positive. Prime numbers are natural numbers. Prime numbers are not composite. Every Mersenne prime is a prime number. Mersenne primes are not composite. Complex numbers are imaginary. 7 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => ~composite_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 848,
        "query": "Sam is not segmented.",
        "query_fol": "~segmented(x)",
        "context": "Each animal is multicellular. Every invertebrate is an animal. Protostomes are invertebrates. Arthropods are protostomes. Every arthropod is segmented. Every nematode is not segmented. Insects are arthropods. Insects are not eight-legged. Lepidopterans are insects. Butterflies are lepidopterans. Painted ladies are butterflies. Sam is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => segmented(x), FOR_ALL x, nematode(x) => ~segmented(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 849,
        "query": "Alex is bony.",
        "query_fol": "bony(x)",
        "context": "Every animal is not unicellular. Every invertebrate is an animal. Each protostome is an invertebrate. Every arthropod is a protostome. Every arthropod is not bony. Insects are arthropods. Whales are bony. Each insect is six-legged. Lepidopterans are insects. Every butterfly is a lepidopteran. Painted ladies are butterflies. Alex is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 850,
        "query": "3 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Every real number is a number. Real numbers are not imaginary. Every complex number is imaginary. Integers are real numbers. Natural numbers are integers. Each natural number is positive. Prime numbers are natural numbers. Prime numbers are not composite. Every Mersenne prime is a prime number. Mersenne primes are not composite. 3 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => ~composite_number(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 851,
        "query": "Max is not bony.",
        "query_fol": "~bony(x)",
        "context": "Each animal is not unicellular. Invertebrates are animals. Protostomes are invertebrates. Arthropods are protostomes. Arthropods are not bony. Each insect is an arthropod. Each insect is six-legged. Lepidopterans are insects. Butterflies are lepidopterans. Every whale is bony. Each painted lady is a butterfly. Max is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 852,
        "query": "Rex is not furry.",
        "query_fol": "~furry(x)",
        "context": "Each animal is not unicellular. Each bilaterian is an animal. Chordates are bilaterians. Each vertebrate is a chordate. Every mammal is a vertebrate. Every mammal is furry. Snakes are not furry. Each carnivore is a mammal. Each carnivore is not herbivorous. Each feline is a carnivore. Every cat is a feline. Every tabby is a cat. Rex is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => furry(x), FOR_ALL x, snake(x) => ~furry(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => ~herbivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 853,
        "query": "Stella is not bony.",
        "query_fol": "~bony(x)",
        "context": "Every whale is bony. Animals are multicellular. Each invertebrate is an animal. Every protostome is an invertebrate. Every arthropod is a protostome. Every arthropod is not bony. Insects are arthropods. Insects are not eight-legged. Every lepidopteran is an insect. Every butterfly is a lepidopteran. Every painted lady is a butterfly. Stella is a painted lady.",
        "rules_fol": "[FOR_ALL x, whale(x) => bony(x), FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 854,
        "query": "Rex is not small.",
        "query_fol": "~small(x)",
        "context": "Animals are multicellular. Every whale is not small. Invertebrates are animals. Protostomes are invertebrates. Every arthropod is a protostome. Arthropods are small. Each insect is an arthropod. Insects are six-legged. Each lepidopteran is an insect. Every butterfly is a lepidopteran. Painted ladies are butterflies. Rex is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, whale(x) => ~small(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => small(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 855,
        "query": "8191 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Real numbers are numbers. Each real number is not imaginary. Integers are real numbers. Natural numbers are integers. Natural numbers are not negative. Prime numbers are natural numbers. Prime numbers are prime. Every complex number is imaginary. Mersenne primes are prime numbers. Each Mersenne prime is prime. 8191 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 856,
        "query": "8191 is real.",
        "query_fol": "real_number(x)",
        "context": "Real numbers are numbers. Each real number is real. Each integer is a real number. Natural numbers are integers. Each natural number is not negative. Every prime number is a natural number. Prime numbers are not composite. Mersenne primes are prime numbers. Mersenne primes are not composite. Every imaginary number is not real. 8191 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => ~composite(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 857,
        "query": "31 is not real.",
        "query_fol": "~real_number(x)",
        "context": "Real numbers are numbers. Every real number is real. Integers are real numbers. Every natural number is an integer. Each natural number is positive. Imaginary numbers are not real. Every prime number is a natural number. Prime numbers are not composite. Mersenne primes are prime numbers. Every Mersenne prime is prime. 31 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 858,
        "query": "Alex is cold-blooded.",
        "query_fol": "cold_blooded(x)",
        "context": "Animals are multicellular. Bilaterians are animals. Chordates are bilaterians. Every vertebrate is a chordate. Each snake is cold-blooded. Each mammal is a vertebrate. Each mammal is not cold-blooded. Each carnivore is a mammal. Carnivores are carnivorous. Each feline is a carnivore. Cats are felines. Each tabby is a cat. Alex is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, snake(x) => cold_blooded(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => ~cold_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 859,
        "query": "Fae is not bony.",
        "query_fol": "~bony(x)",
        "context": "Every animal is multicellular. Each invertebrate is an animal. Every protostome is an invertebrate. Arthropods are protostomes. Arthropods are not bony. Every insect is an arthropod. Insects are six-legged. Each lepidopteran is an insect. Each whale is bony. Every butterfly is a lepidopteran. Every painted lady is a butterfly. Fae is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 860,
        "query": "Sally is not warm-blooded.",
        "query_fol": "~warm_blooded(x)",
        "context": "Each animal is multicellular. Bilaterians are animals. Chordates are bilaterians. Vertebrates are chordates. Each mammal is a vertebrate. Each mammal is warm-blooded. Snakes are not warm-blooded. Every carnivore is a mammal. Carnivores are carnivorous. Each feline is a carnivore. Every cat is a feline. Tabbies are cats. Sally is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => warm_blooded(x), FOR_ALL x, snake(x) => ~warm_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 861,
        "query": "131071 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Complex numbers are imaginary. Every real number is a number. Every real number is not imaginary. Each integer is a real number. Every natural number is an integer. Each natural number is positive. Each prime number is a natural number. Prime numbers are prime. Mersenne primes are prime numbers. Each Mersenne prime is not composite. 131071 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => ~composite(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 862,
        "query": "7 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Complex numbers are imaginary. Real numbers are numbers. Real numbers are not imaginary. Integers are real numbers. Each natural number is an integer. Natural numbers are not negative. Every prime number is a natural number. Prime numbers are prime. Every Mersenne prime is a prime number. Each Mersenne prime is prime. 7 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 863,
        "query": "127 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Each real number is a number. Real numbers are not imaginary. Each complex number is imaginary. Every integer is a real number. Each natural number is an integer. Each natural number is positive. Each prime number is a natural number. Prime numbers are prime. Every Mersenne prime is a prime number. Mersenne primes are prime. 127 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime(x)]",
        "answer": "True"
    },
    {
        "number": 864,
        "query": "Sally is bony.",
        "query_fol": "bony(x)",
        "context": "Animals are not unicellular. Every invertebrate is an animal. Protostomes are invertebrates. Arthropods are protostomes. Arthropods are not bony. Insects are arthropods. Insects are six-legged. Lepidopterans are insects. Whales are bony. Every butterfly is a lepidopteran. Painted ladies are butterflies. Sally is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), lepidopteran(x) => insect(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 865,
        "query": "3 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Real numbers are numbers. Every real number is not imaginary. Integers are real numbers. Each natural number is an integer. Natural numbers are positive. Every complex number is imaginary. Prime numbers are natural numbers. Prime numbers are not composite. Mersenne primes are prime numbers. Every Mersenne prime is not composite. 3 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => ~composite(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 866,
        "query": "8191 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Real numbers are numbers. Every real number is not imaginary. Integers are real numbers. Every natural number is an integer. Natural numbers are positive. Prime numbers are natural numbers. Prime numbers are not composite. Mersenne primes are prime numbers. Complex numbers are imaginary. Mersenne primes are not composite. 8191 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, mersenne_prime_number(x) => ~composite(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 867,
        "query": "127 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Real numbers are numbers. Complex numbers are imaginary. Every real number is not imaginary. Each integer is a real number. Each natural number is an integer. Natural numbers are positive. Prime numbers are natural numbers. Each prime number is not composite. Each Mersenne prime is a prime number. Mersenne primes are prime. 127 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime(x)]",
        "answer": "False"
    },
    {
        "number": 868,
        "query": "Max is segmented.",
        "query_fol": "segmented(x)",
        "context": "Animals are multicellular. Every invertebrate is an animal. Each nematode is not segmented. Each protostome is an invertebrate. Every arthropod is a protostome. Each arthropod is segmented. Insects are arthropods. Every insect is not eight-legged. Every lepidopteran is an insect. Butterflies are lepidopterans. Painted ladies are butterflies. Max is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, nematode(x) => ~segmented(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => segmented(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 869,
        "query": "3 is not real.",
        "query_fol": "~real_number(x)",
        "context": "Every real number is a number. Every real number is real. Integers are real numbers. Imaginary numbers are not real. Each natural number is an integer. Each natural number is positive. Every prime number is a natural number. Prime numbers are prime. Mersenne primes are prime numbers. Mersenne primes are prime. 3 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 870,
        "query": "Stella is cold-blooded.",
        "query_fol": "cold_blooded(x)",
        "context": "Animals are not unicellular. Every bilaterian is an animal. Chordates are bilaterians. Vertebrates are chordates. Every mammal is a vertebrate. Each mammal is not cold-blooded. Every carnivore is a mammal. Each carnivore is carnivorous. Snakes are cold-blooded. Felines are carnivores. Cats are felines. Every tabby is a cat. Stella is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => ~cold_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, snake(x) => cold_blooded(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 871,
        "query": "Sally is small.",
        "query_fol": "small(x)",
        "context": "Animals are multicellular. Each invertebrate is an animal. Each protostome is an invertebrate. Each arthropod is a protostome. Arthropods are small. Insects are arthropods. Each insect is six-legged. Whales are not small. Each lepidopteran is an insect. Each butterfly is a lepidopteran. Painted ladies are butterflies. Sally is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => small(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, whale(x) => ~small(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 872,
        "query": "Alex is not warm-blooded.",
        "query_fol": "~warm_blooded(x)",
        "context": "Each animal is multicellular. Bilaterians are animals. Chordates are bilaterians. Every snake is not warm-blooded. Vertebrates are chordates. Mammals are vertebrates. Mammals are warm-blooded. Each carnivore is a mammal. Each carnivore is not herbivorous. Felines are carnivores. Cats are felines. Each tabby is a cat. Alex is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, snake(x) => ~warm_blooded(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => warm_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => ~herbivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 873,
        "query": "Rex is not small.",
        "query_fol": "~small(x)",
        "context": "Animals are not unicellular. Each invertebrate is an animal. Each protostome is an invertebrate. Arthropods are protostomes. Whales are not small. Arthropods are small. Insects are arthropods. Insects are six-legged. Every lepidopteran is an insect. Butterflies are lepidopterans. Every painted lady is a butterfly. Rex is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, whale(x) => ~small(x), FOR_ALL x, arthropod(x) => small(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 874,
        "query": "Max is not segmented.",
        "query_fol": "~segmented(x)",
        "context": "Each animal is not unicellular. Every invertebrate is an animal. Protostomes are invertebrates. Each arthropod is a protostome. Every arthropod is segmented. Insects are arthropods. Nematodes are not segmented. Every insect is six-legged. Lepidopterans are insects. Every butterfly is a lepidopteran. Each painted lady is a butterfly. Max is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => segmented(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, nematode(x) => ~segmented(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 875,
        "query": "127 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Every real number is a number. Every real number is not imaginary. Complex numbers are imaginary. Integers are real numbers. Every natural number is an integer. Each natural number is positive. Prime numbers are natural numbers. Prime numbers are prime. Every Mersenne prime is a prime number. Mersenne primes are prime. 127 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, integer(x) => real(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 876,
        "query": "Stella is furry.",
        "query_fol": "furry(x)",
        "context": "Each animal is multicellular. Bilaterians are animals. Every chordate is a bilaterian. Each vertebrate is a chordate. Each snake is not furry. Mammals are vertebrates. Mammals are furry. Every carnivore is a mammal. Every carnivore is carnivorous. Each feline is a carnivore. Cats are felines. Every tabby is a cat. Stella is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, snake(x) => ~furry(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => furry(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "True"
    },
    {
        "number": 877,
        "query": "Polly is not bony.",
        "query_fol": "~bony(x)",
        "context": "Each animal is multicellular. Every invertebrate is an animal. Each protostome is an invertebrate. Arthropods are protostomes. Arthropods are not bony. Every insect is an arthropod. Insects are six-legged. Lepidopterans are insects. Every butterfly is a lepidopteran. Whales are bony. Each painted lady is a butterfly. Polly is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 878,
        "query": "131071 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Real numbers are numbers. Real numbers are not imaginary. Each integer is a real number. Natural numbers are integers. Every natural number is positive. Complex numbers are imaginary. Every prime number is a natural number. Prime numbers are not composite. Every Mersenne prime is a prime number. Every Mersenne prime is prime. 131071 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 879,
        "query": "Wren is not warm-blooded.",
        "query_fol": "~warm_blooded(x)",
        "context": "Animals are multicellular. Bilaterians are animals. Chordates are bilaterians. Each snake is not warm-blooded. Each vertebrate is a chordate. Every mammal is a vertebrate. Mammals are warm-blooded. Carnivores are mammals. Each carnivore is carnivorous. Each feline is a carnivore. Cats are felines. Every tabby is a cat. Wren is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, snake(x) => ~warm_blooded(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => warm_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 880,
        "query": "31 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Real numbers are numbers. Each real number is not imaginary. Integers are real numbers. Every complex number is imaginary. Natural numbers are integers. Natural numbers are not negative. Prime numbers are natural numbers. Each prime number is not composite. Mersenne primes are prime numbers. Every Mersenne prime is not composite. 31 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => ~composite(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 881,
        "query": "31 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Real numbers are numbers. Each real number is not imaginary. Every integer is a real number. Each natural number is an integer. Natural numbers are positive. Each prime number is a natural number. Complex numbers are imaginary. Prime numbers are not composite. Each Mersenne prime is a prime number. Mersenne primes are not composite. 31 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => ~composite(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 882,
        "query": "131071 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Each real number is a number. Every real number is not imaginary. Integers are real numbers. Natural numbers are integers. Every natural number is positive. Every prime number is a natural number. Prime numbers are not composite. Each complex number is imaginary. Mersenne primes are prime numbers. Each Mersenne prime is not composite. 131071 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => positive(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, complex_number(x) => imaginary(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => ~composite(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 883,
        "query": "127 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Every real number is a number. Real numbers are not imaginary. Integers are real numbers. Each natural number is an integer. Every natural number is positive. Prime numbers are natural numbers. Each complex number is imaginary. Each prime number is not composite. Mersenne primes are prime numbers. Mersenne primes are not composite. 127 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => ~composite_number(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 884,
        "query": "Max is not furry.",
        "query_fol": "~furry(x)",
        "context": "Every snake is not furry. Every animal is multicellular. Bilaterians are animals. Every chordate is a bilaterian. Each vertebrate is a chordate. Each mammal is a vertebrate. Mammals are furry. Each carnivore is a mammal. Carnivores are carnivorous. Every feline is a carnivore. Cats are felines. Every tabby is a cat. Max is a tabby.",
        "rules_fol": "[FOR_ALL x, snake(x) => ~furry(x), FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => furry(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 885,
        "query": "31 is real.",
        "query_fol": "real_number(x)",
        "context": "Imaginary numbers are not real. Each real number is a number. Real numbers are real. Integers are real numbers. Natural numbers are integers. Natural numbers are not negative. Prime numbers are natural numbers. Each prime number is not composite. Each Mersenne prime is a prime number. Every Mersenne prime is prime. 31 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 886,
        "query": "3 is not real.",
        "query_fol": "~real_number(x)",
        "context": "Real numbers are numbers. Real numbers are real. Each integer is a real number. Natural numbers are integers. Natural numbers are not negative. Prime numbers are natural numbers. Imaginary numbers are not real. Every prime number is prime. Mersenne primes are prime numbers. Each Mersenne prime is prime. 3 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 887,
        "query": "7 is not real.",
        "query_fol": "~real_number(x)",
        "context": "Every real number is a number. Real numbers are real. Integers are real numbers. Every natural number is an integer. Each natural number is not negative. Prime numbers are natural numbers. Prime numbers are prime. Mersenne primes are prime numbers. Every Mersenne prime is not composite. Imaginary numbers are not real. 7 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime_number(x) => ~composite_number(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 888,
        "query": "131071 is real.",
        "query_fol": "real_number(x)",
        "context": "Real numbers are numbers. Every real number is real. Integers are real numbers. Imaginary numbers are not real. Natural numbers are integers. Each natural number is positive. Each prime number is a natural number. Prime numbers are prime. Mersenne primes are prime numbers. Mersenne primes are prime. 131071 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => positive(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 889,
        "query": "131071 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Each real number is a number. Real numbers are not imaginary. Integers are real numbers. Natural numbers are integers. Every natural number is not negative. Prime numbers are natural numbers. Complex numbers are imaginary. Every prime number is prime. Each Mersenne prime is a prime number. Mersenne primes are not composite. 131071 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => ~composite_number(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 890,
        "query": "Max is not cold-blooded.",
        "query_fol": "~cold_blooded(x)",
        "context": "Animals are multicellular. Bilaterians are animals. Each chordate is a bilaterian. Vertebrates are chordates. Each mammal is a vertebrate. Each mammal is not cold-blooded. Each carnivore is a mammal. Every carnivore is carnivorous. Every feline is a carnivore. Each cat is a feline. Each tabby is a cat. Every snake is cold-blooded. Max is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => ~cold_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), FOR_ALL x, snake(x) => cold_blooded(x), tabby(x)]",
        "answer": "True"
    },
    {
        "number": 891,
        "query": "3 is real.",
        "query_fol": "real_number(x)",
        "context": "Real numbers are numbers. Imaginary numbers are not real. Real numbers are real. Integers are real numbers. Natural numbers are integers. Each natural number is positive. Prime numbers are natural numbers. Prime numbers are prime. Mersenne primes are prime numbers. Mersenne primes are not composite. 3 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, real_number(x) => real_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => ~composite(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 892,
        "query": "Sally is warm-blooded.",
        "query_fol": "warm_blooded(x)",
        "context": "Every animal is not unicellular. Each bilaterian is an animal. Every chordate is a bilaterian. Vertebrates are chordates. Every mammal is a vertebrate. Each mammal is warm-blooded. Each carnivore is a mammal. Each carnivore is carnivorous. Snakes are not warm-blooded. Each feline is a carnivore. Cats are felines. Each tabby is a cat. Sally is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => warm_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, snake(x) => ~warm_blooded(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "True"
    },
    {
        "number": 893,
        "query": "Sam is not cold-blooded.",
        "query_fol": "~cold_blooded(x)",
        "context": "Each animal is multicellular. Bilaterians are animals. Chordates are bilaterians. Vertebrates are chordates. Mammals are vertebrates. Every mammal is not cold-blooded. Carnivores are mammals. Carnivores are carnivorous. Each snake is cold-blooded. Felines are carnivores. Each cat is a feline. Tabbies are cats. Sam is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => ~cold_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, snake(x) => cold_blooded(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "True"
    },
    {
        "number": 894,
        "query": "Fae is not bony.",
        "query_fol": "~bony(x)",
        "context": "Every animal is not unicellular. Invertebrates are animals. Every protostome is an invertebrate. Each arthropod is a protostome. Each whale is bony. Arthropods are not bony. Every insect is an arthropod. Insects are six-legged. Lepidopterans are insects. Each butterfly is a lepidopteran. Painted ladies are butterflies. Fae is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 895,
        "query": "Wren is not cold-blooded.",
        "query_fol": "~cold_blooded(x)",
        "context": "Animals are multicellular. Bilaterians are animals. Every chordate is a bilaterian. Vertebrates are chordates. Every mammal is a vertebrate. Mammals are not cold-blooded. Every carnivore is a mammal. Every carnivore is carnivorous. Felines are carnivores. Cats are felines. Snakes are cold-blooded. Tabbies are cats. Wren is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => ~cold_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, snake(x) => cold_blooded(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "True"
    },
    {
        "number": 896,
        "query": "127 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Complex numbers are imaginary. Each real number is a number. Real numbers are not imaginary. Integers are real numbers. Natural numbers are integers. Each natural number is positive. Prime numbers are natural numbers. Prime numbers are not composite. Mersenne primes are prime numbers. Mersenne primes are not composite. 127 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => ~composite(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 897,
        "query": "31 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Complex numbers are imaginary. Every real number is a number. Real numbers are not imaginary. Each integer is a real number. Natural numbers are integers. Each natural number is positive. Each prime number is a natural number. Prime numbers are prime. Each Mersenne prime is a prime number. Every Mersenne prime is not composite. 31 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => ~composite(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 898,
        "query": "Polly is not cold-blooded.",
        "query_fol": "~cold_blooded(x)",
        "context": "Each animal is multicellular. Every bilaterian is an animal. Every chordate is a bilaterian. Every vertebrate is a chordate. Snakes are cold-blooded. Mammals are vertebrates. Mammals are not cold-blooded. Each carnivore is a mammal. Carnivores are not herbivorous. Every feline is a carnivore. Cats are felines. Tabbies are cats. Polly is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, snake(x) => cold_blooded(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => ~cold_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => ~herbivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "True"
    },
    {
        "number": 899,
        "query": "8191 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Real numbers are numbers. Each real number is not imaginary. Every integer is a real number. Natural numbers are integers. Each natural number is not negative. Each prime number is a natural number. Prime numbers are prime. Complex numbers are imaginary. Mersenne primes are prime numbers. Each Mersenne prime is prime. 8191 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 900,
        "query": "Stella is small.",
        "query_fol": "small(x)",
        "context": "Animals are not unicellular. Each invertebrate is an animal. Protostomes are invertebrates. Arthropods are protostomes. Every arthropod is small. Insects are arthropods. Insects are six-legged. Every lepidopteran is an insect. Butterflies are lepidopterans. Painted ladies are butterflies. Whales are not small. Stella is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => small(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), FOR_ALL x, whale(x) => ~small(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 901,
        "query": "Sam is segmented.",
        "query_fol": "segmented(x)",
        "context": "Every animal is not unicellular. Each invertebrate is an animal. Each protostome is an invertebrate. Arthropods are protostomes. Arthropods are segmented. Every insect is an arthropod. Nematodes are not segmented. Every insect is six-legged. Every lepidopteran is an insect. Every butterfly is a lepidopteran. Each painted lady is a butterfly. Sam is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => segmented(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, nematode(x) => ~segmented(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 902,
        "query": "Wren is segmented.",
        "query_fol": "segmented(x)",
        "context": "Every animal is not unicellular. Invertebrates are animals. Protostomes are invertebrates. Arthropods are protostomes. Nematodes are not segmented. Arthropods are segmented. Every insect is an arthropod. Insects are six-legged. Each lepidopteran is an insect. Every butterfly is a lepidopteran. Painted ladies are butterflies. Wren is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, nematode(x) => ~segmented(x), FOR_ALL x, arthropod(x) => segmented(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 903,
        "query": "127 is not real.",
        "query_fol": "~real_number(x)",
        "context": "Each real number is a number. Real numbers are real. Every integer is a real number. Natural numbers are integers. Each natural number is not negative. Every prime number is a natural number. Every prime number is not composite. Mersenne primes are prime numbers. Mersenne primes are prime. Each imaginary number is not real. 127 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 904,
        "query": "127 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Real numbers are numbers. Real numbers are not imaginary. Each integer is a real number. Natural numbers are integers. Each natural number is not negative. Each prime number is a natural number. Prime numbers are prime. Each complex number is imaginary. Mersenne primes are prime numbers. Each Mersenne prime is prime. 127 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), mersenne_prime(x)]",
        "answer": "False"
    },
    {
        "number": 905,
        "query": "7 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Real numbers are numbers. Real numbers are not imaginary. Integers are real numbers. Complex numbers are imaginary. Natural numbers are integers. Every natural number is not negative. Prime numbers are natural numbers. Prime numbers are prime. Mersenne primes are prime numbers. Each Mersenne prime is not composite. 7 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => ~composite(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 906,
        "query": "7 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Each real number is a number. Real numbers are not imaginary. Each integer is a real number. Each natural number is an integer. Natural numbers are not negative. Prime numbers are natural numbers. Every prime number is prime. Mersenne primes are prime numbers. Every Mersenne prime is not composite. Every complex number is imaginary. 7 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => ~composite_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 907,
        "query": "Polly is bony.",
        "query_fol": "bony(x)",
        "context": "Animals are multicellular. Invertebrates are animals. Each protostome is an invertebrate. Arthropods are protostomes. Arthropods are not bony. Whales are bony. Every insect is an arthropod. Each insect is six-legged. Each lepidopteran is an insect. Every butterfly is a lepidopteran. Every painted lady is a butterfly. Polly is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 908,
        "query": "Wren is segmented.",
        "query_fol": "segmented(x)",
        "context": "Each animal is multicellular. Invertebrates are animals. Every protostome is an invertebrate. Each arthropod is a protostome. Nematodes are not segmented. Each arthropod is segmented. Insects are arthropods. Each insect is not eight-legged. Each lepidopteran is an insect. Butterflies are lepidopterans. Painted ladies are butterflies. Wren is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, nematode(x) => ~segmented(x), FOR_ALL x, arthropod(x) => segmented(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 909,
        "query": "Stella is not cold-blooded.",
        "query_fol": "~cold_blooded(x)",
        "context": "Animals are not unicellular. Each bilaterian is an animal. Every chordate is a bilaterian. Every vertebrate is a chordate. Every mammal is a vertebrate. Mammals are not cold-blooded. Each carnivore is a mammal. Snakes are cold-blooded. Carnivores are not herbivorous. Felines are carnivores. Every cat is a feline. Each tabby is a cat. Stella is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => ~cold_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, snake(x) => cold_blooded(x), FOR_ALL x, carnivore(x) => ~herbivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "True"
    },
    {
        "number": 910,
        "query": "Fae is segmented.",
        "query_fol": "segmented(x)",
        "context": "Every animal is multicellular. Invertebrates are animals. Protostomes are invertebrates. Arthropods are protostomes. Each arthropod is segmented. Nematodes are not segmented. Every insect is an arthropod. Insects are six-legged. Lepidopterans are insects. Every butterfly is a lepidopteran. Each painted lady is a butterfly. Fae is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => segmented(x), FOR_ALL x, nematode(x) => ~segmented(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 911,
        "query": "127 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Every real number is a number. Each real number is not imaginary. Integers are real numbers. Each natural number is an integer. Natural numbers are not negative. Every complex number is imaginary. Every prime number is a natural number. Prime numbers are not composite. Every Mersenne prime is a prime number. Mersenne primes are not composite. 127 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => ~composite_number(x), mersenne_prime(x)]",
        "answer": "True"
    },
    {
        "number": 912,
        "query": "Sam is not cold-blooded.",
        "query_fol": "~cold_blooded(x)",
        "context": "Every snake is cold-blooded. Every animal is not unicellular. Each bilaterian is an animal. Chordates are bilaterians. Vertebrates are chordates. Mammals are vertebrates. Mammals are not cold-blooded. Every carnivore is a mammal. Every carnivore is carnivorous. Each feline is a carnivore. Every cat is a feline. Tabbies are cats. Sam is a tabby.",
        "rules_fol": "[FOR_ALL x, snake(x) => cold_blooded(x), FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => ~cold_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "True"
    },
    {
        "number": 913,
        "query": "Stella is small.",
        "query_fol": "small(x)",
        "context": "Every animal is not unicellular. Every invertebrate is an animal. Protostomes are invertebrates. Arthropods are protostomes. Every arthropod is small. Insects are arthropods. Insects are not eight-legged. Lepidopterans are insects. Every butterfly is a lepidopteran. Each painted lady is a butterfly. Every whale is not small. Stella is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => small(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), FOR_ALL x, whale(x) => ~small(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 914,
        "query": "Alex is cold-blooded.",
        "query_fol": "cold_blooded(x)",
        "context": "Every animal is not unicellular. Bilaterians are animals. Chordates are bilaterians. Vertebrates are chordates. Each mammal is a vertebrate. Each mammal is not cold-blooded. Each carnivore is a mammal. Carnivores are carnivorous. Felines are carnivores. Every cat is a feline. Every tabby is a cat. Snakes are cold-blooded. Alex is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => ~cold_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), FOR_ALL x, snake(x) => cold_blooded(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 915,
        "query": "8191 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Each real number is a number. Complex numbers are imaginary. Real numbers are not imaginary. Every integer is a real number. Every natural number is an integer. Each natural number is not negative. Prime numbers are natural numbers. Every prime number is prime. Mersenne primes are prime numbers. Mersenne primes are not composite. 8191 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => ~composite(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 916,
        "query": "Stella is not bony.",
        "query_fol": "~bony(x)",
        "context": "Each animal is not unicellular. Every invertebrate is an animal. Protostomes are invertebrates. Arthropods are protostomes. Arthropods are not bony. Every whale is bony. Every insect is an arthropod. Insects are six-legged. Lepidopterans are insects. Every butterfly is a lepidopteran. Painted ladies are butterflies. Stella is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 917,
        "query": "7 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Real numbers are numbers. Real numbers are not imaginary. Each integer is a real number. Natural numbers are integers. Natural numbers are positive. Every prime number is a natural number. Prime numbers are not composite. Mersenne primes are prime numbers. Every complex number is imaginary. Every Mersenne prime is prime. 7 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 918,
        "query": "Sally is not bony.",
        "query_fol": "~bony(x)",
        "context": "Animals are multicellular. Every invertebrate is an animal. Whales are bony. Each protostome is an invertebrate. Each arthropod is a protostome. Arthropods are not bony. Every insect is an arthropod. Each insect is six-legged. Lepidopterans are insects. Each butterfly is a lepidopteran. Each painted lady is a butterfly. Sally is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 919,
        "query": "8191 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Complex numbers are imaginary. Real numbers are numbers. Real numbers are not imaginary. Each integer is a real number. Every natural number is an integer. Every natural number is positive. Every prime number is a natural number. Every prime number is prime. Mersenne primes are prime numbers. Mersenne primes are not composite. 8191 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => ~composite_number(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 920,
        "query": "8191 is imaginary.",
        "query_fol": "imaginary(x)",
        "context": "Real numbers are numbers. Real numbers are not imaginary. Every integer is a real number. Each natural number is an integer. Natural numbers are not negative. Prime numbers are natural numbers. Prime numbers are not composite. Every complex number is imaginary. Every Mersenne prime is a prime number. Each Mersenne prime is prime. 8191 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 921,
        "query": "Sally is not segmented.",
        "query_fol": "~segmented(x)",
        "context": "Animals are not unicellular. Invertebrates are animals. Every protostome is an invertebrate. Each arthropod is a protostome. Each arthropod is segmented. Insects are arthropods. Each insect is not eight-legged. Every lepidopteran is an insect. Butterflies are lepidopterans. Each painted lady is a butterfly. Each nematode is not segmented. Sally is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => segmented(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), FOR_ALL x, nematode(x) => ~segmented(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 922,
        "query": "127 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Real numbers are numbers. Real numbers are not imaginary. Integers are real numbers. Natural numbers are integers. Every natural number is positive. Every prime number is a natural number. Each complex number is imaginary. Each prime number is not composite. Each Mersenne prime is a prime number. Every Mersenne prime is not composite. 127 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => ~composite(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 923,
        "query": "131071 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Each real number is a number. Every real number is not imaginary. Integers are real numbers. Every natural number is an integer. Natural numbers are positive. Each prime number is a natural number. Each prime number is prime. Each complex number is imaginary. Mersenne primes are prime numbers. Every Mersenne prime is not composite. 131071 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => ~composite(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 924,
        "query": "Rex is furry.",
        "query_fol": "furry(x)",
        "context": "Each animal is not unicellular. Every bilaterian is an animal. Each chordate is a bilaterian. Vertebrates are chordates. Mammals are vertebrates. Mammals are furry. Each carnivore is a mammal. Each carnivore is not herbivorous. Felines are carnivores. Cats are felines. Snakes are not furry. Tabbies are cats. Rex is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => furry(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => ~herbivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, snake(x) => ~furry(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "True"
    },
    {
        "number": 925,
        "query": "Stella is small.",
        "query_fol": "small(x)",
        "context": "Each animal is multicellular. Every invertebrate is an animal. Protostomes are invertebrates. Each arthropod is a protostome. Arthropods are small. Whales are not small. Each insect is an arthropod. Insects are not eight-legged. Lepidopterans are insects. Every butterfly is a lepidopteran. Each painted lady is a butterfly. Stella is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => small(x), FOR_ALL x, whale(x) => ~small(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 926,
        "query": "Sam is not furry.",
        "query_fol": "~furry(x)",
        "context": "Each snake is not furry. Animals are not unicellular. Each bilaterian is an animal. Chordates are bilaterians. Each vertebrate is a chordate. Mammals are vertebrates. Mammals are furry. Every carnivore is a mammal. Every carnivore is carnivorous. Every feline is a carnivore. Cats are felines. Every tabby is a cat. Sam is a tabby.",
        "rules_fol": "[FOR_ALL x, snake(x) => ~furry(x), FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammals(x) => vertebrates(x), FOR_ALL x, mammal(x) => furry(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 927,
        "query": "31 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Real numbers are numbers. Real numbers are not imaginary. Integers are real numbers. Natural numbers are integers. Every natural number is not negative. Prime numbers are natural numbers. Complex numbers are imaginary. Every prime number is not composite. Each Mersenne prime is a prime number. Mersenne primes are not composite. 31 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime_number(x) => ~composite_number(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 928,
        "query": "Stella is not furry.",
        "query_fol": "~furry(x)",
        "context": "Animals are multicellular. Bilaterians are animals. Each chordate is a bilaterian. Vertebrates are chordates. Every mammal is a vertebrate. Each snake is not furry. Each mammal is furry. Every carnivore is a mammal. Carnivores are carnivorous. Felines are carnivores. Each cat is a feline. Every tabby is a cat. Stella is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, snake(x) => ~furry(x), FOR_ALL x, mammal(x) => furry(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 929,
        "query": "Polly is bony.",
        "query_fol": "bony(x)",
        "context": "Animals are multicellular. Every whale is bony. Every invertebrate is an animal. Every protostome is an invertebrate. Arthropods are protostomes. Arthropods are not bony. Insects are arthropods. Each insect is not eight-legged. Lepidopterans are insects. Butterflies are lepidopterans. Every painted lady is a butterfly. Polly is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 930,
        "query": "Sally is not bony.",
        "query_fol": "~bony(x)",
        "context": "Every animal is multicellular. Every invertebrate is an animal. Each protostome is an invertebrate. Arthropods are protostomes. Arthropods are not bony. Each insect is an arthropod. Insects are six-legged. Each lepidopteran is an insect. Each butterfly is a lepidopteran. Painted ladies are butterflies. Whales are bony. Sally is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), FOR_ALL x, whale(x) => bony(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 931,
        "query": "Sam is not cold-blooded.",
        "query_fol": "~cold_blooded(x)",
        "context": "Each animal is not unicellular. Bilaterians are animals. Chordates are bilaterians. Every vertebrate is a chordate. Every mammal is a vertebrate. Mammals are not cold-blooded. Snakes are cold-blooded. Every carnivore is a mammal. Carnivores are not herbivorous. Each feline is a carnivore. Cats are felines. Tabbies are cats. Sam is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => ~cold_blooded(x), FOR_ALL x, snake(x) => cold_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => ~herbivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "True"
    },
    {
        "number": 932,
        "query": "3 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Each real number is a number. Real numbers are not imaginary. Every integer is a real number. Natural numbers are integers. Each natural number is positive. Each complex number is imaginary. Prime numbers are natural numbers. Prime numbers are prime. Each Mersenne prime is a prime number. Mersenne primes are not composite. 3 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => positive(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => ~composite(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 933,
        "query": "7 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Every real number is a number. Real numbers are not imaginary. Every integer is a real number. Natural numbers are integers. Complex numbers are imaginary. Every natural number is not negative. Each prime number is a natural number. Prime numbers are not composite. Mersenne primes are prime numbers. Mersenne primes are not composite. 7 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime_number(x) => ~composite_number(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 934,
        "query": "Fae is not cold-blooded.",
        "query_fol": "~cold_blooded(x)",
        "context": "Animals are multicellular. Bilaterians are animals. Chordates are bilaterians. Each vertebrate is a chordate. Each mammal is a vertebrate. Mammals are not cold-blooded. Carnivores are mammals. Each carnivore is carnivorous. Felines are carnivores. Cats are felines. Every tabby is a cat. Every snake is cold-blooded. Fae is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => ~cold_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), FOR_ALL x, snake(x) => cold_blooded(x), tabby(x)]",
        "answer": "True"
    },
    {
        "number": 935,
        "query": "Alex is not furry.",
        "query_fol": "~furry(x)",
        "context": "Each animal is multicellular. Bilaterians are animals. Snakes are not furry. Chordates are bilaterians. Vertebrates are chordates. Every mammal is a vertebrate. Every mammal is furry. Carnivores are mammals. Every carnivore is not herbivorous. Every feline is a carnivore. Each cat is a feline. Tabbies are cats. Alex is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, snake(x) => ~furry(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => furry(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => ~herbivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabbies(x) => cat(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 936,
        "query": "3 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Each real number is a number. Each real number is not imaginary. Each integer is a real number. Each complex number is imaginary. Each natural number is an integer. Every natural number is positive. Each prime number is a natural number. Prime numbers are not composite. Mersenne primes are prime numbers. Mersenne primes are not composite. 3 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime_number(x) => ~composite_number(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 937,
        "query": "7 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Real numbers are numbers. Every real number is not imaginary. Each integer is a real number. Natural numbers are integers. Every natural number is not negative. Every prime number is a natural number. Every complex number is imaginary. Each prime number is prime. Mersenne primes are prime numbers. Mersenne primes are not composite. 7 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => ~composite(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 938,
        "query": "Rex is bony.",
        "query_fol": "bony(x)",
        "context": "Every animal is multicellular. Invertebrates are animals. Protostomes are invertebrates. Whales are bony. Each arthropod is a protostome. Each arthropod is not bony. Every insect is an arthropod. Each insect is six-legged. Lepidopterans are insects. Every butterfly is a lepidopteran. Painted ladies are butterflies. Rex is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 939,
        "query": "Sally is segmented.",
        "query_fol": "segmented(x)",
        "context": "Every animal is not unicellular. Invertebrates are animals. Each protostome is an invertebrate. Arthropods are protostomes. Arthropods are segmented. Insects are arthropods. Insects are not eight-legged. Lepidopterans are insects. Butterflies are lepidopterans. Each painted lady is a butterfly. Nematodes are not segmented. Sally is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => segmented(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), FOR_ALL x, nematode(x) => ~segmented(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 940,
        "query": "8191 is not real.",
        "query_fol": "~real_number(x)",
        "context": "Every real number is a number. Real numbers are real. Integers are real numbers. Natural numbers are integers. Each natural number is positive. Prime numbers are natural numbers. Every prime number is not composite. Each Mersenne prime is a prime number. Every imaginary number is not real. Every Mersenne prime is prime. 8191 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => positive(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 941,
        "query": "Rex is small.",
        "query_fol": "small(x)",
        "context": "Whales are not small. Every animal is not unicellular. Invertebrates are animals. Each protostome is an invertebrate. Every arthropod is a protostome. Every arthropod is small. Every insect is an arthropod. Each insect is not eight-legged. Every lepidopteran is an insect. Every butterfly is a lepidopteran. Each painted lady is a butterfly. Rex is a painted lady.",
        "rules_fol": "[FOR_ALL x, whale(x) => ~small(x), FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => small(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 942,
        "query": "3 is not real.",
        "query_fol": "~real_number(x)",
        "context": "Every real number is a number. Real numbers are real. Every integer is a real number. Every natural number is an integer. Natural numbers are positive. Each prime number is a natural number. Prime numbers are not composite. Mersenne primes are prime numbers. Each imaginary number is not real. Each Mersenne prime is prime. 3 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 943,
        "query": "Fae is not bony.",
        "query_fol": "~bony(x)",
        "context": "Animals are multicellular. Invertebrates are animals. Each whale is bony. Protostomes are invertebrates. Arthropods are protostomes. Each arthropod is not bony. Insects are arthropods. Insects are six-legged. Each lepidopteran is an insect. Butterflies are lepidopterans. Each painted lady is a butterfly. Fae is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 944,
        "query": "Sam is segmented.",
        "query_fol": "segmented(x)",
        "context": "Animals are not unicellular. Each invertebrate is an animal. Nematodes are not segmented. Each protostome is an invertebrate. Arthropods are protostomes. Arthropods are segmented. Each insect is an arthropod. Insects are six-legged. Each lepidopteran is an insect. Every butterfly is a lepidopteran. Painted ladies are butterflies. Sam is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, nematode(x) => ~segmented(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => segmented(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 945,
        "query": "Max is bony.",
        "query_fol": "bony(x)",
        "context": "Animals are not unicellular. Invertebrates are animals. Every protostome is an invertebrate. Whales are bony. Every arthropod is a protostome. Arthropods are not bony. Insects are arthropods. Insects are not eight-legged. Every lepidopteran is an insect. Each butterfly is a lepidopteran. Painted ladies are butterflies. Max is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 946,
        "query": "Alex is not cold-blooded.",
        "query_fol": "~cold_blooded(x)",
        "context": "Animals are multicellular. Every bilaterian is an animal. Each chordate is a bilaterian. Every vertebrate is a chordate. Every mammal is a vertebrate. Each snake is cold-blooded. Each mammal is not cold-blooded. Every carnivore is a mammal. Every carnivore is carnivorous. Every feline is a carnivore. Each cat is a feline. Tabbies are cats. Alex is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, snake(x) => cold_blooded(x), FOR_ALL x, mammal(x) => ~cold_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "True"
    },
    {
        "number": 947,
        "query": "Sally is not cold-blooded.",
        "query_fol": "~cold_blooded(x)",
        "context": "Animals are not unicellular. Bilaterians are animals. Chordates are bilaterians. Vertebrates are chordates. Every mammal is a vertebrate. Each mammal is not cold-blooded. Carnivores are mammals. Each carnivore is carnivorous. Felines are carnivores. Cats are felines. Snakes are cold-blooded. Every tabby is a cat. Sally is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => ~cold_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, snake(x) => cold_blooded(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "True"
    },
    {
        "number": 948,
        "query": "127 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Real numbers are numbers. Real numbers are not imaginary. Integers are real numbers. Natural numbers are integers. Every natural number is positive. Prime numbers are natural numbers. Every prime number is not composite. Complex numbers are imaginary. Mersenne primes are prime numbers. Every Mersenne prime is prime. 127 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => positive(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 949,
        "query": "Polly is small.",
        "query_fol": "small(x)",
        "context": "Whales are not small. Each animal is not unicellular. Invertebrates are animals. Each protostome is an invertebrate. Arthropods are protostomes. Each arthropod is small. Insects are arthropods. Each insect is six-legged. Each lepidopteran is an insect. Every butterfly is a lepidopteran. Each painted lady is a butterfly. Polly is a painted lady.",
        "rules_fol": "[FOR_ALL x, whale(x) => ~small(x), FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => small(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 950,
        "query": "8191 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Each real number is a number. Real numbers are not imaginary. Every integer is a real number. Each natural number is an integer. Natural numbers are positive. Each prime number is a natural number. Every prime number is not composite. Each Mersenne prime is a prime number. Mersenne primes are prime. Complex numbers are imaginary. 8191 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 951,
        "query": "3 is real.",
        "query_fol": "real_number(x)",
        "context": "Real numbers are numbers. Every real number is real. Every integer is a real number. Every natural number is an integer. Imaginary numbers are not real. Natural numbers are positive. Prime numbers are natural numbers. Prime numbers are prime. Each Mersenne prime is a prime number. Mersenne primes are not composite. 3 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => ~composite_number(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 952,
        "query": "Rex is segmented.",
        "query_fol": "segmented(x)",
        "context": "Animals are not unicellular. Invertebrates are animals. Each protostome is an invertebrate. Each arthropod is a protostome. Each arthropod is segmented. Insects are arthropods. Insects are six-legged. Nematodes are not segmented. Each lepidopteran is an insect. Butterflies are lepidopterans. Painted ladies are butterflies. Rex is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => segmented(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, nematode(x) => ~segmented(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 953,
        "query": "Max is cold-blooded.",
        "query_fol": "cold_blooded(x)",
        "context": "Every animal is multicellular. Bilaterians are animals. Chordates are bilaterians. Vertebrates are chordates. Mammals are vertebrates. Mammals are not cold-blooded. Carnivores are mammals. Each carnivore is not herbivorous. Each feline is a carnivore. Every snake is cold-blooded. Every cat is a feline. Every tabby is a cat. Max is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => ~cold_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => ~herbivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, snake(x) => cold_blooded(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 954,
        "query": "131071 is real.",
        "query_fol": "real_number(x)",
        "context": "Each real number is a number. Each real number is real. Integers are real numbers. Imaginary numbers are not real. Natural numbers are integers. Natural numbers are not negative. Every prime number is a natural number. Prime numbers are not composite. Mersenne primes are prime numbers. Mersenne primes are prime. 131071 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 955,
        "query": "31 is real.",
        "query_fol": "real_number(x)",
        "context": "Real numbers are numbers. Every real number is real. Integers are real numbers. Natural numbers are integers. Every imaginary number is not real. Each natural number is not negative. Prime numbers are natural numbers. Each prime number is not composite. Each Mersenne prime is a prime number. Mersenne primes are prime. 31 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 956,
        "query": "127 is not real.",
        "query_fol": "~real_number(x)",
        "context": "Imaginary numbers are not real. Real numbers are numbers. Every real number is real. Integers are real numbers. Natural numbers are integers. Natural numbers are not negative. Prime numbers are natural numbers. Prime numbers are prime. Mersenne primes are prime numbers. Mersenne primes are not composite. 127 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime_number(x) => ~composite_number(x), mersenne_prime(x)]",
        "answer": "False"
    },
    {
        "number": 957,
        "query": "Polly is cold-blooded.",
        "query_fol": "cold_blooded(x)",
        "context": "Every animal is multicellular. Each bilaterian is an animal. Snakes are cold-blooded. Each chordate is a bilaterian. Vertebrates are chordates. Mammals are vertebrates. Mammals are not cold-blooded. Carnivores are mammals. Every carnivore is carnivorous. Every feline is a carnivore. Every cat is a feline. Tabbies are cats. Polly is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, snake(x) => cold_blooded(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => ~cold_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabbie(x) => cat(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 958,
        "query": "3 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Real numbers are numbers. Real numbers are not imaginary. Integers are real numbers. Every natural number is an integer. Natural numbers are not negative. Each prime number is a natural number. Each complex number is imaginary. Every prime number is not composite. Mersenne primes are prime numbers. Mersenne primes are prime. 3 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 959,
        "query": "131071 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Real numbers are numbers. Real numbers are not imaginary. Integers are real numbers. Natural numbers are integers. Every complex number is imaginary. Each natural number is positive. Each prime number is a natural number. Every prime number is prime. Mersenne primes are prime numbers. Each Mersenne prime is not composite. 131071 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, natural_number(x) => positive(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => ~composite(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 960,
        "query": "Rex is not segmented.",
        "query_fol": "~segmented(x)",
        "context": "Animals are multicellular. Each invertebrate is an animal. Protostomes are invertebrates. Each nematode is not segmented. Arthropods are protostomes. Every arthropod is segmented. Insects are arthropods. Insects are six-legged. Every lepidopteran is an insect. Butterflies are lepidopterans. Painted ladies are butterflies. Rex is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, nematode(x) => ~segmented(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => segmented(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 961,
        "query": "Rex is warm-blooded.",
        "query_fol": "warm_blooded(x)",
        "context": "Animals are not unicellular. Snakes are not warm-blooded. Bilaterians are animals. Chordates are bilaterians. Each vertebrate is a chordate. Mammals are vertebrates. Mammals are warm-blooded. Each carnivore is a mammal. Carnivores are carnivorous. Felines are carnivores. Every cat is a feline. Each tabby is a cat. Rex is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, snake(x) => ~warm_blooded(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => warm_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "True"
    },
    {
        "number": 962,
        "query": "8191 is not real.",
        "query_fol": "~real_number(x)",
        "context": "Real numbers are numbers. Each imaginary number is not real. Real numbers are real. Every integer is a real number. Natural numbers are integers. Every natural number is not negative. Every prime number is a natural number. Prime numbers are prime. Each Mersenne prime is a prime number. Mersenne primes are prime. 8191 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => ~negative(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 963,
        "query": "127 is not real.",
        "query_fol": "~real_number(x)",
        "context": "Every real number is a number. Every real number is real. Integers are real numbers. Every natural number is an integer. Every natural number is positive. Each prime number is a natural number. Every prime number is prime. Every imaginary number is not real. Every Mersenne prime is a prime number. Every Mersenne prime is prime. 127 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime(x)]",
        "answer": "False"
    },
    {
        "number": 964,
        "query": "Fae is small.",
        "query_fol": "small(x)",
        "context": "Animals are not unicellular. Invertebrates are animals. Protostomes are invertebrates. Each arthropod is a protostome. Each arthropod is small. Each insect is an arthropod. Insects are six-legged. Lepidopterans are insects. Each butterfly is a lepidopteran. Whales are not small. Every painted lady is a butterfly. Fae is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => small(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, whale(x) => ~small(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 965,
        "query": "Max is furry.",
        "query_fol": "furry(x)",
        "context": "Animals are multicellular. Bilaterians are animals. Each chordate is a bilaterian. Vertebrates are chordates. Each mammal is a vertebrate. Mammals are furry. Every carnivore is a mammal. Carnivores are carnivorous. Felines are carnivores. Every snake is not furry. Every cat is a feline. Each tabby is a cat. Max is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => furry(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, snake(x) => ~furry(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "True"
    },
    {
        "number": 966,
        "query": "Stella is not cold-blooded.",
        "query_fol": "~cold_blooded(x)",
        "context": "Animals are multicellular. Each bilaterian is an animal. Every chordate is a bilaterian. Every snake is cold-blooded. Each vertebrate is a chordate. Mammals are vertebrates. Mammals are not cold-blooded. Each carnivore is a mammal. Carnivores are carnivorous. Each feline is a carnivore. Each cat is a feline. Tabbies are cats. Stella is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, snake(x) => cold_blooded(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => ~cold_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "True"
    },
    {
        "number": 967,
        "query": "3 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Complex numbers are imaginary. Every real number is a number. Every real number is not imaginary. Every integer is a real number. Natural numbers are integers. Natural numbers are positive. Prime numbers are natural numbers. Prime numbers are not composite. Mersenne primes are prime numbers. Each Mersenne prime is prime. 3 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 968,
        "query": "7 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Each real number is a number. Each real number is not imaginary. Each integer is a real number. Natural numbers are integers. Every natural number is not negative. Every complex number is imaginary. Prime numbers are natural numbers. Each prime number is prime. Each Mersenne prime is a prime number. Mersenne primes are prime. 7 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 969,
        "query": "31 is not real.",
        "query_fol": "~real_number(x)",
        "context": "Real numbers are numbers. Every real number is real. Integers are real numbers. Each natural number is an integer. Every natural number is positive. Each prime number is a natural number. Prime numbers are prime. Imaginary numbers are not real. Mersenne primes are prime numbers. Every Mersenne prime is not composite. 31 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime_number(x) => ~composite_number(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 970,
        "query": "Fae is not segmented.",
        "query_fol": "~segmented(x)",
        "context": "Every animal is multicellular. Nematodes are not segmented. Each invertebrate is an animal. Each protostome is an invertebrate. Every arthropod is a protostome. Each arthropod is segmented. Insects are arthropods. Every insect is not eight-legged. Lepidopterans are insects. Butterflies are lepidopterans. Painted ladies are butterflies. Fae is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, nematode(x) => ~segmented(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => segmented(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 971,
        "query": "Stella is segmented.",
        "query_fol": "segmented(x)",
        "context": "Every animal is not unicellular. Invertebrates are animals. Each protostome is an invertebrate. Each arthropod is a protostome. Every arthropod is segmented. Each insect is an arthropod. Insects are not eight-legged. Every lepidopteran is an insect. Every butterfly is a lepidopteran. Each nematode is not segmented. Every painted lady is a butterfly. Stella is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => segmented(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, nematode(x) => ~segmented(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 972,
        "query": "Wren is bony.",
        "query_fol": "bony(x)",
        "context": "Whales are bony. Each animal is not unicellular. Invertebrates are animals. Every protostome is an invertebrate. Arthropods are protostomes. Every arthropod is not bony. Each insect is an arthropod. Each insect is not eight-legged. Lepidopterans are insects. Butterflies are lepidopterans. Painted ladies are butterflies. Wren is a painted lady.",
        "rules_fol": "[FOR_ALL x, whale(x) => bony(x), FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 973,
        "query": "3 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Every real number is a number. Every real number is not imaginary. Each complex number is imaginary. Each integer is a real number. Natural numbers are integers. Natural numbers are positive. Every prime number is a natural number. Every prime number is prime. Each Mersenne prime is a prime number. Mersenne primes are prime. 3 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 974,
        "query": "Sam is small.",
        "query_fol": "small(x)",
        "context": "Every animal is not unicellular. Invertebrates are animals. Protostomes are invertebrates. Arthropods are protostomes. Arthropods are small. Each whale is not small. Each insect is an arthropod. Each insect is not eight-legged. Each lepidopteran is an insect. Each butterfly is a lepidopteran. Painted ladies are butterflies. Sam is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => small(x), FOR_ALL x, whale(x) => ~small(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 975,
        "query": "31 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Every real number is a number. Complex numbers are imaginary. Real numbers are not imaginary. Integers are real numbers. Natural numbers are integers. Natural numbers are positive. Prime numbers are natural numbers. Prime numbers are not composite. Every Mersenne prime is a prime number. Every Mersenne prime is prime. 31 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 976,
        "query": "7 is real.",
        "query_fol": "real_number(x)",
        "context": "Imaginary numbers are not real. Real numbers are numbers. Real numbers are real. Integers are real numbers. Natural numbers are integers. Natural numbers are positive. Each prime number is a natural number. Prime numbers are prime. Every Mersenne prime is a prime number. Every Mersenne prime is prime. 7 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 977,
        "query": "127 is not real.",
        "query_fol": "~real_number(x)",
        "context": "Each real number is a number. Each real number is real. Each integer is a real number. Every imaginary number is not real. Natural numbers are integers. Every natural number is not negative. Each prime number is a natural number. Prime numbers are not composite. Mersenne primes are prime numbers. Mersenne primes are prime. 127 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 978,
        "query": "Polly is not warm-blooded.",
        "query_fol": "~warm_blooded(x)",
        "context": "Animals are not unicellular. Every bilaterian is an animal. Chordates are bilaterians. Vertebrates are chordates. Mammals are vertebrates. Mammals are warm-blooded. Every snake is not warm-blooded. Carnivores are mammals. Each carnivore is carnivorous. Felines are carnivores. Cats are felines. Every tabby is a cat. Polly is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => warm_blooded(x), FOR_ALL x, snake(x) => ~warm_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 979,
        "query": "Stella is bony.",
        "query_fol": "bony(x)",
        "context": "Animals are not unicellular. Invertebrates are animals. Protostomes are invertebrates. Each whale is bony. Each arthropod is a protostome. Arthropods are not bony. Every insect is an arthropod. Every insect is six-legged. Every lepidopteran is an insect. Every butterfly is a lepidopteran. Painted ladies are butterflies. Stella is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 980,
        "query": "127 is real.",
        "query_fol": "real_number(x)",
        "context": "Each real number is a number. Every real number is real. Every integer is a real number. Natural numbers are integers. Every natural number is not negative. Each prime number is a natural number. Every prime number is not composite. Every Mersenne prime is a prime number. Imaginary numbers are not real. Every Mersenne prime is prime. 127 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => ~negative(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 981,
        "query": "31 is real.",
        "query_fol": "real_number(x)",
        "context": "Each real number is a number. Real numbers are real. Each integer is a real number. Natural numbers are integers. Natural numbers are not negative. Prime numbers are natural numbers. Every prime number is not composite. Every Mersenne prime is a prime number. Each imaginary number is not real. Mersenne primes are not composite. 31 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, mersenne_prime_number(x) => ~composite_number(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 982,
        "query": "Polly is small.",
        "query_fol": "small(x)",
        "context": "Each whale is not small. Animals are not unicellular. Each invertebrate is an animal. Protostomes are invertebrates. Every arthropod is a protostome. Arthropods are small. Each insect is an arthropod. Insects are not eight-legged. Lepidopterans are insects. Butterflies are lepidopterans. Every painted lady is a butterfly. Polly is a painted lady.",
        "rules_fol": "[FOR_ALL x, whale(x) => ~small(x), FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => small(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 983,
        "query": "Max is not furry.",
        "query_fol": "~furry(x)",
        "context": "Animals are not unicellular. Bilaterians are animals. Chordates are bilaterians. Every vertebrate is a chordate. Each mammal is a vertebrate. Mammals are furry. Every carnivore is a mammal. Carnivores are carnivorous. Felines are carnivores. Each cat is a feline. Tabbies are cats. Each snake is not furry. Max is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammals(x) => furry(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => carnivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), FOR_ALL x, snake(x) => ~furry(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 984,
        "query": "8191 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Every complex number is imaginary. Every real number is a number. Every real number is not imaginary. Integers are real numbers. Natural numbers are integers. Natural numbers are positive. Every prime number is a natural number. Prime numbers are prime. Mersenne primes are prime numbers. Mersenne primes are not composite. 8191 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, natural_number(x) => positive(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => ~composite(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 985,
        "query": "Wren is not cold-blooded.",
        "query_fol": "~cold_blooded(x)",
        "context": "Animals are not unicellular. Bilaterians are animals. Each chordate is a bilaterian. Snakes are cold-blooded. Each vertebrate is a chordate. Every mammal is a vertebrate. Each mammal is not cold-blooded. Carnivores are mammals. Carnivores are not herbivorous. Each feline is a carnivore. Cats are felines. Tabbies are cats. Wren is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, snake(x) => cold_blooded(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => ~cold_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => ~herbivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "True"
    },
    {
        "number": 986,
        "query": "127 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Each real number is a number. Every real number is not imaginary. Every integer is a real number. Natural numbers are integers. Complex numbers are imaginary. Every natural number is not negative. Each prime number is a natural number. Prime numbers are prime. Each Mersenne prime is a prime number. Every Mersenne prime is prime. 127 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime(x)]",
        "answer": "False"
    },
    {
        "number": 987,
        "query": "Fae is cold-blooded.",
        "query_fol": "cold_blooded(x)",
        "context": "Animals are multicellular. Bilaterians are animals. Each chordate is a bilaterian. Each vertebrate is a chordate. Every mammal is a vertebrate. Snakes are cold-blooded. Mammals are not cold-blooded. Every carnivore is a mammal. Carnivores are not herbivorous. Each feline is a carnivore. Cats are felines. Tabbies are cats. Fae is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, snake(x) => cold_blooded(x), FOR_ALL x, mammal(x) => ~cold_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, carnivore(x) => ~herbivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "False"
    },
    {
        "number": 988,
        "query": "Wren is not small.",
        "query_fol": "~small(x)",
        "context": "Each whale is not small. Each animal is multicellular. Invertebrates are animals. Protostomes are invertebrates. Arthropods are protostomes. Arthropods are small. Insects are arthropods. Insects are six-legged. Lepidopterans are insects. Every butterfly is a lepidopteran. Every painted lady is a butterfly. Wren is a painted lady.",
        "rules_fol": "[FOR_ALL x, whale(x) => ~small(x), FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => small(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 989,
        "query": "131071 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Real numbers are numbers. Real numbers are not imaginary. Integers are real numbers. Natural numbers are integers. Each natural number is not negative. Every prime number is a natural number. Complex numbers are imaginary. Each prime number is prime. Mersenne primes are prime numbers. Mersenne primes are prime. 131071 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => ~negative_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 990,
        "query": "Max is bony.",
        "query_fol": "bony(x)",
        "context": "Animals are not unicellular. Invertebrates are animals. Each protostome is an invertebrate. Each arthropod is a protostome. Arthropods are not bony. Every whale is bony. Every insect is an arthropod. Every insect is not eight-legged. Every lepidopteran is an insect. Each butterfly is a lepidopteran. Painted ladies are butterflies. Max is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "False"
    },
    {
        "number": 991,
        "query": "Wren is segmented.",
        "query_fol": "segmented(x)",
        "context": "Each animal is not unicellular. Each invertebrate is an animal. Protostomes are invertebrates. Each arthropod is a protostome. Arthropods are segmented. Insects are arthropods. Each nematode is not segmented. Every insect is not eight-legged. Lepidopterans are insects. Butterflies are lepidopterans. Painted ladies are butterflies. Wren is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => segmented(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, nematode(x) => ~segmented(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 992,
        "query": "8191 is not real.",
        "query_fol": "~real_number(x)",
        "context": "Real numbers are numbers. Real numbers are real. Every integer is a real number. Each natural number is an integer. Natural numbers are positive. Prime numbers are natural numbers. Every imaginary number is not real. Each prime number is not composite. Mersenne primes are prime numbers. Mersenne primes are prime. 8191 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 993,
        "query": "8191 is real.",
        "query_fol": "real_number(x)",
        "context": "Real numbers are numbers. Every imaginary number is not real. Each real number is real. Each integer is a real number. Every natural number is an integer. Natural numbers are positive. Every prime number is a natural number. Prime numbers are prime. Every Mersenne prime is a prime number. Mersenne primes are not composite. 8191 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime_number(x) => ~composite_number(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 994,
        "query": "127 is imaginary.",
        "query_fol": "imaginary_number(x)",
        "context": "Every real number is a number. Each real number is not imaginary. Integers are real numbers. Every natural number is an integer. Natural numbers are positive. Prime numbers are natural numbers. Each prime number is not composite. Each Mersenne prime is a prime number. Mersenne primes are prime. Complex numbers are imaginary. 127 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive_number(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => prime(x), FOR_ALL x, complex_number(x) => imaginary_number(x), mersenne_prime(x)]",
        "answer": "False"
    },
    {
        "number": 995,
        "query": "131071 is not imaginary.",
        "query_fol": "~imaginary_number(x)",
        "context": "Each real number is a number. Every real number is not imaginary. Each integer is a real number. Every natural number is an integer. Every natural number is positive. Prime numbers are natural numbers. Every complex number is imaginary. Prime numbers are not composite. Every Mersenne prime is a prime number. Mersenne primes are not composite. 131071 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => ~imaginary_number(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, complex_number(x) => imaginary_number(x), FOR_ALL x, prime_number(x) => ~composite_number(x), FOR_ALL x, mersenne_prime(x) => prime_number(x), FOR_ALL x, mersenne_prime(x) => ~composite(x), mersenne_prime_number(x)]",
        "answer": "True"
    },
    {
        "number": 996,
        "query": "Sally is small.",
        "query_fol": "small(x)",
        "context": "Animals are not unicellular. Each invertebrate is an animal. Each protostome is an invertebrate. Arthropods are protostomes. Every arthropod is small. Insects are arthropods. Each insect is six-legged. Lepidopterans are insects. Every butterfly is a lepidopteran. Every painted lady is a butterfly. Every whale is not small. Sally is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => ~unicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => small(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => six_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), FOR_ALL x, whale(x) => ~small(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 997,
        "query": "7 is not real.",
        "query_fol": "~real_number(x)",
        "context": "Imaginary numbers are not real. Every real number is a number. Real numbers are real. Every integer is a real number. Natural numbers are integers. Each natural number is positive. Prime numbers are natural numbers. Each prime number is prime. Mersenne primes are prime numbers. Every Mersenne prime is not composite. 7 is a Mersenne prime.",
        "rules_fol": "[FOR_ALL x, imaginary_number(x) => ~real_number(x), FOR_ALL x, real_number(x) => number(x), FOR_ALL x, real_number(x) => real(x), FOR_ALL x, integer(x) => real_number(x), FOR_ALL x, natural_number(x) => integer(x), FOR_ALL x, natural_number(x) => positive(x), FOR_ALL x, prime_number(x) => natural_number(x), FOR_ALL x, prime_number(x) => prime(x), FOR_ALL x, mersenne_prime_number(x) => prime_number(x), FOR_ALL x, mersenne_prime_number(x) => ~composite_number(x), mersenne_prime_number(x)]",
        "answer": "False"
    },
    {
        "number": 998,
        "query": "Max is not bony.",
        "query_fol": "~bony(x)",
        "context": "Animals are multicellular. Each invertebrate is an animal. Every whale is bony. Every protostome is an invertebrate. Each arthropod is a protostome. Arthropods are not bony. Every insect is an arthropod. Insects are not eight-legged. Lepidopterans are insects. Each butterfly is a lepidopteran. Each painted lady is a butterfly. Max is a painted lady.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, invertebrate(x) => animal(x), FOR_ALL x, whale(x) => bony(x), FOR_ALL x, protostome(x) => invertebrate(x), FOR_ALL x, arthropod(x) => protostome(x), FOR_ALL x, arthropod(x) => ~bony(x), FOR_ALL x, insect(x) => arthropod(x), FOR_ALL x, insect(x) => ~eight_legged(x), FOR_ALL x, lepidopteran(x) => insect(x), FOR_ALL x, butterfly(x) => lepidopteran(x), FOR_ALL x, painted_lady(x) => butterfly(x), painted_lady(x)]",
        "answer": "True"
    },
    {
        "number": 999,
        "query": "Wren is not cold-blooded.",
        "query_fol": "~cold_blooded(x)",
        "context": "Every animal is multicellular. Every bilaterian is an animal. Each chordate is a bilaterian. Each vertebrate is a chordate. Mammals are vertebrates. Mammals are not cold-blooded. Every carnivore is a mammal. Snakes are cold-blooded. Every carnivore is not herbivorous. Every feline is a carnivore. Cats are felines. Tabbies are cats. Wren is a tabby.",
        "rules_fol": "[FOR_ALL x, animal(x) => multicellular(x), FOR_ALL x, bilaterian(x) => animal(x), FOR_ALL x, chordate(x) => bilaterian(x), FOR_ALL x, vertebrate(x) => chordate(x), FOR_ALL x, mammal(x) => vertebrate(x), FOR_ALL x, mammal(x) => ~cold_blooded(x), FOR_ALL x, carnivore(x) => mammal(x), FOR_ALL x, snake(x) => cold_blooded(x), FOR_ALL x, carnivore(x) => ~herbivorous(x), FOR_ALL x, feline(x) => carnivore(x), FOR_ALL x, cat(x) => feline(x), FOR_ALL x, tabby(x) => cat(x), tabby(x)]",
        "answer": "True"
    }
]